/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/example.css":
/*!***************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/example.css ***!
  \***************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_material_colors_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! -!../node_modules/css-loader/dist/cjs.js!./material-colors.css */ \"./node_modules/css-loader/dist/cjs.js!./src/material-colors.css\");\n// Imports\n\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n___CSS_LOADER_EXPORT___.i(_node_modules_css_loader_dist_cjs_js_material_colors_css__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.light_default_contrast {\r\n  --body-color: var(--light-default-surface-dim);\r\n  --content-color: var(--light-default-surface-container-lowest);\r\n  --textboard-color: var(--light-default-primary-container);\r\n  --setboard-color: var(--light-default-surface-container-low);\r\n  --colorbutton-bg-color: var(--light-default-secondary-fixed);\r\n  --colorbutton-color: var(--light-default-on-secondary-fixed);\r\n  --colorbutton-bg-hover-color: var(--light-default-secondary-fixed-dim);\r\n\r\n  --on-button-color: var(--light-default-on-tertiary-container);\r\n  --botton-bg-color: var(--light-default-tertiary-container);\r\n  --botton-bg-hover-color: var(--light-default-tertiary-fixed-dim);\r\n  --on-button-checked-color: var(--light-default-on-tertiary);\r\n  --botton-bg-checked-color: var(--light-default-tertiary);\r\n  --botton-bg-checked-hover-color: var(\r\n    --light-default-on-tertiary-fixed-variant\r\n  );\r\n  --addbutton-container-color: var(--light-default-secondary-container);\r\n  --addbutton-container-hover-color: var(--light-default-secondary-fixed-dim);\r\n  --addbutton-color: var(--light-default-secondary);\r\n  --outline-text-color: var(--light-default-outline);\r\n  --on-body-color: var(--light-default-on-surface);\r\n  --donate-bg-color: var(--light-default-surface-container-highest);\r\n  --mode-board-bg-color: var(--light-default-surface);\r\n}\r\n\r\n.light_medium_contrast {\r\n  --body-color: var(--light-medium-surface-dim);\r\n  --content-color: var(--light-medium-surface-container-lowest);\r\n  --textboard-color: var(--light-medium-primary-container);\r\n  --setboard-color: var(--light-medium-surface-container-low);\r\n  --colorbutton-bg-color: var(--light-medium-secondary-fixed-dim);\r\n  --colorbutton-color: var(--light-medium-on-secondary-fixed);\r\n  --colorbutton-bg-hover-color: var(--light-medium-secondary-fixed-dim);\r\n\r\n  --on-button-color: var(--light-medium-on-tertiary-container);\r\n  --botton-bg-color: var(--light-medium-tertiary-container);\r\n  --botton-bg-hover-color: var(--light-medium-tertiary-fixed-dim);\r\n  --on-button-checked-color: var(--light-medium-on-tertiary);\r\n  --botton-bg-checked-color: var(--light-medium-tertiary);\r\n  --botton-bg-checked-hover-color: var(\r\n    --light-medium-on-tertiary-fixed-variant\r\n  );\r\n  --addbutton-container-color: var(--light-medium-secondary-container);\r\n  --addbutton-container-hover-color: var(--light-medium-secondary-fixed-dim);\r\n  --addbutton-color: var(--light-medium-secondary);\r\n  --outline-text-color: var(--light-medium-outline);\r\n  --on-body-color: var(--light-medium-on-surface);\r\n  --donate-bg-color: var(--light-medium-surface-container-highest);\r\n  --mode-board-bg-color: var(--light-medium-surface);\r\n}\r\n\r\n.light_high_contrast {\r\n  --body-color: var(--light-high-surface-dim);\r\n  --content-color: var(--light-high-surface-container-lowest);\r\n  --textboard-color: var(--light-high-primary-container);\r\n  --setboard-color: var(--light-high-surface-container-low);\r\n  --colorbutton-bg-color: var(--light-high-secondary-fixed-dim);\r\n  --colorbutton-color: var(--light-high-on-secondary-fixed);\r\n  --colorbutton-bg-hover-color: var(--light-high-secondary-fixed-dim);\r\n\r\n  --on-button-color: var(--light-high-on-tertiary-container);\r\n  --botton-bg-color: var(--light-high-tertiary-container);\r\n  --botton-bg-hover-color: var(--light-high-tertiary-fixed-dim);\r\n  --on-button-checked-color: var(--light-high-on-tertiary);\r\n  --botton-bg-checked-color: var(--light-high-tertiary);\r\n  --botton-bg-checked-hover-color: var(--light-high-on-tertiary-fixed-variant);\r\n  --addbutton-container-color: var(--light-high-secondary-container);\r\n  --addbutton-container-hover-color: var(--light-high-secondary-fixed-dim);\r\n  --addbutton-color: var(--light-high-secondary);\r\n  --outline-text-color: var(--light-high-outline);\r\n  --on-body-color: var(--light-high-on-surface);\r\n  --donate-bg-color: var(--light-high-surface-container-highest);\r\n  --mode-board-bg-color: var(--light-high-surface);\r\n}\r\n\r\n.dark_default_contrast {\r\n  --body-color: var(--dark-default-surface-dim);\r\n  --content-color: var(--dark-default-surface-container-lowest);\r\n  --textboard-color: var(--dark-default-primary-container);\r\n  --setboard-color: var(--dark-default-surface-container-low);\r\n  --colorbutton-bg-color: var(--dark-default-secondary-fixed-dim);\r\n  --colorbutton-color: var(--dark-default-on-secondary-fixed);\r\n  --colorbutton-bg-hover-color: var(--dark-default-secondary-fixed-dim);\r\n\r\n  --on-button-color: var(--dark-default-on-tertiary-container);\r\n  --botton-bg-color: var(--dark-default-tertiary-container);\r\n  --botton-bg-hover-color: var(--dark-default-tertiary-fixed-dim);\r\n  --on-button-checked-color: var(--dark-default-on-tertiary);\r\n  --botton-bg-checked-color: var(--dark-default-tertiary);\r\n  --botton-bg-checked-hover-color: var(\r\n    --dark-default-on-tertiary-fixed-variant\r\n  );\r\n  --addbutton-container-color: var(--dark-default-secondary-container);\r\n  --addbutton-container-hover-color: var(--dark-default-secondary-fixed-dim);\r\n  --addbutton-color: var(--dark-default-secondary);\r\n  --outline-text-color: var(--dark-default-outline);\r\n  --on-body-color: var(--dark-default-on-surface);\r\n  --donate-bg-color: var(--dark-default-surface-container-highest);\r\n  --mode-board-bg-color: var(--dark-default-surface);\r\n}\r\n\r\n.dark_medium_contrast {\r\n  --body-color: var(--dark-medium-surface-dim);\r\n  --content-color: var(--dark-medium-surface-container-lowest);\r\n  --textboard-color: var(--dark-medium-primary-container);\r\n  --setboard-color: var(--dark-medium-surface-container-low);\r\n  --colorbutton-bg-color: var(--dark-medium-secondary-fixed-dim);\r\n  --colorbutton-color: var(--dark-medium-on-secondary-fixed);\r\n  --colorbutton-bg-hover-color: var(--dark-medium-secondary-fixed-dim);\r\n\r\n  --on-button-color: var(--dark-medium-on-tertiary-container);\r\n  --botton-bg-color: var(--dark-medium-tertiary-container);\r\n  --botton-bg-hover-color: var(--dark-medium-tertiary-fixed-dim);\r\n  --on-button-checked-color: var(--dark-medium-on-tertiary);\r\n  --botton-bg-checked-color: var(--dark-medium-tertiary);\r\n  --botton-bg-checked-hover-color: var(--dark-medium-on-tertiary-fixed-variant);\r\n  --addbutton-container-color: var(--dark-medium-secondary-container);\r\n  --addbutton-container-hover-color: var(--dark-medium-secondary-fixed-dim);\r\n  --addbutton-color: var(--dark-medium-secondary);\r\n  --outline-text-color: var(--dark-medium-outline);\r\n  --on-body-color: var(--dark-medium-on-surface);\r\n  --donate-bg-color: var(--dark-medium-surface-container-highest);\r\n  --mode-board-bg-color: var(--dark-medium-surface);\r\n}\r\n\r\n.dark_high_contrast {\r\n  --body-color: var(--dark-high-surface-dim);\r\n  --content-color: var(--dark-high-surface-container-lowest);\r\n  --textboard-color: var(--dark-high-primary-container);\r\n  --setboard-color: var(--dark-high-surface-container-low);\r\n  --colorbutton-bg-color: var(--dark-high-secondary-fixed-dim);\r\n  --colorbutton-color: var(--dark-high-on-secondary-fixed);\r\n  --colorbutton-bg-hover-color: var(--dark-high-secondary-fixed-dim);\r\n\r\n  --on-button-color: var(--dark-high-on-tertiary-container);\r\n  --botton-bg-color: var(--dark-high-tertiary-container);\r\n  --botton-bg-hover-color: var(--dark-high-tertiary-fixed-dim);\r\n  --on-button-checked-color: var(--dark-high-on-tertiary);\r\n  --botton-bg-checked-color: var(--dark-high-tertiary);\r\n  --botton-bg-checked-hover-color: var(--dark-high-on-tertiary-fixed-variant);\r\n  --addbutton-container-color: var(--dark-high-secondary-container);\r\n  --addbutton-container-hover-color: var(--dark-high-secondary-fixed-dim);\r\n  --addbutton-color: var(--dark-high-secondary);\r\n  --outline-text-color: var(--dark-high-outline);\r\n  --on-body-color: var(--dark-high-on-surface);\r\n  --donate-bg-color: var(--dark-high-surface-container-highest);\r\n  --mode-board-bg-color: var(--dark-high-surface);\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  background: var(--body-color);\r\n}\r\n\r\n.content {\r\n  position: relative;\r\n  width: 1067px;\r\n  height: 752px;\r\n  margin: 30px auto 0 auto;\r\n  padding-top: 1px;\r\n  border-radius: 30px;\r\n  background: var(--content-color);\r\n}\r\n\r\n.textboard {\r\n  margin: 26px auto auto auto;\r\n  width: 854px;\r\n  height: 293px;\r\n  border-radius: 20px;\r\n  background: var(--textboard-color);\r\n}\r\n\r\n.fontboard,\r\n.imageboard {\r\n  width: 427px;\r\n  height: 169px;\r\n  margin-left: 107px;\r\n  margin-top: 36px;\r\n  border-radius: 20px;\r\n  background: var(--setboard-color);\r\n}\r\n\r\n.fontbutton,\r\n.imagebutton {\r\n  display: flex;\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 20px;\r\n  background: var(--addbutton-container-color);\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.fontbutton:hover,\r\n.imagebutton:hover {\r\n  background: var(--addbutton-container-hover-color);\r\n  cursor: pointer;\r\n}\r\n\r\n.fontbutton path,\r\n.imagebutton path {\r\n  fill: var(--addbutton-color);\r\n}\r\n\r\n.fontbutton {\r\n  position: absolute;\r\n  top: 392px;\r\n  left: 162px;\r\n}\r\n\r\n.imagebutton {\r\n  position: absolute;\r\n  top: 596px;\r\n  left: 162px;\r\n}\r\n\r\n#imageInput {\r\n  position: absolute;\r\n  height: 1px;\r\n  width: 1px;\r\n  opacity: 0;\r\n  right: 0;\r\n  top: 0;\r\n}\r\n\r\n.modeboard {\r\n  position: absolute;\r\n  top: 356px;\r\n  left: 557px;\r\n  width: 291px;\r\n  height: 374px;\r\n  flex-shrink: 0;\r\n  border-radius: 20px;\r\n  background: var(--setboard-color);\r\n}\r\n\r\n.colorbutton {\r\n  width: 48px;\r\n  height: 48px;\r\n  position: absolute;\r\n  top: 368px;\r\n  right: 138px;\r\n  border-radius: 24px;\r\n  z-index: 3;\r\n  cursor: pointer;\r\n  background: var(--colorbutton-bg-color);\r\n}\r\n\r\n.colorbutton path {\r\n  fill: var(--colorbutton-color);\r\n}\r\n\r\n.colorbutton:hover {\r\n  background: var(--colorbutton-bg-hover-color);\r\n}\r\n\r\n.inputcolor {\r\n  position: absolute;\r\n  top: 414px;\r\n  right: 138px;\r\n  width: 2px;\r\n  height: 2px;\r\n  opacity: 0;\r\n}\r\n\r\n.contrast {\r\n  width: 50px;\r\n  height: 162px;\r\n  border-radius: 20px;\r\n  position: absolute;\r\n  top: 440px;\r\n  right: 136px;\r\n  background: var(--setboard-color);\r\n}\r\n\r\n.darkmode {\r\n  width: 50px;\r\n  height: 109px;\r\n  border-radius: 20px;\r\n  position: absolute;\r\n  top: 617px;\r\n  right: 136px;\r\n  background: var(--setboard-color);\r\n}\r\n\r\n.content svg {\r\n  pointer-events: none;\r\n}\r\n\r\ninput[type=\"radio\"] {\r\n  display: inline-block;\r\n  appearance: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background: var(--botton-bg-color);\r\n  cursor: pointer;\r\n}\r\n\r\ninput[type=\"radio\"]:checked {\r\n  background: var(--botton-bg-checked-color);\r\n}\r\n\r\ninput[type=\"radio\"]:hover {\r\n  background: var(--botton-bg-hover-color);\r\n}\r\n\r\ninput[type=\"radio\"]:checked:hover {\r\n  background: var(--botton-bg-checked-hover-color);\r\n}\r\n\r\n#default {\r\n  position: absolute;\r\n  top: 449px;\r\n  right: 141px;\r\n}\r\n\r\n.default_contrast {\r\n  position: absolute;\r\n  top: 453px;\r\n  right: 145px;\r\n}\r\n\r\n#medium {\r\n  position: absolute;\r\n  top: 501px;\r\n  right: 141px;\r\n}\r\n\r\n.medium_contrast {\r\n  position: absolute;\r\n  top: 505px;\r\n  right: 145px;\r\n}\r\n\r\n#high {\r\n  position: absolute;\r\n  top: 557px;\r\n  right: 141px;\r\n}\r\n\r\n.high_contrast {\r\n  position: absolute;\r\n  top: 561px;\r\n  right: 145px;\r\n}\r\n\r\n#light_mode {\r\n  position: absolute;\r\n  top: 626px;\r\n  right: 141px;\r\n}\r\n\r\n.light_mode {\r\n  position: absolute;\r\n  top: 630px;\r\n  right: 145px;\r\n}\r\n\r\n#dark_mode {\r\n  position: absolute;\r\n  top: 678px;\r\n  right: 141px;\r\n}\r\n\r\n.dark_mode {\r\n  position: absolute;\r\n  top: 682px;\r\n  right: 145px;\r\n}\r\n\r\n.default_contrast path,\r\n.medium_contrast path,\r\n.high_contrast path,\r\n.light_mode path,\r\n.dark_mode path {\r\n  fill: var(--on-button-color);\r\n}\r\n\r\n.selectedsvg path {\r\n  fill: var(--on-button-checked-color);\r\n}\r\n\r\n.footer {\r\n  margin: 0 auto;\r\n  margin-top: 16px;\r\n  width: 1067px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.creator {\r\n  display: inline-block;\r\n  width: 129px;\r\n  height: 30px;\r\n  margin-left: 395px;\r\n  text-align: center;\r\n  font-family: Inter;\r\n  font-size: 15px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: 30px;\r\n  color: var(--outline-text-color);\r\n}\r\n\r\n.github {\r\n  margin-left: 75px;\r\n  cursor: pointer;\r\n}\r\n\r\n.xhs {\r\n  margin-left: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.donate {\r\n  margin-left: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.xhs path,\r\n.donate path {\r\n  fill: var(--body-color);\r\n}\r\n\r\n.github path,\r\n.xhs path:first-child,\r\n.donate path:first-child {\r\n  fill: var(--on-body-color);\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  opacity: 0;\r\n}\r\n\r\n.modes {\r\n  display: none;\r\n  width: 252px;\r\n  height: 374px;\r\n  border-radius: 20px;\r\n  background: var(--mode-board-bg-color);\r\n  position: absolute;\r\n  top: 246px;\r\n  left: 282px;\r\n}\r\n\r\n.modes svg {\r\n  position: absolute;\r\n  top: 8px;\r\n  left: 220px;\r\n  pointer-events: all;\r\n  cursor: pointer;\r\n}\r\n\r\n.modes path {\r\n  fill: var(--on-body-color);\r\n}\r\n\r\n.modes .options {\r\n  margin-top: 24px;\r\n  margin-left: 7px;\r\n  display: flex;\r\n  width: 237px;\r\n  height: 338px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n  flex-direction: column;\r\n}\r\n\r\n.options div {\r\n  margin: 2.5 0;\r\n  flex: 1;\r\n  color: var(--on-body-color);\r\n  font-size: 14px;\r\n  border-radius: 15px;\r\n  line-height: 37.5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.options div:hover {\r\n  background: var(--body-color);\r\n}\r\n\r\n.options .selected {\r\n  background: var(--donate-bg-color);\r\n}\r\n\r\n.donateboard {\r\n  display: none;\r\n  width: 267px;\r\n  height: 179px;\r\n  position: absolute;\r\n  top: 567px;\r\n  left: 572px;\r\n  background: var(--donate-bg-color);\r\n  border-radius: 20px;\r\n}\r\n\r\n.relative-point {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.donateboard svg {\r\n  position: absolute;\r\n  top: 8px;\r\n  left: 230px;\r\n  pointer-events: all;\r\n  cursor: pointer;\r\n}\r\n\r\n.donateboard path {\r\n  fill: var(--on-body-color);\r\n}\r\n\r\n.donatext {\r\n  width: 200px;\r\n  height: 20px;\r\n  color: var(--outline-text-color);\r\n  font-size: 10px;\r\n  position: absolute;\r\n  top: 28px;\r\n  left: 22px;\r\n}\r\n\r\n.donateboard img {\r\n  width: 75px;\r\n  height: 73px;\r\n}\r\n\r\n.alipay {\r\n  position: absolute;\r\n  top: 59px;\r\n  left: 32px;\r\n}\r\n\r\n.wpay {\r\n  position: absolute;\r\n  top: 59px;\r\n  left: 153px;\r\n}\r\n\r\n.pay {\r\n  display: flex;\r\n  width: 42px;\r\n  height: 12px;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  color: var(--on-body-color);\r\n  text-align: center;\r\n  font-size: 12px;\r\n}\r\n\r\n.alipay_txt {\r\n  position: absolute;\r\n  bottom: 29px;\r\n  left: 52px;\r\n}\r\n\r\n.wpay_txt {\r\n  position: absolute;\r\n  bottom: 29px;\r\n  left: 167px;\r\n}\r\n`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://material-color-css/./src/example.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/material-colors.css":
/*!***********************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/material-colors.css ***!
  \***********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root {\r\n    --light-default-primary: rgb(143 76 56);\r\n    --light-default-surface-tint: rgb(143 76 56);\r\n    --light-default-on-primary: rgb(255 255 255);\r\n    --light-default-primary-container: rgb(255 219 209);\r\n    --light-default-on-primary-container: rgb(58 11 1);\r\n    --light-default-secondary: rgb(119 87 78);\r\n    --light-default-on-secondary: rgb(255 255 255);\r\n    --light-default-secondary-container: rgb(255 219 209);\r\n    --light-default-on-secondary-container: rgb(44 21 15);\r\n    --light-default-tertiary: rgb(108 93 47);\r\n    --light-default-on-tertiary: rgb(255 255 255);\r\n    --light-default-tertiary-container: rgb(245 225 167);\r\n    --light-default-on-tertiary-container: rgb(35 27 0);\r\n    --light-default-error: rgb(186 26 26);\r\n    --light-default-on-error: rgb(255 255 255);\r\n    --light-default-error-container: rgb(255 218 214);\r\n    --light-default-on-error-container: rgb(65 0 2);\r\n    --light-default-background: rgb(255 248 246);\r\n    --light-default-on-background: rgb(35 25 23);\r\n    --light-default-surface: rgb(255 248 246);\r\n    --light-default-on-surface: rgb(35 25 23);\r\n    --light-default-surface-variant: rgb(245 222 216);\r\n    --light-default-on-surface-variant: rgb(83 67 63);\r\n    --light-default-outline: rgb(133 115 110);\r\n    --light-default-outline-variant: rgb(216 194 188);\r\n    --light-default-shadow: rgb(0 0 0);\r\n    --light-default-scrim: rgb(0 0 0);\r\n    --light-default-inverse-surface: rgb(57 46 43);\r\n    --light-default-inverse-on-surface: rgb(255 237 232);\r\n    --light-default-inverse-primary: rgb(255 181 160);\r\n    --light-default-primary-fixed: rgb(255 219 209);\r\n    --light-default-on-primary-fixed: rgb(58 11 1);\r\n    --light-default-primary-fixed-dim: rgb(255 181 160);\r\n    --light-default-on-primary-fixed-variant: rgb(114 53 35);\r\n    --light-default-secondary-fixed: rgb(255 219 209);\r\n    --light-default-on-secondary-fixed: rgb(44 21 15);\r\n    --light-default-secondary-fixed-dim: rgb(231 189 178);\r\n    --light-default-on-secondary-fixed-variant: rgb(93 64 55);\r\n    --light-default-tertiary-fixed: rgb(245 225 167);\r\n    --light-default-on-tertiary-fixed: rgb(35 27 0);\r\n    --light-default-tertiary-fixed-dim: rgb(216 197 141);\r\n    --light-default-on-tertiary-fixed-variant: rgb(83 70 25);\r\n    --light-default-surface-dim: rgb(232 214 210);\r\n    --light-default-surface-bright: rgb(255 248 246);\r\n    --light-default-surface-container-lowest: rgb(255 255 255);\r\n    --light-default-surface-container-low: rgb(255 241 237);\r\n    --light-default-surface-container: rgb(252 234 229);\r\n    --light-default-surface-container-high: rgb(247 228 224);\r\n    --light-default-surface-container-highest: rgb(241 223 218);\r\n\r\n    --light-medium-primary: rgb(109 49 31);\r\n    --light-medium-surface-tint: rgb(143 76 56);\r\n    --light-medium-on-primary: rgb(255 255 255);\r\n    --light-medium-primary-container: rgb(170 97 76);\r\n    --light-medium-on-primary-container: rgb(255 255 255);\r\n    --light-medium-secondary: rgb(89 60 52);\r\n    --light-medium-on-secondary: rgb(255 255 255);\r\n    --light-medium-secondary-container: rgb(143 109 99);\r\n    --light-medium-on-secondary-container: rgb(255 255 255);\r\n    --light-medium-tertiary: rgb(78 66 22);\r\n    --light-medium-on-tertiary: rgb(255 255 255);\r\n    --light-medium-tertiary-container: rgb(131 116 66);\r\n    --light-medium-on-tertiary-container: rgb(255 255 255);\r\n    --light-medium-error: rgb(140 0 9);\r\n    --light-medium-on-error: rgb(255 255 255);\r\n    --light-medium-error-container: rgb(218 52 46);\r\n    --light-medium-on-error-container: rgb(255 255 255);\r\n    --light-medium-background: rgb(255 248 246);\r\n    --light-medium-on-background: rgb(35 25 23);\r\n    --light-medium-surface: rgb(255 248 246);\r\n    --light-medium-on-surface: rgb(35 25 23);\r\n    --light-medium-surface-variant: rgb(245 222 216);\r\n    --light-medium-on-surface-variant: rgb(79 63 59);\r\n    --light-medium-outline: rgb(108 91 87);\r\n    --light-medium-outline-variant: rgb(137 119 114);\r\n    --light-medium-shadow: rgb(0 0 0);\r\n    --light-medium-scrim: rgb(0 0 0);\r\n    --light-medium-inverse-surface: rgb(57 46 43);\r\n    --light-medium-inverse-on-surface: rgb(255 237 232);\r\n    --light-medium-inverse-primary: rgb(255 181 160);\r\n    --light-medium-primary-fixed: rgb(170 97 76);\r\n    --light-medium-on-primary-fixed: rgb(255 255 255);\r\n    --light-medium-primary-fixed-dim: rgb(140 73 54);\r\n    --light-medium-on-primary-fixed-variant: rgb(255 255 255);\r\n    --light-medium-secondary-fixed: rgb(143 109 99);\r\n    --light-medium-on-secondary-fixed: rgb(255 255 255);\r\n    --light-medium-secondary-fixed-dim: rgb(116 84 75);\r\n    --light-medium-on-secondary-fixed-variant: rgb(255 255 255);\r\n    --light-medium-tertiary-fixed: rgb(131 116 66);\r\n    --light-medium-on-tertiary-fixed: rgb(255 255 255);\r\n    --light-medium-tertiary-fixed-dim: rgb(105 91 44);\r\n    --light-medium-on-tertiary-fixed-variant: rgb(255 255 255);\r\n    --light-medium-surface-dim: rgb(232 214 210);\r\n    --light-medium-surface-bright: rgb(255 248 246);\r\n    --light-medium-surface-container-lowest: rgb(255 255 255);\r\n    --light-medium-surface-container-low: rgb(255 241 237);\r\n    --light-medium-surface-container: rgb(252 234 229);\r\n    --light-medium-surface-container-high: rgb(247 228 224);\r\n    --light-medium-surface-container-highest: rgb(241 223 218);\r\n\r\n    --light-high-primary: rgb(67 17 4);\r\n    --light-high-surface-tint: rgb(143 76 56);\r\n    --light-high-on-primary: rgb(255 255 255);\r\n    --light-high-primary-container: rgb(109 49 31);\r\n    --light-high-on-primary-container: rgb(255 255 255);\r\n    --light-high-secondary: rgb(52 28 21);\r\n    --light-high-on-secondary: rgb(255 255 255);\r\n    --light-high-secondary-container: rgb(89 60 52);\r\n    --light-high-on-secondary-container: rgb(255 255 255);\r\n    --light-high-tertiary: rgb(43 33 0);\r\n    --light-high-on-tertiary: rgb(255 255 255);\r\n    --light-high-tertiary-container: rgb(78 66 22);\r\n    --light-high-on-tertiary-container: rgb(255 255 255);\r\n    --light-high-error: rgb(78 0 2);\r\n    --light-high-on-error: rgb(255 255 255);\r\n    --light-high-error-container: rgb(140 0 9);\r\n    --light-high-on-error-container: rgb(255 255 255);\r\n    --light-high-background: rgb(255 248 246);\r\n    --light-high-on-background: rgb(35 25 23);\r\n    --light-high-surface: rgb(255 248 246);\r\n    --light-high-on-surface: rgb(0 0 0);\r\n    --light-high-surface-variant: rgb(245 222 216);\r\n    --light-high-on-surface-variant: rgb(46 33 29);\r\n    --light-high-outline: rgb(79 63 59);\r\n    --light-high-outline-variant: rgb(79 63 59);\r\n    --light-high-shadow: rgb(0 0 0);\r\n    --light-high-scrim: rgb(0 0 0);\r\n    --light-high-inverse-surface: rgb(57 46 43);\r\n    --light-high-inverse-on-surface: rgb(255 255 255);\r\n    --light-high-inverse-primary: rgb(255 231 225);\r\n    --light-high-primary-fixed: rgb(109 49 31);\r\n    --light-high-on-primary-fixed: rgb(255 255 255);\r\n    --light-high-primary-fixed-dim: rgb(81 28 12);\r\n    --light-high-on-primary-fixed-variant: rgb(255 255 255);\r\n    --light-high-secondary-fixed: rgb(89 60 52);\r\n    --light-high-on-secondary-fixed: rgb(255 255 255);\r\n    --light-high-secondary-fixed-dim: rgb(64 38 31);\r\n    --light-high-on-secondary-fixed-variant: rgb(255 255 255);\r\n    --light-high-tertiary-fixed: rgb(78 66 22);\r\n    --light-high-on-tertiary-fixed: rgb(255 255 255);\r\n    --light-high-tertiary-fixed-dim: rgb(55 44 2);\r\n    --light-high-on-tertiary-fixed-variant: rgb(255 255 255);\r\n    --light-high-surface-dim: rgb(232 214 210);\r\n    --light-high-surface-bright: rgb(255 248 246);\r\n    --light-high-surface-container-lowest: rgb(255 255 255);\r\n    --light-high-surface-container-low: rgb(255 241 237);\r\n    --light-high-surface-container: rgb(252 234 229);\r\n    --light-high-surface-container-high: rgb(247 228 224);\r\n    --light-high-surface-container-highest: rgb(241 223 218);\r\n\r\n    --dark-default-primary: rgb(255 181 160);\r\n    --dark-default-surface-tint: rgb(255 181 160);\r\n    --dark-default-on-primary: rgb(86 31 15);\r\n    --dark-default-primary-container: rgb(114 53 35);\r\n    --dark-default-on-primary-container: rgb(255 219 209);\r\n    --dark-default-secondary: rgb(231 189 178);\r\n    --dark-default-on-secondary: rgb(68 42 34);\r\n    --dark-default-secondary-container: rgb(93 64 55);\r\n    --dark-default-on-secondary-container: rgb(255 219 209);\r\n    --dark-default-tertiary: rgb(216 197 141);\r\n    --dark-default-on-tertiary: rgb(59 47 5);\r\n    --dark-default-tertiary-container: rgb(83 70 25);\r\n    --dark-default-on-tertiary-container: rgb(245 225 167);\r\n    --dark-default-error: rgb(255 180 171);\r\n    --dark-default-on-error: rgb(105 0 5);\r\n    --dark-default-error-container: rgb(147 0 10);\r\n    --dark-default-on-error-container: rgb(255 218 214);\r\n    --dark-default-background: rgb(26 17 15);\r\n    --dark-default-on-background: rgb(241 223 218);\r\n    --dark-default-surface: rgb(26 17 15);\r\n    --dark-default-on-surface: rgb(241 223 218);\r\n    --dark-default-surface-variant: rgb(83 67 63);\r\n    --dark-default-on-surface-variant: rgb(216 194 188);\r\n    --dark-default-outline: rgb(160 140 135);\r\n    --dark-default-outline-variant: rgb(83 67 63);\r\n    --dark-default-shadow: rgb(0 0 0);\r\n    --dark-default-scrim: rgb(0 0 0);\r\n    --dark-default-inverse-surface: rgb(241 223 218);\r\n    --dark-default-inverse-on-surface: rgb(57 46 43);\r\n    --dark-default-inverse-primary: rgb(143 76 56);\r\n    --dark-default-primary-fixed: rgb(255 219 209);\r\n    --dark-default-on-primary-fixed: rgb(58 11 1);\r\n    --dark-default-primary-fixed-dim: rgb(255 181 160);\r\n    --dark-default-on-primary-fixed-variant: rgb(114 53 35);\r\n    --dark-default-secondary-fixed: rgb(255 219 209);\r\n    --dark-default-on-secondary-fixed: rgb(44 21 15);\r\n    --dark-default-secondary-fixed-dim: rgb(231 189 178);\r\n    --dark-default-on-secondary-fixed-variant: rgb(93 64 55);\r\n    --dark-default-tertiary-fixed: rgb(245 225 167);\r\n    --dark-default-on-tertiary-fixed: rgb(35 27 0);\r\n    --dark-default-tertiary-fixed-dim: rgb(216 197 141);\r\n    --dark-default-on-tertiary-fixed-variant: rgb(83 70 25);\r\n    --dark-default-surface-dim: rgb(26 17 15);\r\n    --dark-default-surface-bright: rgb(66 55 52);\r\n    --dark-default-surface-container-lowest: rgb(20 12 10);\r\n    --dark-default-surface-container-low: rgb(35 25 23);\r\n    --dark-default-surface-container: rgb(39 29 27);\r\n    --dark-default-surface-container-high: rgb(50 40 37);\r\n    --dark-default-surface-container-highest: rgb(61 50 47);\r\n\r\n    --dark-medium-primary: rgb(255 187 167);\r\n    --dark-medium-surface-tint: rgb(255 181 160);\r\n    --dark-medium-on-primary: rgb(49 7 0);\r\n    --dark-medium-primary-container: rgb(203 124 101);\r\n    --dark-medium-on-primary-container: rgb(0 0 0);\r\n    --dark-medium-secondary: rgb(236 193 182);\r\n    --dark-medium-on-secondary: rgb(38 16 10);\r\n    --dark-medium-secondary-container: rgb(174 136 126);\r\n    --dark-medium-on-secondary-container: rgb(0 0 0);\r\n    --dark-medium-tertiary: rgb(221 202 145);\r\n    --dark-medium-on-tertiary: rgb(29 22 0);\r\n    --dark-medium-tertiary-container: rgb(160 144 92);\r\n    --dark-medium-on-tertiary-container: rgb(0 0 0);\r\n    --dark-medium-error: rgb(255 186 177);\r\n    --dark-medium-on-error: rgb(55 0 1);\r\n    --dark-medium-error-container: rgb(255 84 73);\r\n    --dark-medium-on-error-container: rgb(0 0 0);\r\n    --dark-medium-background: rgb(26 17 15);\r\n    --dark-medium-on-background: rgb(241 223 218);\r\n    --dark-medium-surface: rgb(26 17 15);\r\n    --dark-medium-on-surface: rgb(255 249 248);\r\n    --dark-medium-surface-variant: rgb(83 67 63);\r\n    --dark-medium-on-surface-variant: rgb(220 198 192);\r\n    --dark-medium-outline: rgb(179 158 153);\r\n    --dark-medium-outline-variant: rgb(146 127 122);\r\n    --dark-medium-shadow: rgb(0 0 0);\r\n    --dark-medium-scrim: rgb(0 0 0);\r\n    --dark-medium-inverse-surface: rgb(241 223 218);\r\n    --dark-medium-inverse-on-surface: rgb(50 40 37);\r\n    --dark-medium-inverse-primary: rgb(116 54 36);\r\n    --dark-medium-primary-fixed: rgb(255 219 209);\r\n    --dark-medium-on-primary-fixed: rgb(40 5 0);\r\n    --dark-medium-primary-fixed-dim: rgb(255 181 160);\r\n    --dark-medium-on-primary-fixed-variant: rgb(93 37 20);\r\n    --dark-medium-secondary-fixed: rgb(255 219 209);\r\n    --dark-medium-on-secondary-fixed: rgb(32 11 6);\r\n    --dark-medium-secondary-fixed-dim: rgb(231 189 178);\r\n    --dark-medium-on-secondary-fixed-variant: rgb(75 47 40);\r\n    --dark-medium-tertiary-fixed: rgb(245 225 167);\r\n    --dark-medium-on-tertiary-fixed: rgb(23 17 0);\r\n    --dark-medium-tertiary-fixed-dim: rgb(216 197 141);\r\n    --dark-medium-on-tertiary-fixed-variant: rgb(65 53 10);\r\n    --dark-medium-surface-dim: rgb(26 17 15);\r\n    --dark-medium-surface-bright: rgb(66 55 52);\r\n    --dark-medium-surface-container-lowest: rgb(20 12 10);\r\n    --dark-medium-surface-container-low: rgb(35 25 23);\r\n    --dark-medium-surface-container: rgb(39 29 27);\r\n    --dark-medium-surface-container-high: rgb(50 40 37);\r\n    --dark-medium-surface-container-highest: rgb(61 50 47);\r\n\r\n    --dark-high-primary: rgb(255 249 248);\r\n    --dark-high-surface-tint: rgb(255 181 160);\r\n    --dark-high-on-primary: rgb(0 0 0);\r\n    --dark-high-primary-container: rgb(255 187 167);\r\n    --dark-high-on-primary-container: rgb(0 0 0);\r\n    --dark-high-secondary: rgb(255 249 248);\r\n    --dark-high-on-secondary: rgb(0 0 0);\r\n    --dark-high-secondary-container: rgb(236 193 182);\r\n    --dark-high-on-secondary-container: rgb(0 0 0);\r\n    --dark-high-tertiary: rgb(255 250 246);\r\n    --dark-high-on-tertiary: rgb(0 0 0);\r\n    --dark-high-tertiary-container: rgb(221 202 145);\r\n    --dark-high-on-tertiary-container: rgb(0 0 0);\r\n    --dark-high-error: rgb(255 249 249);\r\n    --dark-high-on-error: rgb(0 0 0);\r\n    --dark-high-error-container: rgb(255 186 177);\r\n    --dark-high-on-error-container: rgb(0 0 0);\r\n    --dark-high-background: rgb(26 17 15);\r\n    --dark-high-on-background: rgb(241 223 218);\r\n    --dark-high-surface: rgb(26 17 15);\r\n    --dark-high-on-surface: rgb(255 255 255);\r\n    --dark-high-surface-variant: rgb(83 67 63);\r\n    --dark-high-on-surface-variant: rgb(255 249 248);\r\n    --dark-high-outline: rgb(220 198 192);\r\n    --dark-high-outline-variant: rgb(220 198 192);\r\n    --dark-high-shadow: rgb(0 0 0);\r\n    --dark-high-scrim: rgb(0 0 0);\r\n    --dark-high-inverse-surface: rgb(241 223 218);\r\n    --dark-high-inverse-on-surface: rgb(0 0 0);\r\n    --dark-high-inverse-primary: rgb(77 25 9);\r\n    --dark-high-primary-fixed: rgb(255 224 216);\r\n    --dark-high-on-primary-fixed: rgb(0 0 0);\r\n    --dark-high-primary-fixed-dim: rgb(255 187 167);\r\n    --dark-high-on-primary-fixed-variant: rgb(49 7 0);\r\n    --dark-high-secondary-fixed: rgb(255 224 216);\r\n    --dark-high-on-secondary-fixed: rgb(0 0 0);\r\n    --dark-high-secondary-fixed-dim: rgb(236 193 182);\r\n    --dark-high-on-secondary-fixed-variant: rgb(38 16 10);\r\n    --dark-high-tertiary-fixed: rgb(250 230 171);\r\n    --dark-high-on-tertiary-fixed: rgb(0 0 0);\r\n    --dark-high-tertiary-fixed-dim: rgb(221 202 145);\r\n    --dark-high-on-tertiary-fixed-variant: rgb(29 22 0);\r\n    --dark-high-surface-dim: rgb(26 17 15);\r\n    --dark-high-surface-bright: rgb(66 55 52);\r\n    --dark-high-surface-container-lowest: rgb(20 12 10);\r\n    --dark-high-surface-container-low: rgb(35 25 23);\r\n    --dark-high-surface-container: rgb(39 29 27);\r\n    --dark-high-surface-container-high: rgb(50 40 37);\r\n    --dark-high-surface-container-highest: rgb(61 50 47);\r\n  }\r\n  `, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://material-color-css/./src/material-colors.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://material-color-css/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://material-color-css/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/example.css":
/*!*************************!*\
  !*** ./src/example.css ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_example_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./example.css */ \"./node_modules/css-loader/dist/cjs.js!./src/example.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\noptions.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_example_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_example_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_example_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_example_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://material-color-css/./src/example.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://material-color-css/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://material-color-css/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://material-color-css/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://material-color-css/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://material-color-css/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://material-color-css/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/example.js":
/*!************************!*\
  !*** ./src/example.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _example_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./example.css */ \"./src/example.css\");\n/* harmony import */ var material_color_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! material-color-css */ \"./node_modules/material-color-css/index.js\");\n\r\n\r\n\r\n\r\nlet scheme;\r\nconst color = document.querySelector('input[type=\"color\"]');\r\ncolor.addEventListener(\"input\", (e) => {\r\n  const color = e.target.value;\r\n  if (scheme) {\r\n    (0,material_color_css__WEBPACK_IMPORTED_MODULE_1__.updateColors)(color, scheme);\r\n  } else {\r\n    (0,material_color_css__WEBPACK_IMPORTED_MODULE_1__.updateColors)(color);\r\n  }\r\n});\r\n\r\ndocument.querySelector(\".imagebutton\").addEventListener(\"click\", () => {\r\n  document.querySelector(\"#imageInput\").click();\r\n});\r\n\r\ndocument.querySelector(\".colorbutton\").addEventListener(\"click\", () => {\r\n  document.querySelector(\".inputcolor\").click();\r\n});\r\n\r\ndocument.querySelector(\".github\").addEventListener(\"click\", () => {\r\n  document.querySelector(\".githublink\").click();\r\n});\r\n\r\ndocument.querySelector(\".xhs\").addEventListener(\"click\", () => {\r\n  document.querySelector(\".xhslink\").click();\r\n});\r\n\r\ndocument.querySelector(\".donate\").addEventListener(\"click\", () => {\r\n  const donateboard = document.querySelector(\".donateboard\");\r\n  donateboard.style.display = \"block\";\r\n});\r\n\r\ndocument.querySelector(\".donateboard svg\").addEventListener(\"click\", () => {\r\n  const donateboard = document.querySelector(\".donateboard\");\r\n  donateboard.style.display = \"none\";\r\n});\r\n\r\ndocument.querySelector(\".fontbutton\").addEventListener(\"click\", () => {\r\n  const donateboard = document.querySelector(\".modes\");\r\n  donateboard.style.display = \"block\";\r\n});\r\n\r\ndocument.querySelector(\".modes svg\").addEventListener(\"click\", () => {\r\n  const donateboard = document.querySelector(\".modes\");\r\n  donateboard.style.display = \"none\";\r\n});\r\n\r\n//color from image\r\nconst fileInput = document.querySelector('input[type=\"file\"]');\r\nfileInput.addEventListener(\"change\", (event) => {\r\n  const file = event.target.files[0];\r\n  const color = (0,material_color_css__WEBPACK_IMPORTED_MODULE_1__.colorFromImage)(file);\r\n  if (scheme) {\r\n    (0,material_color_css__WEBPACK_IMPORTED_MODULE_1__.updateColors)(color, scheme);\r\n  } else {\r\n    (0,material_color_css__WEBPACK_IMPORTED_MODULE_1__.updateColors)(color);\r\n  }\r\n});\r\n\r\nlet c = \"defult\";\r\nlet m = \"light\";\r\nconst body = document.querySelector(\"body\");\r\n\r\nconst contrasts = document.querySelectorAll(\"input[name='contrast']\");\r\ncontrasts.forEach((contrast) => {\r\n  contrast.addEventListener(\"change\", () => {\r\n    contrasts.forEach((contrast) => {\r\n      const svg = document.querySelector(`.${contrast.value}_contrast`);\r\n      if (svg) {\r\n        if (svg.classList.contains(\"selectedsvg\")) {\r\n          svg.classList.remove(\"selectedsvg\");\r\n        }\r\n        if (contrast.checked) {\r\n          svg.classList.add(\"selectedsvg\");\r\n          c = contrast.value;\r\n          body.classList.remove(...body.classList);\r\n          body.classList.add(`${m}_${c}_contrast`);\r\n        }\r\n      }\r\n    });\r\n  });\r\n});\r\n\r\nconst modes = document.querySelectorAll(\"input[name='mode']\");\r\nmodes.forEach((mode) => {\r\n  mode.addEventListener(\"change\", () => {\r\n    modes.forEach((mode) => {\r\n      const svg = document.querySelector(`.${mode.value}_mode`);\r\n      if (svg) {\r\n        if (svg.classList.contains(\"selectedsvg\")) {\r\n          svg.classList.remove(\"selectedsvg\");\r\n        }\r\n        if (mode.checked) {\r\n          svg.classList.add(\"selectedsvg\");\r\n          m = mode.value;\r\n          body.classList.remove(...body.classList);\r\n          body.classList.add(`${m}_${c}_contrast`);\r\n        }\r\n      }\r\n    });\r\n  });\r\n});\r\n\r\nconst vars = document.querySelectorAll(\".options div\");\r\nvars.forEach((varr) => {\r\n  varr.addEventListener(\"click\", (e) => {\r\n    vars.forEach((v) => {\r\n      v.classList.remove(\"selected\");\r\n    });\r\n    e.target.classList.add(\"selected\");\r\n    let textContent = e.target.textContent;\r\n    let trimmedText = textContent.replace(/\\s+/g, \"\");\r\n    scheme = trimmedText;\r\n    (0,material_color_css__WEBPACK_IMPORTED_MODULE_1__.updateColors)(\"#B33B15\", scheme);\r\n  });\r\n});\r\n\n\n//# sourceURL=webpack://material-color-css/./src/example.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/blend/blend.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/blend/blend.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blend: () => (/* binding */ Blend)\n/* harmony export */ });\n/* harmony import */ var _hct_cam16_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hct/cam16.js */ \"./node_modules/@material/material-color-utilities/hct/cam16.js\");\n/* harmony import */ var _hct_hct_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hct/hct.js */ \"./node_modules/@material/material-color-utilities/hct/hct.js\");\n/* harmony import */ var _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\n\n\n\n\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n/**\n * Functions for blending in HCT and CAM16.\n */\nclass Blend {\n    /**\n     * Blend the design color's HCT hue towards the key color's HCT\n     * hue, in a way that leaves the original color recognizable and\n     * recognizably shifted towards the key color.\n     *\n     * @param designColor ARGB representation of an arbitrary color.\n     * @param sourceColor ARGB representation of the main theme color.\n     * @return The design color with a hue shifted towards the\n     * system's color, a slightly warmer/cooler variant of the design\n     * color's hue.\n     */\n    static harmonize(designColor, sourceColor) {\n        const fromHct = _hct_hct_js__WEBPACK_IMPORTED_MODULE_1__.Hct.fromInt(designColor);\n        const toHct = _hct_hct_js__WEBPACK_IMPORTED_MODULE_1__.Hct.fromInt(sourceColor);\n        const differenceDegrees = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_3__.differenceDegrees(fromHct.hue, toHct.hue);\n        const rotationDegrees = Math.min(differenceDegrees * 0.5, 15.0);\n        const outputHue = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_3__.sanitizeDegreesDouble(fromHct.hue +\n            rotationDegrees * _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_3__.rotationDirection(fromHct.hue, toHct.hue));\n        return _hct_hct_js__WEBPACK_IMPORTED_MODULE_1__.Hct.from(outputHue, fromHct.chroma, fromHct.tone).toInt();\n    }\n    /**\n     * Blends hue from one color into another. The chroma and tone of\n     * the original color are maintained.\n     *\n     * @param from ARGB representation of color\n     * @param to ARGB representation of color\n     * @param amount how much blending to perform; 0.0 >= and <= 1.0\n     * @return from, with a hue blended towards to. Chroma and tone\n     * are constant.\n     */\n    static hctHue(from, to, amount) {\n        const ucs = Blend.cam16Ucs(from, to, amount);\n        const ucsCam = _hct_cam16_js__WEBPACK_IMPORTED_MODULE_0__.Cam16.fromInt(ucs);\n        const fromCam = _hct_cam16_js__WEBPACK_IMPORTED_MODULE_0__.Cam16.fromInt(from);\n        const blended = _hct_hct_js__WEBPACK_IMPORTED_MODULE_1__.Hct.from(ucsCam.hue, fromCam.chroma, _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_2__.lstarFromArgb(from));\n        return blended.toInt();\n    }\n    /**\n     * Blend in CAM16-UCS space.\n     *\n     * @param from ARGB representation of color\n     * @param to ARGB representation of color\n     * @param amount how much blending to perform; 0.0 >= and <= 1.0\n     * @return from, blended towards to. Hue, chroma, and tone will\n     * change.\n     */\n    static cam16Ucs(from, to, amount) {\n        const fromCam = _hct_cam16_js__WEBPACK_IMPORTED_MODULE_0__.Cam16.fromInt(from);\n        const toCam = _hct_cam16_js__WEBPACK_IMPORTED_MODULE_0__.Cam16.fromInt(to);\n        const fromJ = fromCam.jstar;\n        const fromA = fromCam.astar;\n        const fromB = fromCam.bstar;\n        const toJ = toCam.jstar;\n        const toA = toCam.astar;\n        const toB = toCam.bstar;\n        const jstar = fromJ + (toJ - fromJ) * amount;\n        const astar = fromA + (toA - fromA) * amount;\n        const bstar = fromB + (toB - fromB) * amount;\n        return _hct_cam16_js__WEBPACK_IMPORTED_MODULE_0__.Cam16.fromUcs(jstar, astar, bstar).toInt();\n    }\n}\n//# sourceMappingURL=blend.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/blend/blend.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/contrast/contrast.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/contrast/contrast.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Contrast: () => (/* binding */ Contrast)\n/* harmony export */ });\n/* harmony import */ var _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n\n\n/**\n * Utility methods for calculating contrast given two colors, or calculating a\n * color given one color and a contrast ratio.\n *\n * Contrast ratio is calculated using XYZ's Y. When linearized to match human\n * perception, Y becomes HCT's tone and L*a*b*'s' L*. Informally, this is the\n * lightness of a color.\n *\n * Methods refer to tone, T in the the HCT color space.\n * Tone is equivalent to L* in the L*a*b* color space, or L in the LCH color\n * space.\n */\nclass Contrast {\n    /**\n     * Returns a contrast ratio, which ranges from 1 to 21.\n     *\n     * @param toneA Tone between 0 and 100. Values outside will be clamped.\n     * @param toneB Tone between 0 and 100. Values outside will be clamped.\n     */\n    static ratioOfTones(toneA, toneB) {\n        toneA = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.clampDouble(0.0, 100.0, toneA);\n        toneB = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.clampDouble(0.0, 100.0, toneB);\n        return Contrast.ratioOfYs(_utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.yFromLstar(toneA), _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.yFromLstar(toneB));\n    }\n    static ratioOfYs(y1, y2) {\n        const lighter = y1 > y2 ? y1 : y2;\n        const darker = (lighter === y2) ? y1 : y2;\n        return (lighter + 5.0) / (darker + 5.0);\n    }\n    /**\n     * Returns a tone >= tone parameter that ensures ratio parameter.\n     * Return value is between 0 and 100.\n     * Returns -1 if ratio cannot be achieved with tone parameter.\n     *\n     * @param tone Tone return value must contrast with.\n     * Range is 0 to 100. Invalid values will result in -1 being returned.\n     * @param ratio Contrast ratio of return value and tone.\n     * Range is 1 to 21, invalid values have undefined behavior.\n     */\n    static lighter(tone, ratio) {\n        if (tone < 0.0 || tone > 100.0) {\n            return -1.0;\n        }\n        const darkY = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.yFromLstar(tone);\n        const lightY = ratio * (darkY + 5.0) - 5.0;\n        const realContrast = Contrast.ratioOfYs(lightY, darkY);\n        const delta = Math.abs(realContrast - ratio);\n        if (realContrast < ratio && delta > 0.04) {\n            return -1;\n        }\n        // Ensure gamut mapping, which requires a 'range' on tone, will still result\n        // the correct ratio by darkening slightly.\n        const returnValue = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.lstarFromY(lightY) + 0.4;\n        if (returnValue < 0 || returnValue > 100) {\n            return -1;\n        }\n        return returnValue;\n    }\n    /**\n     * Returns a tone <= tone parameter that ensures ratio parameter.\n     * Return value is between 0 and 100.\n     * Returns -1 if ratio cannot be achieved with tone parameter.\n     *\n     * @param tone Tone return value must contrast with.\n     * Range is 0 to 100. Invalid values will result in -1 being returned.\n     * @param ratio Contrast ratio of return value and tone.\n     * Range is 1 to 21, invalid values have undefined behavior.\n     */\n    static darker(tone, ratio) {\n        if (tone < 0.0 || tone > 100.0) {\n            return -1.0;\n        }\n        const lightY = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.yFromLstar(tone);\n        const darkY = ((lightY + 5.0) / ratio) - 5.0;\n        const realContrast = Contrast.ratioOfYs(lightY, darkY);\n        const delta = Math.abs(realContrast - ratio);\n        if (realContrast < ratio && delta > 0.04) {\n            return -1;\n        }\n        // Ensure gamut mapping, which requires a 'range' on tone, will still result\n        // the correct ratio by darkening slightly.\n        const returnValue = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.lstarFromY(darkY) - 0.4;\n        if (returnValue < 0 || returnValue > 100) {\n            return -1;\n        }\n        return returnValue;\n    }\n    /**\n     * Returns a tone >= tone parameter that ensures ratio parameter.\n     * Return value is between 0 and 100.\n     * Returns 100 if ratio cannot be achieved with tone parameter.\n     *\n     * This method is unsafe because the returned value is guaranteed to be in\n     * bounds for tone, i.e. between 0 and 100. However, that value may not reach\n     * the ratio with tone. For example, there is no color lighter than T100.\n     *\n     * @param tone Tone return value must contrast with.\n     * Range is 0 to 100. Invalid values will result in 100 being returned.\n     * @param ratio Desired contrast ratio of return value and tone parameter.\n     * Range is 1 to 21, invalid values have undefined behavior.\n     */\n    static lighterUnsafe(tone, ratio) {\n        const lighterSafe = Contrast.lighter(tone, ratio);\n        return (lighterSafe < 0.0) ? 100.0 : lighterSafe;\n    }\n    /**\n     * Returns a tone >= tone parameter that ensures ratio parameter.\n     * Return value is between 0 and 100.\n     * Returns 100 if ratio cannot be achieved with tone parameter.\n     *\n     * This method is unsafe because the returned value is guaranteed to be in\n     * bounds for tone, i.e. between 0 and 100. However, that value may not reach\n     * the [ratio with [tone]. For example, there is no color darker than T0.\n     *\n     * @param tone Tone return value must contrast with.\n     * Range is 0 to 100. Invalid values will result in 0 being returned.\n     * @param ratio Desired contrast ratio of return value and tone parameter.\n     * Range is 1 to 21, invalid values have undefined behavior.\n     */\n    static darkerUnsafe(tone, ratio) {\n        const darkerSafe = Contrast.darker(tone, ratio);\n        return (darkerSafe < 0.0) ? 0.0 : darkerSafe;\n    }\n}\n//# sourceMappingURL=contrast.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/contrast/contrast.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/dislike/dislike_analyzer.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/dislike/dislike_analyzer.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DislikeAnalyzer: () => (/* binding */ DislikeAnalyzer)\n/* harmony export */ });\n/* harmony import */ var _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hct/hct.js */ \"./node_modules/@material/material-color-utilities/hct/hct.js\");\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n/**\n * Check and/or fix universally disliked colors.\n * Color science studies of color preference indicate universal distaste for\n * dark yellow-greens, and also show this is correlated to distate for\n * biological waste and rotting food.\n *\n * See Palmer and Schloss, 2010 or Schloss and Palmer's Chapter 21 in Handbook\n * of Color Psychology (2015).\n */\nclass DislikeAnalyzer {\n    /**\n     * Returns true if a color is disliked.\n     *\n     * @param hct A color to be judged.\n     * @return Whether the color is disliked.\n     *\n     * Disliked is defined as a dark yellow-green that is not neutral.\n     */\n    static isDisliked(hct) {\n        const huePasses = Math.round(hct.hue) >= 90.0 && Math.round(hct.hue) <= 111.0;\n        const chromaPasses = Math.round(hct.chroma) > 16.0;\n        const tonePasses = Math.round(hct.tone) < 65.0;\n        return huePasses && chromaPasses && tonePasses;\n    }\n    /**\n     * If a color is disliked, lighten it to make it likable.\n     *\n     * @param hct A color to be judged.\n     * @return A new color if the original color is disliked, or the original\n     *   color if it is acceptable.\n     */\n    static fixIfDisliked(hct) {\n        if (DislikeAnalyzer.isDisliked(hct)) {\n            return _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__.Hct.from(hct.hue, hct.chroma, 70.0);\n        }\n        return hct;\n    }\n}\n//# sourceMappingURL=dislike_analyzer.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/dislike/dislike_analyzer.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/dynamiccolor/contrast_curve.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/dynamiccolor/contrast_curve.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContrastCurve: () => (/* binding */ ContrastCurve)\n/* harmony export */ });\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A class containing the contrast curve for a dynamic color on its background.\n *\n * The four values correspond to contrast requirements for contrast levels\n * -1.0, 0.0, 0.5, and 1.0, respectively.\n */\nclass ContrastCurve {\n    /**\n     * Creates a `ContrastCurve` object.\n     *\n     * @param low Contrast requirement for contrast level -1.0\n     * @param normal Contrast requirement for contrast level 0.0\n     * @param medium Contrast requirement for contrast level 0.5\n     * @param high Contrast requirement for contrast level 1.0\n     */\n    constructor(low, normal, medium, high) {\n        this.low = low;\n        this.normal = normal;\n        this.medium = medium;\n        this.high = high;\n    }\n    /**\n     * Returns the contrast ratio at a given contrast level.\n     *\n     * @param contrastLevel The contrast level. 0.0 is the default (normal);\n     * -1.0 is the lowest; 1.0 is the highest.\n     * @return The contrast ratio, a number between 1.0 and 21.0.\n     */\n    getContrast(contrastLevel) {\n        if (contrastLevel <= -1.0) {\n            return this.low;\n        }\n        else if (contrastLevel < 0.0) {\n            return _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_0__.lerp(this.low, this.normal, (contrastLevel - (-1)) / 1);\n        }\n        else if (contrastLevel < 0.5) {\n            return _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_0__.lerp(this.normal, this.medium, (contrastLevel - 0) / 0.5);\n        }\n        else if (contrastLevel < 1.0) {\n            return _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_0__.lerp(this.medium, this.high, (contrastLevel - 0.5) / 0.5);\n        }\n        else {\n            return this.high;\n        }\n    }\n}\n//# sourceMappingURL=contrast_curve.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/dynamiccolor/contrast_curve.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/dynamiccolor/dynamic_color.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/dynamiccolor/dynamic_color.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DynamicColor: () => (/* binding */ DynamicColor)\n/* harmony export */ });\n/* harmony import */ var _contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../contrast/contrast.js */ \"./node_modules/@material/material-color-utilities/contrast/contrast.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * A color that adjusts itself based on UI state provided by DynamicScheme.\n *\n * Colors without backgrounds do not change tone when contrast changes. Colors\n * with backgrounds become closer to their background as contrast lowers, and\n * further when contrast increases.\n *\n * Prefer static constructors. They require either a hexcode, a palette and\n * tone, or a hue and chroma. Optionally, they can provide a background\n * DynamicColor.\n */\nclass DynamicColor {\n    /**\n     * Create a DynamicColor defined by a TonalPalette and HCT tone.\n     *\n     * @param args Functions with DynamicScheme as input. Must provide a palette\n     * and tone. May provide a background DynamicColor and ToneDeltaConstraint.\n     */\n    static fromPalette(args) {\n        return new DynamicColor(args.name ?? '', args.palette, args.tone, args.isBackground ?? false, args.background, args.secondBackground, args.contrastCurve, args.toneDeltaPair);\n    }\n    /**\n     * The base constructor for DynamicColor.\n     *\n     * _Strongly_ prefer using one of the convenience constructors. This class is\n     * arguably too flexible to ensure it can support any scenario. Functional\n     * arguments allow  overriding without risks that come with subclasses.\n     *\n     * For example, the default behavior of adjust tone at max contrast\n     * to be at a 7.0 ratio with its background is principled and\n     * matches accessibility guidance. That does not mean it's the desired\n     * approach for _every_ design system, and every color pairing,\n     * always, in every case.\n     *\n     * @param name The name of the dynamic color. Defaults to empty.\n     * @param palette Function that provides a TonalPalette given\n     * DynamicScheme. A TonalPalette is defined by a hue and chroma, so this\n     * replaces the need to specify hue/chroma. By providing a tonal palette, when\n     * contrast adjustments are made, intended chroma can be preserved.\n     * @param tone Function that provides a tone, given a DynamicScheme.\n     * @param isBackground Whether this dynamic color is a background, with\n     * some other color as the foreground. Defaults to false.\n     * @param background The background of the dynamic color (as a function of a\n     *     `DynamicScheme`), if it exists.\n     * @param secondBackground A second background of the dynamic color (as a\n     *     function of a `DynamicScheme`), if it\n     * exists.\n     * @param contrastCurve A `ContrastCurve` object specifying how its contrast\n     * against its background should behave in various contrast levels options.\n     * @param toneDeltaPair A `ToneDeltaPair` object specifying a tone delta\n     * constraint between two colors. One of them must be the color being\n     * constructed.\n     */\n    constructor(name, palette, tone, isBackground, background, secondBackground, contrastCurve, toneDeltaPair) {\n        this.name = name;\n        this.palette = palette;\n        this.tone = tone;\n        this.isBackground = isBackground;\n        this.background = background;\n        this.secondBackground = secondBackground;\n        this.contrastCurve = contrastCurve;\n        this.toneDeltaPair = toneDeltaPair;\n        this.hctCache = new Map();\n        if ((!background) && secondBackground) {\n            throw new Error(`Color ${name} has secondBackground` +\n                `defined, but background is not defined.`);\n        }\n        if ((!background) && contrastCurve) {\n            throw new Error(`Color ${name} has contrastCurve` +\n                `defined, but background is not defined.`);\n        }\n        if (background && !contrastCurve) {\n            throw new Error(`Color ${name} has background` +\n                `defined, but contrastCurve is not defined.`);\n        }\n    }\n    /**\n     * Return a ARGB integer (i.e. a hex code).\n     *\n     * @param scheme Defines the conditions of the user interface, for example,\n     * whether or not it is dark mode or light mode, and what the desired\n     * contrast level is.\n     */\n    getArgb(scheme) {\n        return this.getHct(scheme).toInt();\n    }\n    /**\n     * Return a color, expressed in the HCT color space, that this\n     * DynamicColor is under the conditions in scheme.\n     *\n     * @param scheme Defines the conditions of the user interface, for example,\n     * whether or not it is dark mode or light mode, and what the desired\n     * contrast level is.\n     */\n    getHct(scheme) {\n        const cachedAnswer = this.hctCache.get(scheme);\n        if (cachedAnswer != null) {\n            return cachedAnswer;\n        }\n        const tone = this.getTone(scheme);\n        const answer = this.palette(scheme).getHct(tone);\n        if (this.hctCache.size > 4) {\n            this.hctCache.clear();\n        }\n        this.hctCache.set(scheme, answer);\n        return answer;\n    }\n    /**\n     * Return a tone, T in the HCT color space, that this DynamicColor is under\n     * the conditions in scheme.\n     *\n     * @param scheme Defines the conditions of the user interface, for example,\n     * whether or not it is dark mode or light mode, and what the desired\n     * contrast level is.\n     */\n    getTone(scheme) {\n        const decreasingContrast = scheme.contrastLevel < 0;\n        // Case 1: dual foreground, pair of colors with delta constraint.\n        if (this.toneDeltaPair) {\n            const toneDeltaPair = this.toneDeltaPair(scheme);\n            const roleA = toneDeltaPair.roleA;\n            const roleB = toneDeltaPair.roleB;\n            const delta = toneDeltaPair.delta;\n            const polarity = toneDeltaPair.polarity;\n            const stayTogether = toneDeltaPair.stayTogether;\n            const bg = this.background(scheme);\n            const bgTone = bg.getTone(scheme);\n            const aIsNearer = (polarity === 'nearer' ||\n                (polarity === 'lighter' && !scheme.isDark) ||\n                (polarity === 'darker' && scheme.isDark));\n            const nearer = aIsNearer ? roleA : roleB;\n            const farther = aIsNearer ? roleB : roleA;\n            const amNearer = this.name === nearer.name;\n            const expansionDir = scheme.isDark ? 1 : -1;\n            // 1st round: solve to min, each\n            const nContrast = nearer.contrastCurve.getContrast(scheme.contrastLevel);\n            const fContrast = farther.contrastCurve.getContrast(scheme.contrastLevel);\n            // If a color is good enough, it is not adjusted.\n            // Initial and adjusted tones for `nearer`\n            const nInitialTone = nearer.tone(scheme);\n            let nTone = _contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__.Contrast.ratioOfTones(bgTone, nInitialTone) >= nContrast ?\n                nInitialTone :\n                DynamicColor.foregroundTone(bgTone, nContrast);\n            // Initial and adjusted tones for `farther`\n            const fInitialTone = farther.tone(scheme);\n            let fTone = _contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__.Contrast.ratioOfTones(bgTone, fInitialTone) >= fContrast ?\n                fInitialTone :\n                DynamicColor.foregroundTone(bgTone, fContrast);\n            if (decreasingContrast) {\n                // If decreasing contrast, adjust color to the \"bare minimum\"\n                // that satisfies contrast.\n                nTone = DynamicColor.foregroundTone(bgTone, nContrast);\n                fTone = DynamicColor.foregroundTone(bgTone, fContrast);\n            }\n            if ((fTone - nTone) * expansionDir >= delta) {\n                // Good! Tones satisfy the constraint; no change needed.\n            }\n            else {\n                // 2nd round: expand farther to match delta.\n                fTone = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.clampDouble(0, 100, nTone + delta * expansionDir);\n                if ((fTone - nTone) * expansionDir >= delta) {\n                    // Good! Tones now satisfy the constraint; no change needed.\n                }\n                else {\n                    // 3rd round: contract nearer to match delta.\n                    nTone = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.clampDouble(0, 100, fTone - delta * expansionDir);\n                }\n            }\n            // Avoids the 50-59 awkward zone.\n            if (50 <= nTone && nTone < 60) {\n                // If `nearer` is in the awkward zone, move it away, together with\n                // `farther`.\n                if (expansionDir > 0) {\n                    nTone = 60;\n                    fTone = Math.max(fTone, nTone + delta * expansionDir);\n                }\n                else {\n                    nTone = 49;\n                    fTone = Math.min(fTone, nTone + delta * expansionDir);\n                }\n            }\n            else if (50 <= fTone && fTone < 60) {\n                if (stayTogether) {\n                    // Fixes both, to avoid two colors on opposite sides of the \"awkward\n                    // zone\".\n                    if (expansionDir > 0) {\n                        nTone = 60;\n                        fTone = Math.max(fTone, nTone + delta * expansionDir);\n                    }\n                    else {\n                        nTone = 49;\n                        fTone = Math.min(fTone, nTone + delta * expansionDir);\n                    }\n                }\n                else {\n                    // Not required to stay together; fixes just one.\n                    if (expansionDir > 0) {\n                        fTone = 60;\n                    }\n                    else {\n                        fTone = 49;\n                    }\n                }\n            }\n            // Returns `nTone` if this color is `nearer`, otherwise `fTone`.\n            return amNearer ? nTone : fTone;\n        }\n        else {\n            // Case 2: No contrast pair; just solve for itself.\n            let answer = this.tone(scheme);\n            if (this.background == null) {\n                return answer; // No adjustment for colors with no background.\n            }\n            const bgTone = this.background(scheme).getTone(scheme);\n            const desiredRatio = this.contrastCurve.getContrast(scheme.contrastLevel);\n            if (_contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__.Contrast.ratioOfTones(bgTone, answer) >= desiredRatio) {\n                // Don't \"improve\" what's good enough.\n            }\n            else {\n                // Rough improvement.\n                answer = DynamicColor.foregroundTone(bgTone, desiredRatio);\n            }\n            if (decreasingContrast) {\n                answer = DynamicColor.foregroundTone(bgTone, desiredRatio);\n            }\n            if (this.isBackground && 50 <= answer && answer < 60) {\n                // Must adjust\n                if (_contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__.Contrast.ratioOfTones(49, bgTone) >= desiredRatio) {\n                    answer = 49;\n                }\n                else {\n                    answer = 60;\n                }\n            }\n            if (this.secondBackground) {\n                // Case 3: Adjust for dual backgrounds.\n                const [bg1, bg2] = [this.background, this.secondBackground];\n                const [bgTone1, bgTone2] = [bg1(scheme).getTone(scheme), bg2(scheme).getTone(scheme)];\n                const [upper, lower] = [Math.max(bgTone1, bgTone2), Math.min(bgTone1, bgTone2)];\n                if (_contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__.Contrast.ratioOfTones(upper, answer) >= desiredRatio &&\n                    _contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__.Contrast.ratioOfTones(lower, answer) >= desiredRatio) {\n                    return answer;\n                }\n                // The darkest light tone that satisfies the desired ratio,\n                // or -1 if such ratio cannot be reached.\n                const lightOption = _contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__.Contrast.lighter(upper, desiredRatio);\n                // The lightest dark tone that satisfies the desired ratio,\n                // or -1 if such ratio cannot be reached.\n                const darkOption = _contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__.Contrast.darker(lower, desiredRatio);\n                // Tones suitable for the foreground.\n                const availables = [];\n                if (lightOption !== -1)\n                    availables.push(lightOption);\n                if (darkOption !== -1)\n                    availables.push(darkOption);\n                const prefersLight = DynamicColor.tonePrefersLightForeground(bgTone1) ||\n                    DynamicColor.tonePrefersLightForeground(bgTone2);\n                if (prefersLight) {\n                    return (lightOption < 0) ? 100 : lightOption;\n                }\n                if (availables.length === 1) {\n                    return availables[0];\n                }\n                return (darkOption < 0) ? 0 : darkOption;\n            }\n            return answer;\n        }\n    }\n    /**\n     * Given a background tone, find a foreground tone, while ensuring they reach\n     * a contrast ratio that is as close to [ratio] as possible.\n     *\n     * @param bgTone Tone in HCT. Range is 0 to 100, undefined behavior when it\n     *     falls outside that range.\n     * @param ratio The contrast ratio desired between bgTone and the return\n     *     value.\n     */\n    static foregroundTone(bgTone, ratio) {\n        const lighterTone = _contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__.Contrast.lighterUnsafe(bgTone, ratio);\n        const darkerTone = _contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__.Contrast.darkerUnsafe(bgTone, ratio);\n        const lighterRatio = _contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__.Contrast.ratioOfTones(lighterTone, bgTone);\n        const darkerRatio = _contrast_contrast_js__WEBPACK_IMPORTED_MODULE_0__.Contrast.ratioOfTones(darkerTone, bgTone);\n        const preferLighter = DynamicColor.tonePrefersLightForeground(bgTone);\n        if (preferLighter) {\n            // This handles an edge case where the initial contrast ratio is high\n            // (ex. 13.0), and the ratio passed to the function is that high\n            // ratio, and both the lighter and darker ratio fails to pass that\n            // ratio.\n            //\n            // This was observed with Tonal Spot's On Primary Container turning\n            // black momentarily between high and max contrast in light mode. PC's\n            // standard tone was T90, OPC's was T10, it was light mode, and the\n            // contrast value was 0.6568521221032331.\n            const negligibleDifference = Math.abs(lighterRatio - darkerRatio) < 0.1 &&\n                lighterRatio < ratio && darkerRatio < ratio;\n            return lighterRatio >= ratio || lighterRatio >= darkerRatio ||\n                negligibleDifference ?\n                lighterTone :\n                darkerTone;\n        }\n        else {\n            return darkerRatio >= ratio || darkerRatio >= lighterRatio ? darkerTone :\n                lighterTone;\n        }\n    }\n    /**\n     * Returns whether [tone] prefers a light foreground.\n     *\n     * People prefer white foregrounds on ~T60-70. Observed over time, and also\n     * by Andrew Somers during research for APCA.\n     *\n     * T60 used as to create the smallest discontinuity possible when skipping\n     * down to T49 in order to ensure light foregrounds.\n     * Since `tertiaryContainer` in dark monochrome scheme requires a tone of\n     * 60, it should not be adjusted. Therefore, 60 is excluded here.\n     */\n    static tonePrefersLightForeground(tone) {\n        return Math.round(tone) < 60.0;\n    }\n    /**\n     * Returns whether [tone] can reach a contrast ratio of 4.5 with a lighter\n     * color.\n     */\n    static toneAllowsLightForeground(tone) {\n        return Math.round(tone) <= 49.0;\n    }\n    /**\n     * Adjust a tone such that white has 4.5 contrast, if the tone is\n     * reasonably close to supporting it.\n     */\n    static enableLightForeground(tone) {\n        if (DynamicColor.tonePrefersLightForeground(tone) &&\n            !DynamicColor.toneAllowsLightForeground(tone)) {\n            return 49.0;\n        }\n        return tone;\n    }\n}\n//# sourceMappingURL=dynamic_color.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/dynamiccolor/dynamic_color.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/dynamiccolor/material_dynamic_colors.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/dynamiccolor/material_dynamic_colors.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MaterialDynamicColors: () => (/* binding */ MaterialDynamicColors)\n/* harmony export */ });\n/* harmony import */ var _dislike_dislike_analyzer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dislike/dislike_analyzer.js */ \"./node_modules/@material/material-color-utilities/dislike/dislike_analyzer.js\");\n/* harmony import */ var _hct_hct_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hct/hct.js */ \"./node_modules/@material/material-color-utilities/hct/hct.js\");\n/* harmony import */ var _hct_viewing_conditions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hct/viewing_conditions.js */ \"./node_modules/@material/material-color-utilities/hct/viewing_conditions.js\");\n/* harmony import */ var _scheme_variant_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scheme/variant.js */ \"./node_modules/@material/material-color-utilities/scheme/variant.js\");\n/* harmony import */ var _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./contrast_curve.js */ \"./node_modules/@material/material-color-utilities/dynamiccolor/contrast_curve.js\");\n/* harmony import */ var _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dynamic_color.js */ \"./node_modules/@material/material-color-utilities/dynamiccolor/dynamic_color.js\");\n/* harmony import */ var _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tone_delta_pair.js */ \"./node_modules/@material/material-color-utilities/dynamiccolor/tone_delta_pair.js\");\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\nfunction isFidelity(scheme) {\n    return scheme.variant === _scheme_variant_js__WEBPACK_IMPORTED_MODULE_3__.Variant.FIDELITY ||\n        scheme.variant === _scheme_variant_js__WEBPACK_IMPORTED_MODULE_3__.Variant.CONTENT;\n}\nfunction isMonochrome(scheme) {\n    return scheme.variant === _scheme_variant_js__WEBPACK_IMPORTED_MODULE_3__.Variant.MONOCHROME;\n}\nfunction findDesiredChromaByTone(hue, chroma, tone, byDecreasingTone) {\n    let answer = tone;\n    let closestToChroma = _hct_hct_js__WEBPACK_IMPORTED_MODULE_1__.Hct.from(hue, chroma, tone);\n    if (closestToChroma.chroma < chroma) {\n        let chromaPeak = closestToChroma.chroma;\n        while (closestToChroma.chroma < chroma) {\n            answer += byDecreasingTone ? -1.0 : 1.0;\n            const potentialSolution = _hct_hct_js__WEBPACK_IMPORTED_MODULE_1__.Hct.from(hue, chroma, answer);\n            if (chromaPeak > potentialSolution.chroma) {\n                break;\n            }\n            if (Math.abs(potentialSolution.chroma - chroma) < 0.4) {\n                break;\n            }\n            const potentialDelta = Math.abs(potentialSolution.chroma - chroma);\n            const currentDelta = Math.abs(closestToChroma.chroma - chroma);\n            if (potentialDelta < currentDelta) {\n                closestToChroma = potentialSolution;\n            }\n            chromaPeak = Math.max(chromaPeak, potentialSolution.chroma);\n        }\n    }\n    return answer;\n}\nfunction viewingConditionsForAlbers(scheme) {\n    return _hct_viewing_conditions_js__WEBPACK_IMPORTED_MODULE_2__.ViewingConditions.make(\n    /*whitePoint=*/ undefined, \n    /*adaptingLuminance=*/ undefined, \n    /*backgroundLstar=*/ scheme.isDark ? 30 : 80, \n    /*surround=*/ undefined, \n    /*discountingIlluminant=*/ undefined);\n}\nfunction performAlbers(prealbers, scheme) {\n    const albersd = prealbers.inViewingConditions(viewingConditionsForAlbers(scheme));\n    if (_dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.tonePrefersLightForeground(prealbers.tone) &&\n        !_dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.toneAllowsLightForeground(albersd.tone)) {\n        return _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.enableLightForeground(prealbers.tone);\n    }\n    else {\n        return _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.enableLightForeground(albersd.tone);\n    }\n}\n/**\n * DynamicColors for the colors in the Material Design system.\n */\n// Material Color Utilities namespaces the various utilities it provides.\n// tslint:disable-next-line:class-as-namespace\nclass MaterialDynamicColors {\n    static highestSurface(s) {\n        return s.isDark ? MaterialDynamicColors.surfaceBright :\n            MaterialDynamicColors.surfaceDim;\n    }\n}\nMaterialDynamicColors.contentAccentToneDelta = 15.0;\nMaterialDynamicColors.primaryPaletteKeyColor = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'primary_palette_key_color',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => s.primaryPalette.keyColor.tone,\n});\nMaterialDynamicColors.secondaryPaletteKeyColor = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'secondary_palette_key_color',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => s.secondaryPalette.keyColor.tone,\n});\nMaterialDynamicColors.tertiaryPaletteKeyColor = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'tertiary_palette_key_color',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => s.tertiaryPalette.keyColor.tone,\n});\nMaterialDynamicColors.neutralPaletteKeyColor = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'neutral_palette_key_color',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.neutralPalette.keyColor.tone,\n});\nMaterialDynamicColors.neutralVariantPaletteKeyColor = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'neutral_variant_palette_key_color',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.neutralVariantPalette.keyColor.tone,\n});\nMaterialDynamicColors.background = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'background',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 6 : 98,\n    isBackground: true,\n});\nMaterialDynamicColors.onBackground = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_background',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 90 : 10,\n    background: (s) => MaterialDynamicColors.background,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(3, 3, 4.5, 7),\n});\nMaterialDynamicColors.surface = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 6 : 98,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceDim = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'surface_dim',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 6 : 87,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceBright = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'surface_bright',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 24 : 98,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainerLowest = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'surface_container_lowest',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 4 : 100,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainerLow = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'surface_container_low',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 10 : 96,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainer = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'surface_container',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 12 : 94,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainerHigh = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'surface_container_high',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 17 : 92,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainerHighest = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'surface_container_highest',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 22 : 90,\n    isBackground: true,\n});\nMaterialDynamicColors.onSurface = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 90 : 10,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.surfaceVariant = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'surface_variant',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 30 : 90,\n    isBackground: true,\n});\nMaterialDynamicColors.onSurfaceVariant = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_surface_variant',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 80 : 30,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.inverseSurface = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'inverse_surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 90 : 20,\n});\nMaterialDynamicColors.inverseOnSurface = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'inverse_on_surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 20 : 95,\n    background: (s) => MaterialDynamicColors.inverseSurface,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.outline = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'outline',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 60 : 50,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(1.5, 3, 4.5, 7),\n});\nMaterialDynamicColors.outlineVariant = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'outline_variant',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 30 : 80,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(1, 1, 3, 7),\n});\nMaterialDynamicColors.shadow = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'shadow',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => 0,\n});\nMaterialDynamicColors.scrim = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'scrim',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => 0,\n});\nMaterialDynamicColors.surfaceTint = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'surface_tint',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => s.isDark ? 80 : 40,\n    isBackground: true,\n});\nMaterialDynamicColors.primary = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'primary',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 100 : 0;\n        }\n        return s.isDark ? 80 : 40;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(3, 4.5, 7, 11),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.primaryContainer, MaterialDynamicColors.primary, 15, 'nearer', false),\n});\nMaterialDynamicColors.onPrimary = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_primary',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 10 : 90;\n        }\n        return s.isDark ? 20 : 100;\n    },\n    background: (s) => MaterialDynamicColors.primary,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.primaryContainer = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'primary_container',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => {\n        if (isFidelity(s)) {\n            return performAlbers(s.sourceColorHct, s);\n        }\n        if (isMonochrome(s)) {\n            return s.isDark ? 85 : 25;\n        }\n        return s.isDark ? 30 : 90;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.primaryContainer, MaterialDynamicColors.primary, 15, 'nearer', false),\n});\nMaterialDynamicColors.onPrimaryContainer = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_primary_container',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => {\n        if (isFidelity(s)) {\n            return _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.foregroundTone(MaterialDynamicColors.primaryContainer.tone(s), 4.5);\n        }\n        if (isMonochrome(s)) {\n            return s.isDark ? 0 : 100;\n        }\n        return s.isDark ? 90 : 10;\n    },\n    background: (s) => MaterialDynamicColors.primaryContainer,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.inversePrimary = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'inverse_primary',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => s.isDark ? 40 : 80,\n    background: (s) => MaterialDynamicColors.inverseSurface,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.secondary = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'secondary',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => s.isDark ? 80 : 40,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(3, 4.5, 7, 11),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.secondaryContainer, MaterialDynamicColors.secondary, 15, 'nearer', false),\n});\nMaterialDynamicColors.onSecondary = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_secondary',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 10 : 100;\n        }\n        else {\n            return s.isDark ? 20 : 100;\n        }\n    },\n    background: (s) => MaterialDynamicColors.secondary,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.secondaryContainer = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'secondary_container',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => {\n        const initialTone = s.isDark ? 30 : 90;\n        if (isMonochrome(s)) {\n            return s.isDark ? 30 : 85;\n        }\n        if (!isFidelity(s)) {\n            return initialTone;\n        }\n        let answer = findDesiredChromaByTone(s.secondaryPalette.hue, s.secondaryPalette.chroma, initialTone, s.isDark ? false : true);\n        answer = performAlbers(s.secondaryPalette.getHct(answer), s);\n        return answer;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.secondaryContainer, MaterialDynamicColors.secondary, 15, 'nearer', false),\n});\nMaterialDynamicColors.onSecondaryContainer = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_secondary_container',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => {\n        if (!isFidelity(s)) {\n            return s.isDark ? 90 : 10;\n        }\n        return _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.foregroundTone(MaterialDynamicColors.secondaryContainer.tone(s), 4.5);\n    },\n    background: (s) => MaterialDynamicColors.secondaryContainer,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.tertiary = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'tertiary',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 90 : 25;\n        }\n        return s.isDark ? 80 : 40;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(3, 4.5, 7, 11),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.tertiaryContainer, MaterialDynamicColors.tertiary, 15, 'nearer', false),\n});\nMaterialDynamicColors.onTertiary = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_tertiary',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 10 : 90;\n        }\n        return s.isDark ? 20 : 100;\n    },\n    background: (s) => MaterialDynamicColors.tertiary,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.tertiaryContainer = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'tertiary_container',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 60 : 49;\n        }\n        if (!isFidelity(s)) {\n            return s.isDark ? 30 : 90;\n        }\n        const albersTone = performAlbers(s.tertiaryPalette.getHct(s.sourceColorHct.tone), s);\n        const proposedHct = s.tertiaryPalette.getHct(albersTone);\n        return _dislike_dislike_analyzer_js__WEBPACK_IMPORTED_MODULE_0__.DislikeAnalyzer.fixIfDisliked(proposedHct).tone;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.tertiaryContainer, MaterialDynamicColors.tertiary, 15, 'nearer', false),\n});\nMaterialDynamicColors.onTertiaryContainer = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_tertiary_container',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 0 : 100;\n        }\n        if (!isFidelity(s)) {\n            return s.isDark ? 90 : 10;\n        }\n        return _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.foregroundTone(MaterialDynamicColors.tertiaryContainer.tone(s), 4.5);\n    },\n    background: (s) => MaterialDynamicColors.tertiaryContainer,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.error = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'error',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 80 : 40,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(3, 4.5, 7, 11),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.errorContainer, MaterialDynamicColors.error, 15, 'nearer', false),\n});\nMaterialDynamicColors.onError = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_error',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 20 : 100,\n    background: (s) => MaterialDynamicColors.error,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.errorContainer = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'error_container',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 30 : 90,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.errorContainer, MaterialDynamicColors.error, 15, 'nearer', false),\n});\nMaterialDynamicColors.onErrorContainer = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_error_container',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 90 : 10,\n    background: (s) => MaterialDynamicColors.errorContainer,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.primaryFixed = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'primary_fixed',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 40.0 : 90.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.primaryFixed, MaterialDynamicColors.primaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.primaryFixedDim = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'primary_fixed_dim',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 30.0 : 80.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.primaryFixed, MaterialDynamicColors.primaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.onPrimaryFixed = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_primary_fixed',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 100.0 : 10.0,\n    background: (s) => MaterialDynamicColors.primaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.primaryFixed,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.onPrimaryFixedVariant = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_primary_fixed_variant',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 90.0 : 30.0,\n    background: (s) => MaterialDynamicColors.primaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.primaryFixed,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.secondaryFixed = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'secondary_fixed',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => isMonochrome(s) ? 80.0 : 90.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.secondaryFixed, MaterialDynamicColors.secondaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.secondaryFixedDim = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'secondary_fixed_dim',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => isMonochrome(s) ? 70.0 : 80.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.secondaryFixed, MaterialDynamicColors.secondaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.onSecondaryFixed = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_secondary_fixed',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => 10.0,\n    background: (s) => MaterialDynamicColors.secondaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.secondaryFixed,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.onSecondaryFixedVariant = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_secondary_fixed_variant',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => isMonochrome(s) ? 25.0 : 30.0,\n    background: (s) => MaterialDynamicColors.secondaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.secondaryFixed,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.tertiaryFixed = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'tertiary_fixed',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 40.0 : 90.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.tertiaryFixed, MaterialDynamicColors.tertiaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.tertiaryFixedDim = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'tertiary_fixed_dim',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 30.0 : 80.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(1, 1, 3, 7),\n    toneDeltaPair: (s) => new _tone_delta_pair_js__WEBPACK_IMPORTED_MODULE_6__.ToneDeltaPair(MaterialDynamicColors.tertiaryFixed, MaterialDynamicColors.tertiaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.onTertiaryFixed = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_tertiary_fixed',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 100.0 : 10.0,\n    background: (s) => MaterialDynamicColors.tertiaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.tertiaryFixed,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.onTertiaryFixedVariant = _dynamic_color_js__WEBPACK_IMPORTED_MODULE_5__.DynamicColor.fromPalette({\n    name: 'on_tertiary_fixed_variant',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 90.0 : 30.0,\n    background: (s) => MaterialDynamicColors.tertiaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.tertiaryFixed,\n    contrastCurve: new _contrast_curve_js__WEBPACK_IMPORTED_MODULE_4__.ContrastCurve(3, 4.5, 7, 11),\n});\n//# sourceMappingURL=material_dynamic_colors.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/dynamiccolor/material_dynamic_colors.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/dynamiccolor/tone_delta_pair.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/dynamiccolor/tone_delta_pair.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToneDeltaPair: () => (/* binding */ ToneDeltaPair)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Documents a constraint between two DynamicColors, in which their tones must\n * have a certain distance from each other.\n *\n * Prefer a DynamicColor with a background, this is for special cases when\n * designers want tonal distance, literally contrast, between two colors that\n * don't have a background / foreground relationship or a contrast guarantee.\n */\nclass ToneDeltaPair {\n    /**\n     * Documents a constraint in tone distance between two DynamicColors.\n     *\n     * The polarity is an adjective that describes \"A\", compared to \"B\".\n     *\n     * For instance, ToneDeltaPair(A, B, 15, 'darker', stayTogether) states that\n     * A's tone should be at least 15 darker than B's.\n     *\n     * 'nearer' and 'farther' describes closeness to the surface roles. For\n     * instance, ToneDeltaPair(A, B, 10, 'nearer', stayTogether) states that A\n     * should be 10 lighter than B in light mode, and 10 darker than B in dark\n     * mode.\n     *\n     * @param roleA The first role in a pair.\n     * @param roleB The second role in a pair.\n     * @param delta Required difference between tones. Absolute value, negative\n     * values have undefined behavior.\n     * @param polarity The relative relation between tones of roleA and roleB,\n     * as described above.\n     * @param stayTogether Whether these two roles should stay on the same side of\n     * the \"awkward zone\" (T50-59). This is necessary for certain cases where\n     * one role has two backgrounds.\n     */\n    constructor(roleA, roleB, delta, polarity, stayTogether) {\n        this.roleA = roleA;\n        this.roleB = roleB;\n        this.delta = delta;\n        this.polarity = polarity;\n        this.stayTogether = stayTogether;\n    }\n}\n//# sourceMappingURL=tone_delta_pair.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/dynamiccolor/tone_delta_pair.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/hct/cam16.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/hct/cam16.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cam16: () => (/* binding */ Cam16)\n/* harmony export */ });\n/* harmony import */ var _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/* harmony import */ var _viewing_conditions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./viewing_conditions.js */ \"./node_modules/@material/material-color-utilities/hct/viewing_conditions.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * CAM16, a color appearance model. Colors are not just defined by their hex\n * code, but rather, a hex code and viewing conditions.\n *\n * CAM16 instances also have coordinates in the CAM16-UCS space, called J*, a*,\n * b*, or jstar, astar, bstar in code. CAM16-UCS is included in the CAM16\n * specification, and should be used when measuring distances between colors.\n *\n * In traditional color spaces, a color can be identified solely by the\n * observer's measurement of the color. Color appearance models such as CAM16\n * also use information about the environment where the color was\n * observed, known as the viewing conditions.\n *\n * For example, white under the traditional assumption of a midday sun white\n * point is accurately measured as a slightly chromatic blue by CAM16. (roughly,\n * hue 203, chroma 3, lightness 100)\n */\nclass Cam16 {\n    /**\n     * All of the CAM16 dimensions can be calculated from 3 of the dimensions, in\n     * the following combinations:\n     *      -  {j or q} and {c, m, or s} and hue\n     *      - jstar, astar, bstar\n     * Prefer using a static method that constructs from 3 of those dimensions.\n     * This constructor is intended for those methods to use to return all\n     * possible dimensions.\n     *\n     * @param hue\n     * @param chroma informally, colorfulness / color intensity. like saturation\n     *     in HSL, except perceptually accurate.\n     * @param j lightness\n     * @param q brightness; ratio of lightness to white point's lightness\n     * @param m colorfulness\n     * @param s saturation; ratio of chroma to white point's chroma\n     * @param jstar CAM16-UCS J coordinate\n     * @param astar CAM16-UCS a coordinate\n     * @param bstar CAM16-UCS b coordinate\n     */\n    constructor(hue, chroma, j, q, m, s, jstar, astar, bstar) {\n        this.hue = hue;\n        this.chroma = chroma;\n        this.j = j;\n        this.q = q;\n        this.m = m;\n        this.s = s;\n        this.jstar = jstar;\n        this.astar = astar;\n        this.bstar = bstar;\n    }\n    /**\n     * CAM16 instances also have coordinates in the CAM16-UCS space, called J*,\n     * a*, b*, or jstar, astar, bstar in code. CAM16-UCS is included in the CAM16\n     * specification, and is used to measure distances between colors.\n     */\n    distance(other) {\n        const dJ = this.jstar - other.jstar;\n        const dA = this.astar - other.astar;\n        const dB = this.bstar - other.bstar;\n        const dEPrime = Math.sqrt(dJ * dJ + dA * dA + dB * dB);\n        const dE = 1.41 * Math.pow(dEPrime, 0.63);\n        return dE;\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return CAM16 color, assuming the color was viewed in default viewing\n     *     conditions.\n     */\n    static fromInt(argb) {\n        return Cam16.fromIntInViewingConditions(argb, _viewing_conditions_js__WEBPACK_IMPORTED_MODULE_2__.ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @param viewingConditions Information about the environment where the color\n     *     was observed.\n     * @return CAM16 color.\n     */\n    static fromIntInViewingConditions(argb, viewingConditions) {\n        const red = (argb & 0x00ff0000) >> 16;\n        const green = (argb & 0x0000ff00) >> 8;\n        const blue = (argb & 0x000000ff);\n        const redL = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.linearized(red);\n        const greenL = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.linearized(green);\n        const blueL = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.linearized(blue);\n        const x = 0.41233895 * redL + 0.35762064 * greenL + 0.18051042 * blueL;\n        const y = 0.2126 * redL + 0.7152 * greenL + 0.0722 * blueL;\n        const z = 0.01932141 * redL + 0.11916382 * greenL + 0.95034478 * blueL;\n        const rC = 0.401288 * x + 0.650173 * y - 0.051461 * z;\n        const gC = -0.250268 * x + 1.204414 * y + 0.045854 * z;\n        const bC = -0.002079 * x + 0.048952 * y + 0.953127 * z;\n        const rD = viewingConditions.rgbD[0] * rC;\n        const gD = viewingConditions.rgbD[1] * gC;\n        const bD = viewingConditions.rgbD[2] * bC;\n        const rAF = Math.pow((viewingConditions.fl * Math.abs(rD)) / 100.0, 0.42);\n        const gAF = Math.pow((viewingConditions.fl * Math.abs(gD)) / 100.0, 0.42);\n        const bAF = Math.pow((viewingConditions.fl * Math.abs(bD)) / 100.0, 0.42);\n        const rA = (_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(rD) * 400.0 * rAF) / (rAF + 27.13);\n        const gA = (_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(gD) * 400.0 * gAF) / (gAF + 27.13);\n        const bA = (_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(bD) * 400.0 * bAF) / (bAF + 27.13);\n        const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n        const b = (rA + gA - 2.0 * bA) / 9.0;\n        const u = (20.0 * rA + 20.0 * gA + 21.0 * bA) / 20.0;\n        const p2 = (40.0 * rA + 20.0 * gA + bA) / 20.0;\n        const atan2 = Math.atan2(b, a);\n        const atanDegrees = (atan2 * 180.0) / Math.PI;\n        const hue = atanDegrees < 0 ? atanDegrees + 360.0 :\n            atanDegrees >= 360 ? atanDegrees - 360.0 :\n                atanDegrees;\n        const hueRadians = (hue * Math.PI) / 180.0;\n        const ac = p2 * viewingConditions.nbb;\n        const j = 100.0 *\n            Math.pow(ac / viewingConditions.aw, viewingConditions.c * viewingConditions.z);\n        const q = (4.0 / viewingConditions.c) * Math.sqrt(j / 100.0) *\n            (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;\n        const huePrime = hue < 20.14 ? hue + 360 : hue;\n        const eHue = 0.25 * (Math.cos((huePrime * Math.PI) / 180.0 + 2.0) + 3.8);\n        const p1 = (50000.0 / 13.0) * eHue * viewingConditions.nc * viewingConditions.ncb;\n        const t = (p1 * Math.sqrt(a * a + b * b)) / (u + 0.305);\n        const alpha = Math.pow(t, 0.9) *\n            Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n        const c = alpha * Math.sqrt(j / 100.0);\n        const m = c * viewingConditions.fLRoot;\n        const s = 50.0 *\n            Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n        const jstar = ((1.0 + 100.0 * 0.007) * j) / (1.0 + 0.007 * j);\n        const mstar = (1.0 / 0.0228) * Math.log(1.0 + 0.0228 * m);\n        const astar = mstar * Math.cos(hueRadians);\n        const bstar = mstar * Math.sin(hueRadians);\n        return new Cam16(hue, c, j, q, m, s, jstar, astar, bstar);\n    }\n    /**\n     * @param j CAM16 lightness\n     * @param c CAM16 chroma\n     * @param h CAM16 hue\n     */\n    static fromJch(j, c, h) {\n        return Cam16.fromJchInViewingConditions(j, c, h, _viewing_conditions_js__WEBPACK_IMPORTED_MODULE_2__.ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param j CAM16 lightness\n     * @param c CAM16 chroma\n     * @param h CAM16 hue\n     * @param viewingConditions Information about the environment where the color\n     *     was observed.\n     */\n    static fromJchInViewingConditions(j, c, h, viewingConditions) {\n        const q = (4.0 / viewingConditions.c) * Math.sqrt(j / 100.0) *\n            (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;\n        const m = c * viewingConditions.fLRoot;\n        const alpha = c / Math.sqrt(j / 100.0);\n        const s = 50.0 *\n            Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n        const hueRadians = (h * Math.PI) / 180.0;\n        const jstar = ((1.0 + 100.0 * 0.007) * j) / (1.0 + 0.007 * j);\n        const mstar = (1.0 / 0.0228) * Math.log(1.0 + 0.0228 * m);\n        const astar = mstar * Math.cos(hueRadians);\n        const bstar = mstar * Math.sin(hueRadians);\n        return new Cam16(h, c, j, q, m, s, jstar, astar, bstar);\n    }\n    /**\n     * @param jstar CAM16-UCS lightness.\n     * @param astar CAM16-UCS a dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the Y axis.\n     * @param bstar CAM16-UCS b dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the X axis.\n     */\n    static fromUcs(jstar, astar, bstar) {\n        return Cam16.fromUcsInViewingConditions(jstar, astar, bstar, _viewing_conditions_js__WEBPACK_IMPORTED_MODULE_2__.ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param jstar CAM16-UCS lightness.\n     * @param astar CAM16-UCS a dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the Y axis.\n     * @param bstar CAM16-UCS b dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the X axis.\n     * @param viewingConditions Information about the environment where the color\n     *     was observed.\n     */\n    static fromUcsInViewingConditions(jstar, astar, bstar, viewingConditions) {\n        const a = astar;\n        const b = bstar;\n        const m = Math.sqrt(a * a + b * b);\n        const M = (Math.exp(m * 0.0228) - 1.0) / 0.0228;\n        const c = M / viewingConditions.fLRoot;\n        let h = Math.atan2(b, a) * (180.0 / Math.PI);\n        if (h < 0.0) {\n            h += 360.0;\n        }\n        const j = jstar / (1 - (jstar - 100) * 0.007);\n        return Cam16.fromJchInViewingConditions(j, c, h, viewingConditions);\n    }\n    /**\n     *  @return ARGB representation of color, assuming the color was viewed in\n     *     default viewing conditions, which are near-identical to the default\n     *     viewing conditions for sRGB.\n     */\n    toInt() {\n        return this.viewed(_viewing_conditions_js__WEBPACK_IMPORTED_MODULE_2__.ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param viewingConditions Information about the environment where the color\n     *     will be viewed.\n     * @return ARGB representation of color\n     */\n    viewed(viewingConditions) {\n        const alpha = this.chroma === 0.0 || this.j === 0.0 ?\n            0.0 :\n            this.chroma / Math.sqrt(this.j / 100.0);\n        const t = Math.pow(alpha / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73), 1.0 / 0.9);\n        const hRad = (this.hue * Math.PI) / 180.0;\n        const eHue = 0.25 * (Math.cos(hRad + 2.0) + 3.8);\n        const ac = viewingConditions.aw *\n            Math.pow(this.j / 100.0, 1.0 / viewingConditions.c / viewingConditions.z);\n        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n        const p2 = ac / viewingConditions.nbb;\n        const hSin = Math.sin(hRad);\n        const hCos = Math.cos(hRad);\n        const gamma = (23.0 * (p2 + 0.305) * t) /\n            (23.0 * p1 + 11.0 * t * hCos + 108.0 * t * hSin);\n        const a = gamma * hCos;\n        const b = gamma * hSin;\n        const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n        const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n        const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n        const rCBase = Math.max(0, (27.13 * Math.abs(rA)) / (400.0 - Math.abs(rA)));\n        const rC = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(rA) * (100.0 / viewingConditions.fl) *\n            Math.pow(rCBase, 1.0 / 0.42);\n        const gCBase = Math.max(0, (27.13 * Math.abs(gA)) / (400.0 - Math.abs(gA)));\n        const gC = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(gA) * (100.0 / viewingConditions.fl) *\n            Math.pow(gCBase, 1.0 / 0.42);\n        const bCBase = Math.max(0, (27.13 * Math.abs(bA)) / (400.0 - Math.abs(bA)));\n        const bC = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(bA) * (100.0 / viewingConditions.fl) *\n            Math.pow(bCBase, 1.0 / 0.42);\n        const rF = rC / viewingConditions.rgbD[0];\n        const gF = gC / viewingConditions.rgbD[1];\n        const bF = bC / viewingConditions.rgbD[2];\n        const x = 1.86206786 * rF - 1.01125463 * gF + 0.14918677 * bF;\n        const y = 0.38752654 * rF + 0.62144744 * gF - 0.00897398 * bF;\n        const z = -0.01584150 * rF - 0.03412294 * gF + 1.04996444 * bF;\n        const argb = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.argbFromXyz(x, y, z);\n        return argb;\n    }\n    /// Given color expressed in XYZ and viewed in [viewingConditions], convert to\n    /// CAM16.\n    static fromXyzInViewingConditions(x, y, z, viewingConditions) {\n        // Transform XYZ to 'cone'/'rgb' responses\n        const rC = 0.401288 * x + 0.650173 * y - 0.051461 * z;\n        const gC = -0.250268 * x + 1.204414 * y + 0.045854 * z;\n        const bC = -0.002079 * x + 0.048952 * y + 0.953127 * z;\n        // Discount illuminant\n        const rD = viewingConditions.rgbD[0] * rC;\n        const gD = viewingConditions.rgbD[1] * gC;\n        const bD = viewingConditions.rgbD[2] * bC;\n        // chromatic adaptation\n        const rAF = Math.pow(viewingConditions.fl * Math.abs(rD) / 100.0, 0.42);\n        const gAF = Math.pow(viewingConditions.fl * Math.abs(gD) / 100.0, 0.42);\n        const bAF = Math.pow(viewingConditions.fl * Math.abs(bD) / 100.0, 0.42);\n        const rA = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(rD) * 400.0 * rAF / (rAF + 27.13);\n        const gA = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(gD) * 400.0 * gAF / (gAF + 27.13);\n        const bA = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(bD) * 400.0 * bAF / (bAF + 27.13);\n        // redness-greenness\n        const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n        // yellowness-blueness\n        const b = (rA + gA - 2.0 * bA) / 9.0;\n        // auxiliary components\n        const u = (20.0 * rA + 20.0 * gA + 21.0 * bA) / 20.0;\n        const p2 = (40.0 * rA + 20.0 * gA + bA) / 20.0;\n        // hue\n        const atan2 = Math.atan2(b, a);\n        const atanDegrees = atan2 * 180.0 / Math.PI;\n        const hue = atanDegrees < 0 ? atanDegrees + 360.0 :\n            atanDegrees >= 360 ? atanDegrees - 360 :\n                atanDegrees;\n        const hueRadians = hue * Math.PI / 180.0;\n        // achromatic response to color\n        const ac = p2 * viewingConditions.nbb;\n        // CAM16 lightness and brightness\n        const J = 100.0 *\n            Math.pow(ac / viewingConditions.aw, viewingConditions.c * viewingConditions.z);\n        const Q = (4.0 / viewingConditions.c) * Math.sqrt(J / 100.0) *\n            (viewingConditions.aw + 4.0) * (viewingConditions.fLRoot);\n        const huePrime = (hue < 20.14) ? hue + 360 : hue;\n        const eHue = (1.0 / 4.0) * (Math.cos(huePrime * Math.PI / 180.0 + 2.0) + 3.8);\n        const p1 = 50000.0 / 13.0 * eHue * viewingConditions.nc * viewingConditions.ncb;\n        const t = p1 * Math.sqrt(a * a + b * b) / (u + 0.305);\n        const alpha = Math.pow(t, 0.9) *\n            Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n        // CAM16 chroma, colorfulness, chroma\n        const C = alpha * Math.sqrt(J / 100.0);\n        const M = C * viewingConditions.fLRoot;\n        const s = 50.0 *\n            Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n        // CAM16-UCS components\n        const jstar = (1.0 + 100.0 * 0.007) * J / (1.0 + 0.007 * J);\n        const mstar = Math.log(1.0 + 0.0228 * M) / 0.0228;\n        const astar = mstar * Math.cos(hueRadians);\n        const bstar = mstar * Math.sin(hueRadians);\n        return new Cam16(hue, C, J, Q, M, s, jstar, astar, bstar);\n    }\n    /// XYZ representation of CAM16 seen in [viewingConditions].\n    xyzInViewingConditions(viewingConditions) {\n        const alpha = (this.chroma === 0.0 || this.j === 0.0) ?\n            0.0 :\n            this.chroma / Math.sqrt(this.j / 100.0);\n        const t = Math.pow(alpha / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73), 1.0 / 0.9);\n        const hRad = this.hue * Math.PI / 180.0;\n        const eHue = 0.25 * (Math.cos(hRad + 2.0) + 3.8);\n        const ac = viewingConditions.aw *\n            Math.pow(this.j / 100.0, 1.0 / viewingConditions.c / viewingConditions.z);\n        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n        const p2 = (ac / viewingConditions.nbb);\n        const hSin = Math.sin(hRad);\n        const hCos = Math.cos(hRad);\n        const gamma = 23.0 * (p2 + 0.305) * t /\n            (23.0 * p1 + 11 * t * hCos + 108.0 * t * hSin);\n        const a = gamma * hCos;\n        const b = gamma * hSin;\n        const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n        const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n        const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n        const rCBase = Math.max(0, (27.13 * Math.abs(rA)) / (400.0 - Math.abs(rA)));\n        const rC = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(rA) * (100.0 / viewingConditions.fl) *\n            Math.pow(rCBase, 1.0 / 0.42);\n        const gCBase = Math.max(0, (27.13 * Math.abs(gA)) / (400.0 - Math.abs(gA)));\n        const gC = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(gA) * (100.0 / viewingConditions.fl) *\n            Math.pow(gCBase, 1.0 / 0.42);\n        const bCBase = Math.max(0, (27.13 * Math.abs(bA)) / (400.0 - Math.abs(bA)));\n        const bC = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(bA) * (100.0 / viewingConditions.fl) *\n            Math.pow(bCBase, 1.0 / 0.42);\n        const rF = rC / viewingConditions.rgbD[0];\n        const gF = gC / viewingConditions.rgbD[1];\n        const bF = bC / viewingConditions.rgbD[2];\n        const x = 1.86206786 * rF - 1.01125463 * gF + 0.14918677 * bF;\n        const y = 0.38752654 * rF + 0.62144744 * gF - 0.00897398 * bF;\n        const z = -0.01584150 * rF - 0.03412294 * gF + 1.04996444 * bF;\n        return [x, y, z];\n    }\n}\n//# sourceMappingURL=cam16.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/hct/cam16.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/hct/hct.js":
/*!********************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/hct/hct.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hct: () => (/* binding */ Hct)\n/* harmony export */ });\n/* harmony import */ var _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/* harmony import */ var _cam16_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cam16.js */ \"./node_modules/@material/material-color-utilities/hct/cam16.js\");\n/* harmony import */ var _hct_solver_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hct_solver.js */ \"./node_modules/@material/material-color-utilities/hct/hct_solver.js\");\n/* harmony import */ var _viewing_conditions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./viewing_conditions.js */ \"./node_modules/@material/material-color-utilities/hct/viewing_conditions.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A color system built using CAM16 hue and chroma, and L* from\n * L*a*b*.\n *\n * Using L* creates a link between the color system, contrast, and thus\n * accessibility. Contrast ratio depends on relative luminance, or Y in the XYZ\n * color space. L*, or perceptual luminance can be calculated from Y.\n *\n * Unlike Y, L* is linear to human perception, allowing trivial creation of\n * accurate color tones.\n *\n * Unlike contrast ratio, measuring contrast in L* is linear, and simple to\n * calculate. A difference of 40 in HCT tone guarantees a contrast ratio >= 3.0,\n * and a difference of 50 guarantees a contrast ratio >= 4.5.\n */\n\n\n\n\n/**\n * HCT, hue, chroma, and tone. A color system that provides a perceptually\n * accurate color measurement system that can also accurately render what colors\n * will appear as in different lighting environments.\n */\nclass Hct {\n    static from(hue, chroma, tone) {\n        return new Hct(_hct_solver_js__WEBPACK_IMPORTED_MODULE_2__.HctSolver.solveToInt(hue, chroma, tone));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return HCT representation of a color in default viewing conditions\n     */\n    static fromInt(argb) {\n        return new Hct(argb);\n    }\n    toInt() {\n        return this.argb;\n    }\n    /**\n     * A number, in degrees, representing ex. red, orange, yellow, etc.\n     * Ranges from 0 <= hue < 360.\n     */\n    get hue() {\n        return this.internalHue;\n    }\n    /**\n     * @param newHue 0 <= newHue < 360; invalid values are corrected.\n     * Chroma may decrease because chroma has a different maximum for any given\n     * hue and tone.\n     */\n    set hue(newHue) {\n        this.setInternalState(_hct_solver_js__WEBPACK_IMPORTED_MODULE_2__.HctSolver.solveToInt(newHue, this.internalChroma, this.internalTone));\n    }\n    get chroma() {\n        return this.internalChroma;\n    }\n    /**\n     * @param newChroma 0 <= newChroma < ?\n     * Chroma may decrease because chroma has a different maximum for any given\n     * hue and tone.\n     */\n    set chroma(newChroma) {\n        this.setInternalState(_hct_solver_js__WEBPACK_IMPORTED_MODULE_2__.HctSolver.solveToInt(this.internalHue, newChroma, this.internalTone));\n    }\n    /** Lightness. Ranges from 0 to 100. */\n    get tone() {\n        return this.internalTone;\n    }\n    /**\n     * @param newTone 0 <= newTone <= 100; invalid valids are corrected.\n     * Chroma may decrease because chroma has a different maximum for any given\n     * hue and tone.\n     */\n    set tone(newTone) {\n        this.setInternalState(_hct_solver_js__WEBPACK_IMPORTED_MODULE_2__.HctSolver.solveToInt(this.internalHue, this.internalChroma, newTone));\n    }\n    constructor(argb) {\n        this.argb = argb;\n        const cam = _cam16_js__WEBPACK_IMPORTED_MODULE_1__.Cam16.fromInt(argb);\n        this.internalHue = cam.hue;\n        this.internalChroma = cam.chroma;\n        this.internalTone = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.lstarFromArgb(argb);\n        this.argb = argb;\n    }\n    setInternalState(argb) {\n        const cam = _cam16_js__WEBPACK_IMPORTED_MODULE_1__.Cam16.fromInt(argb);\n        this.internalHue = cam.hue;\n        this.internalChroma = cam.chroma;\n        this.internalTone = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.lstarFromArgb(argb);\n        this.argb = argb;\n    }\n    /**\n     * Translates a color into different [ViewingConditions].\n     *\n     * Colors change appearance. They look different with lights on versus off,\n     * the same color, as in hex code, on white looks different when on black.\n     * This is called color relativity, most famously explicated by Josef Albers\n     * in Interaction of Color.\n     *\n     * In color science, color appearance models can account for this and\n     * calculate the appearance of a color in different settings. HCT is based on\n     * CAM16, a color appearance model, and uses it to make these calculations.\n     *\n     * See [ViewingConditions.make] for parameters affecting color appearance.\n     */\n    inViewingConditions(vc) {\n        // 1. Use CAM16 to find XYZ coordinates of color in specified VC.\n        const cam = _cam16_js__WEBPACK_IMPORTED_MODULE_1__.Cam16.fromInt(this.toInt());\n        const viewedInVc = cam.xyzInViewingConditions(vc);\n        // 2. Create CAM16 of those XYZ coordinates in default VC.\n        const recastInVc = _cam16_js__WEBPACK_IMPORTED_MODULE_1__.Cam16.fromXyzInViewingConditions(viewedInVc[0], viewedInVc[1], viewedInVc[2], _viewing_conditions_js__WEBPACK_IMPORTED_MODULE_3__.ViewingConditions.make());\n        // 3. Create HCT from:\n        // - CAM16 using default VC with XYZ coordinates in specified VC.\n        // - L* converted from Y in XYZ coordinates in specified VC.\n        const recastHct = Hct.from(recastInVc.hue, recastInVc.chroma, _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.lstarFromY(viewedInVc[1]));\n        return recastHct;\n    }\n}\n//# sourceMappingURL=hct.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/hct/hct.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/hct/hct_solver.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/hct/hct_solver.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HctSolver: () => (/* binding */ HctSolver)\n/* harmony export */ });\n/* harmony import */ var _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/* harmony import */ var _cam16_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cam16.js */ \"./node_modules/@material/material-color-utilities/hct/cam16.js\");\n/* harmony import */ var _viewing_conditions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./viewing_conditions.js */ \"./node_modules/@material/material-color-utilities/hct/viewing_conditions.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\n\n\n\n\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n/**\n * A class that solves the HCT equation.\n */\nclass HctSolver {\n    /**\n     * Sanitizes a small enough angle in radians.\n     *\n     * @param angle An angle in radians; must not deviate too much\n     * from 0.\n     * @return A coterminal angle between 0 and 2pi.\n     */\n    static sanitizeRadians(angle) {\n        return (angle + Math.PI * 8) % (Math.PI * 2);\n    }\n    /**\n     * Delinearizes an RGB component, returning a floating-point\n     * number.\n     *\n     * @param rgbComponent 0.0 <= rgb_component <= 100.0, represents\n     * linear R/G/B channel\n     * @return 0.0 <= output <= 255.0, color channel converted to\n     * regular RGB space\n     */\n    static trueDelinearized(rgbComponent) {\n        const normalized = rgbComponent / 100.0;\n        let delinearized = 0.0;\n        if (normalized <= 0.0031308) {\n            delinearized = normalized * 12.92;\n        }\n        else {\n            delinearized = 1.055 * Math.pow(normalized, 1.0 / 2.4) - 0.055;\n        }\n        return delinearized * 255.0;\n    }\n    static chromaticAdaptation(component) {\n        const af = Math.pow(Math.abs(component), 0.42);\n        return _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(component) * 400.0 * af / (af + 27.13);\n    }\n    /**\n     * Returns the hue of a linear RGB color in CAM16.\n     *\n     * @param linrgb The linear RGB coordinates of a color.\n     * @return The hue of the color in CAM16, in radians.\n     */\n    static hueOf(linrgb) {\n        const scaledDiscount = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.matrixMultiply(linrgb, HctSolver.SCALED_DISCOUNT_FROM_LINRGB);\n        const rA = HctSolver.chromaticAdaptation(scaledDiscount[0]);\n        const gA = HctSolver.chromaticAdaptation(scaledDiscount[1]);\n        const bA = HctSolver.chromaticAdaptation(scaledDiscount[2]);\n        // redness-greenness\n        const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n        // yellowness-blueness\n        const b = (rA + gA - 2.0 * bA) / 9.0;\n        return Math.atan2(b, a);\n    }\n    static areInCyclicOrder(a, b, c) {\n        const deltaAB = HctSolver.sanitizeRadians(b - a);\n        const deltaAC = HctSolver.sanitizeRadians(c - a);\n        return deltaAB < deltaAC;\n    }\n    /**\n     * Solves the lerp equation.\n     *\n     * @param source The starting number.\n     * @param mid The number in the middle.\n     * @param target The ending number.\n     * @return A number t such that lerp(source, target, t) = mid.\n     */\n    static intercept(source, mid, target) {\n        return (mid - source) / (target - source);\n    }\n    static lerpPoint(source, t, target) {\n        return [\n            source[0] + (target[0] - source[0]) * t,\n            source[1] + (target[1] - source[1]) * t,\n            source[2] + (target[2] - source[2]) * t,\n        ];\n    }\n    /**\n     * Intersects a segment with a plane.\n     *\n     * @param source The coordinates of point A.\n     * @param coordinate The R-, G-, or B-coordinate of the plane.\n     * @param target The coordinates of point B.\n     * @param axis The axis the plane is perpendicular with. (0: R, 1:\n     * G, 2: B)\n     * @return The intersection point of the segment AB with the plane\n     * R=coordinate, G=coordinate, or B=coordinate\n     */\n    static setCoordinate(source, coordinate, target, axis) {\n        const t = HctSolver.intercept(source[axis], coordinate, target[axis]);\n        return HctSolver.lerpPoint(source, t, target);\n    }\n    static isBounded(x) {\n        return 0.0 <= x && x <= 100.0;\n    }\n    /**\n     * Returns the nth possible vertex of the polygonal intersection.\n     *\n     * @param y The Y value of the plane.\n     * @param n The zero-based index of the point. 0 <= n <= 11.\n     * @return The nth possible vertex of the polygonal intersection\n     * of the y plane and the RGB cube, in linear RGB coordinates, if\n     * it exists. If this possible vertex lies outside of the cube,\n     * [-1.0, -1.0, -1.0] is returned.\n     */\n    static nthVertex(y, n) {\n        const kR = HctSolver.Y_FROM_LINRGB[0];\n        const kG = HctSolver.Y_FROM_LINRGB[1];\n        const kB = HctSolver.Y_FROM_LINRGB[2];\n        const coordA = n % 4 <= 1 ? 0.0 : 100.0;\n        const coordB = n % 2 === 0 ? 0.0 : 100.0;\n        if (n < 4) {\n            const g = coordA;\n            const b = coordB;\n            const r = (y - g * kG - b * kB) / kR;\n            if (HctSolver.isBounded(r)) {\n                return [r, g, b];\n            }\n            else {\n                return [-1.0, -1.0, -1.0];\n            }\n        }\n        else if (n < 8) {\n            const b = coordA;\n            const r = coordB;\n            const g = (y - r * kR - b * kB) / kG;\n            if (HctSolver.isBounded(g)) {\n                return [r, g, b];\n            }\n            else {\n                return [-1.0, -1.0, -1.0];\n            }\n        }\n        else {\n            const r = coordA;\n            const g = coordB;\n            const b = (y - r * kR - g * kG) / kB;\n            if (HctSolver.isBounded(b)) {\n                return [r, g, b];\n            }\n            else {\n                return [-1.0, -1.0, -1.0];\n            }\n        }\n    }\n    /**\n     * Finds the segment containing the desired color.\n     *\n     * @param y The Y value of the color.\n     * @param targetHue The hue of the color.\n     * @return A list of two sets of linear RGB coordinates, each\n     * corresponding to an endpoint of the segment containing the\n     * desired color.\n     */\n    static bisectToSegment(y, targetHue) {\n        let left = [-1.0, -1.0, -1.0];\n        let right = left;\n        let leftHue = 0.0;\n        let rightHue = 0.0;\n        let initialized = false;\n        let uncut = true;\n        for (let n = 0; n < 12; n++) {\n            const mid = HctSolver.nthVertex(y, n);\n            if (mid[0] < 0) {\n                continue;\n            }\n            const midHue = HctSolver.hueOf(mid);\n            if (!initialized) {\n                left = mid;\n                right = mid;\n                leftHue = midHue;\n                rightHue = midHue;\n                initialized = true;\n                continue;\n            }\n            if (uncut || HctSolver.areInCyclicOrder(leftHue, midHue, rightHue)) {\n                uncut = false;\n                if (HctSolver.areInCyclicOrder(leftHue, targetHue, midHue)) {\n                    right = mid;\n                    rightHue = midHue;\n                }\n                else {\n                    left = mid;\n                    leftHue = midHue;\n                }\n            }\n        }\n        return [left, right];\n    }\n    static midpoint(a, b) {\n        return [\n            (a[0] + b[0]) / 2,\n            (a[1] + b[1]) / 2,\n            (a[2] + b[2]) / 2,\n        ];\n    }\n    static criticalPlaneBelow(x) {\n        return Math.floor(x - 0.5);\n    }\n    static criticalPlaneAbove(x) {\n        return Math.ceil(x - 0.5);\n    }\n    /**\n     * Finds a color with the given Y and hue on the boundary of the\n     * cube.\n     *\n     * @param y The Y value of the color.\n     * @param targetHue The hue of the color.\n     * @return The desired color, in linear RGB coordinates.\n     */\n    static bisectToLimit(y, targetHue) {\n        const segment = HctSolver.bisectToSegment(y, targetHue);\n        let left = segment[0];\n        let leftHue = HctSolver.hueOf(left);\n        let right = segment[1];\n        for (let axis = 0; axis < 3; axis++) {\n            if (left[axis] !== right[axis]) {\n                let lPlane = -1;\n                let rPlane = 255;\n                if (left[axis] < right[axis]) {\n                    lPlane = HctSolver.criticalPlaneBelow(HctSolver.trueDelinearized(left[axis]));\n                    rPlane = HctSolver.criticalPlaneAbove(HctSolver.trueDelinearized(right[axis]));\n                }\n                else {\n                    lPlane = HctSolver.criticalPlaneAbove(HctSolver.trueDelinearized(left[axis]));\n                    rPlane = HctSolver.criticalPlaneBelow(HctSolver.trueDelinearized(right[axis]));\n                }\n                for (let i = 0; i < 8; i++) {\n                    if (Math.abs(rPlane - lPlane) <= 1) {\n                        break;\n                    }\n                    else {\n                        const mPlane = Math.floor((lPlane + rPlane) / 2.0);\n                        const midPlaneCoordinate = HctSolver.CRITICAL_PLANES[mPlane];\n                        const mid = HctSolver.setCoordinate(left, midPlaneCoordinate, right, axis);\n                        const midHue = HctSolver.hueOf(mid);\n                        if (HctSolver.areInCyclicOrder(leftHue, targetHue, midHue)) {\n                            right = mid;\n                            rPlane = mPlane;\n                        }\n                        else {\n                            left = mid;\n                            leftHue = midHue;\n                            lPlane = mPlane;\n                        }\n                    }\n                }\n            }\n        }\n        return HctSolver.midpoint(left, right);\n    }\n    static inverseChromaticAdaptation(adapted) {\n        const adaptedAbs = Math.abs(adapted);\n        const base = Math.max(0, 27.13 * adaptedAbs / (400.0 - adaptedAbs));\n        return _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.signum(adapted) * Math.pow(base, 1.0 / 0.42);\n    }\n    /**\n     * Finds a color with the given hue, chroma, and Y.\n     *\n     * @param hueRadians The desired hue in radians.\n     * @param chroma The desired chroma.\n     * @param y The desired Y.\n     * @return The desired color as a hexadecimal integer, if found; 0\n     * otherwise.\n     */\n    static findResultByJ(hueRadians, chroma, y) {\n        // Initial estimate of j.\n        let j = Math.sqrt(y) * 11.0;\n        // ===========================================================\n        // Operations inlined from Cam16 to avoid repeated calculation\n        // ===========================================================\n        const viewingConditions = _viewing_conditions_js__WEBPACK_IMPORTED_MODULE_3__.ViewingConditions.DEFAULT;\n        const tInnerCoeff = 1 / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n        const eHue = 0.25 * (Math.cos(hueRadians + 2.0) + 3.8);\n        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n        const hSin = Math.sin(hueRadians);\n        const hCos = Math.cos(hueRadians);\n        for (let iterationRound = 0; iterationRound < 5; iterationRound++) {\n            // ===========================================================\n            // Operations inlined from Cam16 to avoid repeated calculation\n            // ===========================================================\n            const jNormalized = j / 100.0;\n            const alpha = chroma === 0.0 || j === 0.0 ? 0.0 : chroma / Math.sqrt(jNormalized);\n            const t = Math.pow(alpha * tInnerCoeff, 1.0 / 0.9);\n            const ac = viewingConditions.aw *\n                Math.pow(jNormalized, 1.0 / viewingConditions.c / viewingConditions.z);\n            const p2 = ac / viewingConditions.nbb;\n            const gamma = 23.0 * (p2 + 0.305) * t /\n                (23.0 * p1 + 11 * t * hCos + 108.0 * t * hSin);\n            const a = gamma * hCos;\n            const b = gamma * hSin;\n            const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n            const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n            const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n            const rCScaled = HctSolver.inverseChromaticAdaptation(rA);\n            const gCScaled = HctSolver.inverseChromaticAdaptation(gA);\n            const bCScaled = HctSolver.inverseChromaticAdaptation(bA);\n            const linrgb = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.matrixMultiply([rCScaled, gCScaled, bCScaled], HctSolver.LINRGB_FROM_SCALED_DISCOUNT);\n            // ===========================================================\n            // Operations inlined from Cam16 to avoid repeated calculation\n            // ===========================================================\n            if (linrgb[0] < 0 || linrgb[1] < 0 || linrgb[2] < 0) {\n                return 0;\n            }\n            const kR = HctSolver.Y_FROM_LINRGB[0];\n            const kG = HctSolver.Y_FROM_LINRGB[1];\n            const kB = HctSolver.Y_FROM_LINRGB[2];\n            const fnj = kR * linrgb[0] + kG * linrgb[1] + kB * linrgb[2];\n            if (fnj <= 0) {\n                return 0;\n            }\n            if (iterationRound === 4 || Math.abs(fnj - y) < 0.002) {\n                if (linrgb[0] > 100.01 || linrgb[1] > 100.01 || linrgb[2] > 100.01) {\n                    return 0;\n                }\n                return _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.argbFromLinrgb(linrgb);\n            }\n            // Iterates with Newton method,\n            // Using 2 * fn(j) / j as the approximation of fn'(j)\n            j = j - (fnj - y) * j / (2 * fnj);\n        }\n        return 0;\n    }\n    /**\n     * Finds an sRGB color with the given hue, chroma, and L*, if\n     * possible.\n     *\n     * @param hueDegrees The desired hue, in degrees.\n     * @param chroma The desired chroma.\n     * @param lstar The desired L*.\n     * @return A hexadecimal representing the sRGB color. The color\n     * has sufficiently close hue, chroma, and L* to the desired\n     * values, if possible; otherwise, the hue and L* will be\n     * sufficiently close, and chroma will be maximized.\n     */\n    static solveToInt(hueDegrees, chroma, lstar) {\n        if (chroma < 0.0001 || lstar < 0.0001 || lstar > 99.9999) {\n            return _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.argbFromLstar(lstar);\n        }\n        hueDegrees = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeDegreesDouble(hueDegrees);\n        const hueRadians = hueDegrees / 180 * Math.PI;\n        const y = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.yFromLstar(lstar);\n        const exactAnswer = HctSolver.findResultByJ(hueRadians, chroma, y);\n        if (exactAnswer !== 0) {\n            return exactAnswer;\n        }\n        const linrgb = HctSolver.bisectToLimit(y, hueRadians);\n        return _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.argbFromLinrgb(linrgb);\n    }\n    /**\n     * Finds an sRGB color with the given hue, chroma, and L*, if\n     * possible.\n     *\n     * @param hueDegrees The desired hue, in degrees.\n     * @param chroma The desired chroma.\n     * @param lstar The desired L*.\n     * @return An CAM16 object representing the sRGB color. The color\n     * has sufficiently close hue, chroma, and L* to the desired\n     * values, if possible; otherwise, the hue and L* will be\n     * sufficiently close, and chroma will be maximized.\n     */\n    static solveToCam(hueDegrees, chroma, lstar) {\n        return _cam16_js__WEBPACK_IMPORTED_MODULE_2__.Cam16.fromInt(HctSolver.solveToInt(hueDegrees, chroma, lstar));\n    }\n}\nHctSolver.SCALED_DISCOUNT_FROM_LINRGB = [\n    [\n        0.001200833568784504,\n        0.002389694492170889,\n        0.0002795742885861124,\n    ],\n    [\n        0.0005891086651375999,\n        0.0029785502573438758,\n        0.0003270666104008398,\n    ],\n    [\n        0.00010146692491640572,\n        0.0005364214359186694,\n        0.0032979401770712076,\n    ],\n];\nHctSolver.LINRGB_FROM_SCALED_DISCOUNT = [\n    [\n        1373.2198709594231,\n        -1100.4251190754821,\n        -7.278681089101213,\n    ],\n    [\n        -271.815969077903,\n        559.6580465940733,\n        -32.46047482791194,\n    ],\n    [\n        1.9622899599665666,\n        -57.173814538844006,\n        308.7233197812385,\n    ],\n];\nHctSolver.Y_FROM_LINRGB = [0.2126, 0.7152, 0.0722];\nHctSolver.CRITICAL_PLANES = [\n    0.015176349177441876, 0.045529047532325624, 0.07588174588720938,\n    0.10623444424209313, 0.13658714259697685, 0.16693984095186062,\n    0.19729253930674434, 0.2276452376616281, 0.2579979360165119,\n    0.28835063437139563, 0.3188300904430532, 0.350925934958123,\n    0.3848314933096426, 0.42057480301049466, 0.458183274052838,\n    0.4976837250274023, 0.5391024159806381, 0.5824650784040898,\n    0.6277969426914107, 0.6751227633498623, 0.7244668422128921,\n    0.775853049866786, 0.829304845476233, 0.8848452951698498,\n    0.942497089126609, 1.0022825574869039, 1.0642236851973577,\n    1.1283421258858297, 1.1946592148522128, 1.2631959812511864,\n    1.3339731595349034, 1.407011200216447, 1.4823302800086415,\n    1.5599503113873272, 1.6398909516233677, 1.7221716113234105,\n    1.8068114625156377, 1.8938294463134073, 1.9832442801866852,\n    2.075074464868551, 2.1693382909216234, 2.2660538449872063,\n    2.36523901573795, 2.4669114995532007, 2.5710888059345764,\n    2.6777882626779785, 2.7870270208169257, 2.898822059350997,\n    3.0131901897720907, 3.1301480604002863, 3.2497121605402226,\n    3.3718988244681087, 3.4967242352587946, 3.624204428461639,\n    3.754355295633311, 3.887192587735158, 4.022731918402185,\n    4.160988767090289, 4.301978482107941, 4.445716283538092,\n    4.592217266055746, 4.741496401646282, 4.893568542229298,\n    5.048448422192488, 5.20615066083972, 5.3666897647573375,\n    5.5300801301023865, 5.696336044816294, 5.865471690767354,\n    6.037501145825082, 6.212438385869475, 6.390297286737924,\n    6.571091626112461, 6.7548350853498045, 6.941541251256611,\n    7.131223617812143, 7.323895587840543, 7.5195704746346665,\n    7.7182615035334345, 7.919981813454504, 8.124744458384042,\n    8.332562408825165, 8.543448553206703, 8.757415699253682,\n    8.974476575321063, 9.194643831691977, 9.417930041841839,\n    9.644347703669503, 9.873909240696694, 10.106627003236781,\n    10.342513269534024, 10.58158024687427, 10.8238400726681,\n    11.069304815507364, 11.317986476196008, 11.569896988756009,\n    11.825048221409341, 12.083451977536606, 12.345119996613247,\n    12.610063955123938, 12.878295467455942, 13.149826086772048,\n    13.42466730586372, 13.702830557985108, 13.984327217668513,\n    14.269168601521828, 14.55736596900856, 14.848930523210871,\n    15.143873411576273, 15.44220572664832, 15.743938506781891,\n    16.04908273684337, 16.35764934889634, 16.66964922287304,\n    16.985093187232053, 17.30399201960269, 17.62635644741625,\n    17.95219714852476, 18.281524751807332, 18.614349837764564,\n    18.95068293910138, 19.290534541298456, 19.633915083172692,\n    19.98083495742689, 20.331304511189067, 20.685334046541502,\n    21.042933821039977, 21.404114048223256, 21.76888489811322,\n    22.137256497705877, 22.50923893145328, 22.884842241736916,\n    23.264076429332462, 23.6469514538663, 24.033477234264016,\n    24.42366364919083, 24.817520537484558, 25.21505769858089,\n    25.61628489293138, 26.021211842414342, 26.429848230738664,\n    26.842203703840827, 27.258287870275353, 27.678110301598522,\n    28.10168053274597, 28.529008062403893, 28.96010235337422,\n    29.39497283293396, 29.83362889318845, 30.276079891419332,\n    30.722335150426627, 31.172403958865512, 31.62629557157785,\n    32.08401920991837, 32.54558406207592, 33.010999283389665,\n    33.4802739966603, 33.953417292456834, 34.430438229418264,\n    34.911345834551085, 35.39614910352207, 35.88485700094671,\n    36.37747846067349, 36.87402238606382, 37.37449765026789,\n    37.87891309649659, 38.38727753828926, 38.89959975977785,\n    39.41588851594697, 39.93615253289054, 40.460400508064545,\n    40.98864111053629, 41.520882981230194, 42.05713473317016,\n    42.597404951718396, 43.141702194811224, 43.6900349931913,\n    44.24241185063697, 44.798841244188324, 45.35933162437017,\n    45.92389141541209, 46.49252901546552, 47.065252796817916,\n    47.64207110610409, 48.22299226451468, 48.808024568002054,\n    49.3971762874833, 49.9904556690408, 50.587870934119984,\n    51.189430279724725, 51.79514187861014, 52.40501387947288,\n    53.0190544071392, 53.637271562750364, 54.259673423945976,\n    54.88626804504493, 55.517063457223934, 56.15206766869424,\n    56.79128866487574, 57.43473440856916, 58.08241284012621,\n    58.734331877617365, 59.39049941699807, 60.05092333227251,\n    60.715611475655585, 61.38457167773311, 62.057811747619894,\n    62.7353394731159, 63.417162620860914, 64.10328893648692,\n    64.79372614476921, 65.48848194977529, 66.18756403501224,\n    66.89098006357258, 67.59873767827808, 68.31084450182222,\n    69.02730813691093, 69.74813616640164, 70.47333615344107,\n    71.20291564160104, 71.93688215501312, 72.67524319850172,\n    73.41800625771542, 74.16517879925733, 74.9167682708136,\n    75.67278210128072, 76.43322770089146, 77.1981124613393,\n    77.96744375590167, 78.74122893956174, 79.51947534912904,\n    80.30219030335869, 81.08938110306934, 81.88105503125999,\n    82.67721935322541, 83.4778813166706, 84.28304815182372,\n    85.09272707154808, 85.90692527145302, 86.72564993000343,\n    87.54890820862819, 88.3767072518277, 89.2090541872801,\n    90.04595612594655, 90.88742016217518, 91.73345337380438,\n    92.58406282226491, 93.43925555268066, 94.29903859396902,\n    95.16341895893969, 96.03240364439274, 96.9059996312159,\n    97.78421388448044, 98.6670533535366, 99.55452497210776,\n];\n//# sourceMappingURL=hct_solver.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/hct/hct_solver.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/hct/viewing_conditions.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/hct/viewing_conditions.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ViewingConditions: () => (/* binding */ ViewingConditions)\n/* harmony export */ });\n/* harmony import */ var _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * In traditional color spaces, a color can be identified solely by the\n * observer's measurement of the color. Color appearance models such as CAM16\n * also use information about the environment where the color was\n * observed, known as the viewing conditions.\n *\n * For example, white under the traditional assumption of a midday sun white\n * point is accurately measured as a slightly chromatic blue by CAM16. (roughly,\n * hue 203, chroma 3, lightness 100)\n *\n * This class caches intermediate values of the CAM16 conversion process that\n * depend only on viewing conditions, enabling speed ups.\n */\nclass ViewingConditions {\n    /**\n     * Create ViewingConditions from a simple, physically relevant, set of\n     * parameters.\n     *\n     * @param whitePoint White point, measured in the XYZ color space.\n     *     default = D65, or sunny day afternoon\n     * @param adaptingLuminance The luminance of the adapting field. Informally,\n     *     how bright it is in the room where the color is viewed. Can be\n     *     calculated from lux by multiplying lux by 0.0586. default = 11.72,\n     *     or 200 lux.\n     * @param backgroundLstar The lightness of the area surrounding the color.\n     *     measured by L* in L*a*b*. default = 50.0\n     * @param surround A general description of the lighting surrounding the\n     *     color. 0 is pitch dark, like watching a movie in a theater. 1.0 is a\n     *     dimly light room, like watching TV at home at night. 2.0 means there\n     *     is no difference between the lighting on the color and around it.\n     *     default = 2.0\n     * @param discountingIlluminant Whether the eye accounts for the tint of the\n     *     ambient lighting, such as knowing an apple is still red in green light.\n     *     default = false, the eye does not perform this process on\n     *       self-luminous objects like displays.\n     */\n    static make(whitePoint = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.whitePointD65(), adaptingLuminance = (200.0 / Math.PI) * _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.yFromLstar(50.0) / 100.0, backgroundLstar = 50.0, surround = 2.0, discountingIlluminant = false) {\n        const xyz = whitePoint;\n        const rW = xyz[0] * 0.401288 + xyz[1] * 0.650173 + xyz[2] * -0.051461;\n        const gW = xyz[0] * -0.250268 + xyz[1] * 1.204414 + xyz[2] * 0.045854;\n        const bW = xyz[0] * -0.002079 + xyz[1] * 0.048952 + xyz[2] * 0.953127;\n        const f = 0.8 + surround / 10.0;\n        const c = f >= 0.9 ? _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.lerp(0.59, 0.69, (f - 0.9) * 10.0) :\n            _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.lerp(0.525, 0.59, (f - 0.8) * 10.0);\n        let d = discountingIlluminant ?\n            1.0 :\n            f * (1.0 - (1.0 / 3.6) * Math.exp((-adaptingLuminance - 42.0) / 92.0));\n        d = d > 1.0 ? 1.0 : d < 0.0 ? 0.0 : d;\n        const nc = f;\n        const rgbD = [\n            d * (100.0 / rW) + 1.0 - d,\n            d * (100.0 / gW) + 1.0 - d,\n            d * (100.0 / bW) + 1.0 - d,\n        ];\n        const k = 1.0 / (5.0 * adaptingLuminance + 1.0);\n        const k4 = k * k * k * k;\n        const k4F = 1.0 - k4;\n        const fl = k4 * adaptingLuminance +\n            0.1 * k4F * k4F * Math.cbrt(5.0 * adaptingLuminance);\n        const n = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.yFromLstar(backgroundLstar) / whitePoint[1];\n        const z = 1.48 + Math.sqrt(n);\n        const nbb = 0.725 / Math.pow(n, 0.2);\n        const ncb = nbb;\n        const rgbAFactors = [\n            Math.pow((fl * rgbD[0] * rW) / 100.0, 0.42),\n            Math.pow((fl * rgbD[1] * gW) / 100.0, 0.42),\n            Math.pow((fl * rgbD[2] * bW) / 100.0, 0.42),\n        ];\n        const rgbA = [\n            (400.0 * rgbAFactors[0]) / (rgbAFactors[0] + 27.13),\n            (400.0 * rgbAFactors[1]) / (rgbAFactors[1] + 27.13),\n            (400.0 * rgbAFactors[2]) / (rgbAFactors[2] + 27.13),\n        ];\n        const aw = (2.0 * rgbA[0] + rgbA[1] + 0.05 * rgbA[2]) * nbb;\n        return new ViewingConditions(n, aw, nbb, ncb, c, nc, rgbD, fl, Math.pow(fl, 0.25), z);\n    }\n    /**\n     * Parameters are intermediate values of the CAM16 conversion process. Their\n     * names are shorthand for technical color science terminology, this class\n     * would not benefit from documenting them individually. A brief overview\n     * is available in the CAM16 specification, and a complete overview requires\n     * a color science textbook, such as Fairchild's Color Appearance Models.\n     */\n    constructor(n, aw, nbb, ncb, c, nc, rgbD, fl, fLRoot, z) {\n        this.n = n;\n        this.aw = aw;\n        this.nbb = nbb;\n        this.ncb = ncb;\n        this.c = c;\n        this.nc = nc;\n        this.rgbD = rgbD;\n        this.fl = fl;\n        this.fLRoot = fLRoot;\n        this.z = z;\n    }\n}\n/** sRGB-like viewing conditions.  */\nViewingConditions.DEFAULT = ViewingConditions.make();\n//# sourceMappingURL=viewing_conditions.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/hct/viewing_conditions.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blend: () => (/* reexport safe */ _blend_blend_js__WEBPACK_IMPORTED_MODULE_0__.Blend),\n/* harmony export */   Cam16: () => (/* reexport safe */ _hct_cam16_js__WEBPACK_IMPORTED_MODULE_5__.Cam16),\n/* harmony export */   Contrast: () => (/* reexport safe */ _contrast_contrast_js__WEBPACK_IMPORTED_MODULE_1__.Contrast),\n/* harmony export */   CorePalette: () => (/* reexport safe */ _palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_8__.CorePalette),\n/* harmony export */   DislikeAnalyzer: () => (/* reexport safe */ _dislike_dislike_analyzer_js__WEBPACK_IMPORTED_MODULE_2__.DislikeAnalyzer),\n/* harmony export */   DynamicColor: () => (/* reexport safe */ _dynamiccolor_dynamic_color_js__WEBPACK_IMPORTED_MODULE_3__.DynamicColor),\n/* harmony export */   DynamicScheme: () => (/* reexport safe */ _scheme_dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_14__.DynamicScheme),\n/* harmony export */   Hct: () => (/* reexport safe */ _hct_hct_js__WEBPACK_IMPORTED_MODULE_6__.Hct),\n/* harmony export */   MaterialDynamicColors: () => (/* reexport safe */ _dynamiccolor_material_dynamic_colors_js__WEBPACK_IMPORTED_MODULE_4__.MaterialDynamicColors),\n/* harmony export */   QuantizerCelebi: () => (/* reexport safe */ _quantize_quantizer_celebi_js__WEBPACK_IMPORTED_MODULE_10__.QuantizerCelebi),\n/* harmony export */   QuantizerMap: () => (/* reexport safe */ _quantize_quantizer_map_js__WEBPACK_IMPORTED_MODULE_11__.QuantizerMap),\n/* harmony export */   QuantizerWsmeans: () => (/* reexport safe */ _quantize_quantizer_wsmeans_js__WEBPACK_IMPORTED_MODULE_12__.QuantizerWsmeans),\n/* harmony export */   QuantizerWu: () => (/* reexport safe */ _quantize_quantizer_wu_js__WEBPACK_IMPORTED_MODULE_13__.QuantizerWu),\n/* harmony export */   Scheme: () => (/* reexport safe */ _scheme_scheme_js__WEBPACK_IMPORTED_MODULE_15__.Scheme),\n/* harmony export */   SchemeAndroid: () => (/* reexport safe */ _scheme_scheme_android_js__WEBPACK_IMPORTED_MODULE_16__.SchemeAndroid),\n/* harmony export */   SchemeContent: () => (/* reexport safe */ _scheme_scheme_content_js__WEBPACK_IMPORTED_MODULE_17__.SchemeContent),\n/* harmony export */   SchemeExpressive: () => (/* reexport safe */ _scheme_scheme_expressive_js__WEBPACK_IMPORTED_MODULE_18__.SchemeExpressive),\n/* harmony export */   SchemeFidelity: () => (/* reexport safe */ _scheme_scheme_fidelity_js__WEBPACK_IMPORTED_MODULE_19__.SchemeFidelity),\n/* harmony export */   SchemeFruitSalad: () => (/* reexport safe */ _scheme_scheme_fruit_salad_js__WEBPACK_IMPORTED_MODULE_31__.SchemeFruitSalad),\n/* harmony export */   SchemeMonochrome: () => (/* reexport safe */ _scheme_scheme_monochrome_js__WEBPACK_IMPORTED_MODULE_20__.SchemeMonochrome),\n/* harmony export */   SchemeNeutral: () => (/* reexport safe */ _scheme_scheme_neutral_js__WEBPACK_IMPORTED_MODULE_21__.SchemeNeutral),\n/* harmony export */   SchemeRainbow: () => (/* reexport safe */ _scheme_scheme_rainbow_js__WEBPACK_IMPORTED_MODULE_32__.SchemeRainbow),\n/* harmony export */   SchemeTonalSpot: () => (/* reexport safe */ _scheme_scheme_tonal_spot_js__WEBPACK_IMPORTED_MODULE_22__.SchemeTonalSpot),\n/* harmony export */   SchemeVibrant: () => (/* reexport safe */ _scheme_scheme_vibrant_js__WEBPACK_IMPORTED_MODULE_23__.SchemeVibrant),\n/* harmony export */   Score: () => (/* reexport safe */ _score_score_js__WEBPACK_IMPORTED_MODULE_24__.Score),\n/* harmony export */   TemperatureCache: () => (/* reexport safe */ _temperature_temperature_cache_js__WEBPACK_IMPORTED_MODULE_25__.TemperatureCache),\n/* harmony export */   TonalPalette: () => (/* reexport safe */ _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_9__.TonalPalette),\n/* harmony export */   Variant: () => (/* reexport safe */ _scheme_variant_js__WEBPACK_IMPORTED_MODULE_33__.Variant),\n/* harmony export */   ViewingConditions: () => (/* reexport safe */ _hct_viewing_conditions_js__WEBPACK_IMPORTED_MODULE_7__.ViewingConditions),\n/* harmony export */   alphaFromArgb: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.alphaFromArgb),\n/* harmony export */   applyTheme: () => (/* reexport safe */ _utils_theme_utils_js__WEBPACK_IMPORTED_MODULE_30__.applyTheme),\n/* harmony export */   argbFromHex: () => (/* reexport safe */ _utils_string_utils_js__WEBPACK_IMPORTED_MODULE_28__.argbFromHex),\n/* harmony export */   argbFromLab: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.argbFromLab),\n/* harmony export */   argbFromLinrgb: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.argbFromLinrgb),\n/* harmony export */   argbFromLstar: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.argbFromLstar),\n/* harmony export */   argbFromRgb: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.argbFromRgb),\n/* harmony export */   argbFromRgba: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.argbFromRgba),\n/* harmony export */   argbFromXyz: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.argbFromXyz),\n/* harmony export */   blueFromArgb: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.blueFromArgb),\n/* harmony export */   clampDouble: () => (/* reexport safe */ _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_27__.clampDouble),\n/* harmony export */   clampInt: () => (/* reexport safe */ _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_27__.clampInt),\n/* harmony export */   customColor: () => (/* reexport safe */ _utils_theme_utils_js__WEBPACK_IMPORTED_MODULE_30__.customColor),\n/* harmony export */   delinearized: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.delinearized),\n/* harmony export */   differenceDegrees: () => (/* reexport safe */ _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_27__.differenceDegrees),\n/* harmony export */   greenFromArgb: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.greenFromArgb),\n/* harmony export */   hexFromArgb: () => (/* reexport safe */ _utils_string_utils_js__WEBPACK_IMPORTED_MODULE_28__.hexFromArgb),\n/* harmony export */   isOpaque: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.isOpaque),\n/* harmony export */   labFromArgb: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.labFromArgb),\n/* harmony export */   lerp: () => (/* reexport safe */ _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_27__.lerp),\n/* harmony export */   linearized: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.linearized),\n/* harmony export */   lstarFromArgb: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.lstarFromArgb),\n/* harmony export */   lstarFromY: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.lstarFromY),\n/* harmony export */   matrixMultiply: () => (/* reexport safe */ _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_27__.matrixMultiply),\n/* harmony export */   redFromArgb: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.redFromArgb),\n/* harmony export */   rgbaFromArgb: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.rgbaFromArgb),\n/* harmony export */   rotationDirection: () => (/* reexport safe */ _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_27__.rotationDirection),\n/* harmony export */   sanitizeDegreesDouble: () => (/* reexport safe */ _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_27__.sanitizeDegreesDouble),\n/* harmony export */   sanitizeDegreesInt: () => (/* reexport safe */ _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_27__.sanitizeDegreesInt),\n/* harmony export */   signum: () => (/* reexport safe */ _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_27__.signum),\n/* harmony export */   sourceColorFromImage: () => (/* reexport safe */ _utils_image_utils_js__WEBPACK_IMPORTED_MODULE_29__.sourceColorFromImage),\n/* harmony export */   themeFromImage: () => (/* reexport safe */ _utils_theme_utils_js__WEBPACK_IMPORTED_MODULE_30__.themeFromImage),\n/* harmony export */   themeFromSourceColor: () => (/* reexport safe */ _utils_theme_utils_js__WEBPACK_IMPORTED_MODULE_30__.themeFromSourceColor),\n/* harmony export */   whitePointD65: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.whitePointD65),\n/* harmony export */   xyzFromArgb: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.xyzFromArgb),\n/* harmony export */   yFromLstar: () => (/* reexport safe */ _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__.yFromLstar)\n/* harmony export */ });\n/* harmony import */ var _blend_blend_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blend/blend.js */ \"./node_modules/@material/material-color-utilities/blend/blend.js\");\n/* harmony import */ var _contrast_contrast_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./contrast/contrast.js */ \"./node_modules/@material/material-color-utilities/contrast/contrast.js\");\n/* harmony import */ var _dislike_dislike_analyzer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dislike/dislike_analyzer.js */ \"./node_modules/@material/material-color-utilities/dislike/dislike_analyzer.js\");\n/* harmony import */ var _dynamiccolor_dynamic_color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dynamiccolor/dynamic_color.js */ \"./node_modules/@material/material-color-utilities/dynamiccolor/dynamic_color.js\");\n/* harmony import */ var _dynamiccolor_material_dynamic_colors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dynamiccolor/material_dynamic_colors.js */ \"./node_modules/@material/material-color-utilities/dynamiccolor/material_dynamic_colors.js\");\n/* harmony import */ var _hct_cam16_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hct/cam16.js */ \"./node_modules/@material/material-color-utilities/hct/cam16.js\");\n/* harmony import */ var _hct_hct_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hct/hct.js */ \"./node_modules/@material/material-color-utilities/hct/hct.js\");\n/* harmony import */ var _hct_viewing_conditions_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./hct/viewing_conditions.js */ \"./node_modules/@material/material-color-utilities/hct/viewing_conditions.js\");\n/* harmony import */ var _palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./palettes/core_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/core_palette.js\");\n/* harmony import */ var _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./palettes/tonal_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/tonal_palette.js\");\n/* harmony import */ var _quantize_quantizer_celebi_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./quantize/quantizer_celebi.js */ \"./node_modules/@material/material-color-utilities/quantize/quantizer_celebi.js\");\n/* harmony import */ var _quantize_quantizer_map_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./quantize/quantizer_map.js */ \"./node_modules/@material/material-color-utilities/quantize/quantizer_map.js\");\n/* harmony import */ var _quantize_quantizer_wsmeans_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./quantize/quantizer_wsmeans.js */ \"./node_modules/@material/material-color-utilities/quantize/quantizer_wsmeans.js\");\n/* harmony import */ var _quantize_quantizer_wu_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./quantize/quantizer_wu.js */ \"./node_modules/@material/material-color-utilities/quantize/quantizer_wu.js\");\n/* harmony import */ var _scheme_dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./scheme/dynamic_scheme.js */ \"./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js\");\n/* harmony import */ var _scheme_scheme_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./scheme/scheme.js */ \"./node_modules/@material/material-color-utilities/scheme/scheme.js\");\n/* harmony import */ var _scheme_scheme_android_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./scheme/scheme_android.js */ \"./node_modules/@material/material-color-utilities/scheme/scheme_android.js\");\n/* harmony import */ var _scheme_scheme_content_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./scheme/scheme_content.js */ \"./node_modules/@material/material-color-utilities/scheme/scheme_content.js\");\n/* harmony import */ var _scheme_scheme_expressive_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./scheme/scheme_expressive.js */ \"./node_modules/@material/material-color-utilities/scheme/scheme_expressive.js\");\n/* harmony import */ var _scheme_scheme_fidelity_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./scheme/scheme_fidelity.js */ \"./node_modules/@material/material-color-utilities/scheme/scheme_fidelity.js\");\n/* harmony import */ var _scheme_scheme_monochrome_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./scheme/scheme_monochrome.js */ \"./node_modules/@material/material-color-utilities/scheme/scheme_monochrome.js\");\n/* harmony import */ var _scheme_scheme_neutral_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./scheme/scheme_neutral.js */ \"./node_modules/@material/material-color-utilities/scheme/scheme_neutral.js\");\n/* harmony import */ var _scheme_scheme_tonal_spot_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./scheme/scheme_tonal_spot.js */ \"./node_modules/@material/material-color-utilities/scheme/scheme_tonal_spot.js\");\n/* harmony import */ var _scheme_scheme_vibrant_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./scheme/scheme_vibrant.js */ \"./node_modules/@material/material-color-utilities/scheme/scheme_vibrant.js\");\n/* harmony import */ var _score_score_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./score/score.js */ \"./node_modules/@material/material-color-utilities/score/score.js\");\n/* harmony import */ var _temperature_temperature_cache_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./temperature/temperature_cache.js */ \"./node_modules/@material/material-color-utilities/temperature/temperature_cache.js\");\n/* harmony import */ var _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./utils/color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/* harmony import */ var _utils_string_utils_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./utils/string_utils.js */ \"./node_modules/@material/material-color-utilities/utils/string_utils.js\");\n/* harmony import */ var _utils_image_utils_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./utils/image_utils.js */ \"./node_modules/@material/material-color-utilities/utils/image_utils.js\");\n/* harmony import */ var _utils_theme_utils_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./utils/theme_utils.js */ \"./node_modules/@material/material-color-utilities/utils/theme_utils.js\");\n/* harmony import */ var _scheme_scheme_fruit_salad_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./scheme/scheme_fruit_salad.js */ \"./node_modules/@material/material-color-utilities/scheme/scheme_fruit_salad.js\");\n/* harmony import */ var _scheme_scheme_rainbow_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./scheme/scheme_rainbow.js */ \"./node_modules/@material/material-color-utilities/scheme/scheme_rainbow.js\");\n/* harmony import */ var _scheme_variant_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./scheme/variant.js */ \"./node_modules/@material/material-color-utilities/scheme/variant.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//fix undefinded error\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/index.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/palettes/core_palette.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/palettes/core_palette.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CorePalette: () => (/* binding */ CorePalette)\n/* harmony export */ });\n/* harmony import */ var _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hct/hct.js */ \"./node_modules/@material/material-color-utilities/hct/hct.js\");\n/* harmony import */ var _tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tonal_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/tonal_palette.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * An intermediate concept between the key color for a UI theme, and a full\n * color scheme. 5 sets of tones are generated, all except one use the same hue\n * as the key color, and all vary in chroma.\n */\nclass CorePalette {\n    /**\n     * @param argb ARGB representation of a color\n     */\n    static of(argb) {\n        return new CorePalette(argb, false);\n    }\n    /**\n     * @param argb ARGB representation of a color\n     */\n    static contentOf(argb) {\n        return new CorePalette(argb, true);\n    }\n    /**\n     * Create a [CorePalette] from a set of colors\n     */\n    static fromColors(colors) {\n        return CorePalette.createPaletteFromColors(false, colors);\n    }\n    /**\n     * Create a content [CorePalette] from a set of colors\n     */\n    static contentFromColors(colors) {\n        return CorePalette.createPaletteFromColors(true, colors);\n    }\n    static createPaletteFromColors(content, colors) {\n        const palette = new CorePalette(colors.primary, content);\n        if (colors.secondary) {\n            const p = new CorePalette(colors.secondary, content);\n            palette.a2 = p.a1;\n        }\n        if (colors.tertiary) {\n            const p = new CorePalette(colors.tertiary, content);\n            palette.a3 = p.a1;\n        }\n        if (colors.error) {\n            const p = new CorePalette(colors.error, content);\n            palette.error = p.a1;\n        }\n        if (colors.neutral) {\n            const p = new CorePalette(colors.neutral, content);\n            palette.n1 = p.n1;\n        }\n        if (colors.neutralVariant) {\n            const p = new CorePalette(colors.neutralVariant, content);\n            palette.n2 = p.n2;\n        }\n        return palette;\n    }\n    constructor(argb, isContent) {\n        const hct = _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__.Hct.fromInt(argb);\n        const hue = hct.hue;\n        const chroma = hct.chroma;\n        if (isContent) {\n            this.a1 = _tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(hue, chroma);\n            this.a2 = _tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(hue, chroma / 3);\n            this.a3 = _tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(hue + 60, chroma / 2);\n            this.n1 = _tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(hue, Math.min(chroma / 12, 4));\n            this.n2 = _tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(hue, Math.min(chroma / 6, 8));\n        }\n        else {\n            this.a1 = _tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(hue, Math.max(48, chroma));\n            this.a2 = _tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(hue, 16);\n            this.a3 = _tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(hue + 60, 24);\n            this.n1 = _tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(hue, 4);\n            this.n2 = _tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(hue, 8);\n        }\n        this.error = _tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(25, 84);\n    }\n}\n//# sourceMappingURL=core_palette.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/palettes/core_palette.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/palettes/tonal_palette.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/palettes/tonal_palette.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TonalPalette: () => (/* binding */ TonalPalette)\n/* harmony export */ });\n/* harmony import */ var _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hct/hct.js */ \"./node_modules/@material/material-color-utilities/hct/hct.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n *  A convenience class for retrieving colors that are constant in hue and\n *  chroma, but vary in tone.\n */\nclass TonalPalette {\n    /**\n     * @param argb ARGB representation of a color\n     * @return Tones matching that color's hue and chroma.\n     */\n    static fromInt(argb) {\n        const hct = _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__.Hct.fromInt(argb);\n        return TonalPalette.fromHct(hct);\n    }\n    /**\n     * @param hct Hct\n     * @return Tones matching that color's hue and chroma.\n     */\n    static fromHct(hct) {\n        return new TonalPalette(hct.hue, hct.chroma, hct);\n    }\n    /**\n     * @param hue HCT hue\n     * @param chroma HCT chroma\n     * @return Tones matching hue and chroma.\n     */\n    static fromHueAndChroma(hue, chroma) {\n        return new TonalPalette(hue, chroma, TonalPalette.createKeyColor(hue, chroma));\n    }\n    constructor(hue, chroma, keyColor) {\n        this.hue = hue;\n        this.chroma = chroma;\n        this.keyColor = keyColor;\n        this.cache = new Map();\n    }\n    static createKeyColor(hue, chroma) {\n        const startTone = 50.0;\n        let smallestDeltaHct = _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__.Hct.from(hue, chroma, startTone);\n        let smallestDelta = Math.abs(smallestDeltaHct.chroma - chroma);\n        // Starting from T50, check T+/-delta to see if they match the requested\n        // chroma.\n        //\n        // Starts from T50 because T50 has the most chroma available, on\n        // average. Thus it is most likely to have a direct answer and minimize\n        // iteration.\n        for (let delta = 1.0; delta < 50.0; delta += 1.0) {\n            // Termination condition rounding instead of minimizing delta to avoid\n            // case where requested chroma is 16.51, and the closest chroma is 16.49.\n            // Error is minimized, but when rounded and displayed, requested chroma\n            // is 17, key color's chroma is 16.\n            if (Math.round(chroma) === Math.round(smallestDeltaHct.chroma)) {\n                return smallestDeltaHct;\n            }\n            const hctAdd = _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__.Hct.from(hue, chroma, startTone + delta);\n            const hctAddDelta = Math.abs(hctAdd.chroma - chroma);\n            if (hctAddDelta < smallestDelta) {\n                smallestDelta = hctAddDelta;\n                smallestDeltaHct = hctAdd;\n            }\n            const hctSubtract = _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__.Hct.from(hue, chroma, startTone - delta);\n            const hctSubtractDelta = Math.abs(hctSubtract.chroma - chroma);\n            if (hctSubtractDelta < smallestDelta) {\n                smallestDelta = hctSubtractDelta;\n                smallestDeltaHct = hctSubtract;\n            }\n        }\n        return smallestDeltaHct;\n    }\n    /**\n     * @param tone HCT tone, measured from 0 to 100.\n     * @return ARGB representation of a color with that tone.\n     */\n    tone(tone) {\n        let argb = this.cache.get(tone);\n        if (argb === undefined) {\n            argb = _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__.Hct.from(this.hue, this.chroma, tone).toInt();\n            this.cache.set(tone, argb);\n        }\n        return argb;\n    }\n    /**\n     * @param tone HCT tone.\n     * @return HCT representation of a color with that tone.\n     */\n    getHct(tone) {\n        return _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__.Hct.fromInt(this.tone(tone));\n    }\n}\n//# sourceMappingURL=tonal_palette.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/palettes/tonal_palette.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/quantize/lab_point_provider.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/quantize/lab_point_provider.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LabPointProvider: () => (/* binding */ LabPointProvider)\n/* harmony export */ });\n/* harmony import */ var _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides conversions needed for K-Means quantization. Converting input to\n * points, and converting the final state of the K-Means algorithm to colors.\n */\nclass LabPointProvider {\n    /**\n     * Convert a color represented in ARGB to a 3-element array of L*a*b*\n     * coordinates of the color.\n     */\n    fromInt(argb) {\n        return _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.labFromArgb(argb);\n    }\n    /**\n     * Convert a 3-element array to a color represented in ARGB.\n     */\n    toInt(point) {\n        return _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.argbFromLab(point[0], point[1], point[2]);\n    }\n    /**\n     * Standard CIE 1976 delta E formula also takes the square root, unneeded\n     * here. This method is used by quantization algorithms to compare distance,\n     * and the relative ordering is the same, with or without a square root.\n     *\n     * This relatively minor optimization is helpful because this method is\n     * called at least once for each pixel in an image.\n     */\n    distance(from, to) {\n        const dL = from[0] - to[0];\n        const dA = from[1] - to[1];\n        const dB = from[2] - to[2];\n        return dL * dL + dA * dA + dB * dB;\n    }\n}\n//# sourceMappingURL=lab_point_provider.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/quantize/lab_point_provider.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/quantize/quantizer_celebi.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/quantize/quantizer_celebi.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QuantizerCelebi: () => (/* binding */ QuantizerCelebi)\n/* harmony export */ });\n/* harmony import */ var _quantizer_wsmeans_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quantizer_wsmeans.js */ \"./node_modules/@material/material-color-utilities/quantize/quantizer_wsmeans.js\");\n/* harmony import */ var _quantizer_wu_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quantizer_wu.js */ \"./node_modules/@material/material-color-utilities/quantize/quantizer_wu.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * An image quantizer that improves on the quality of a standard K-Means\n * algorithm by setting the K-Means initial state to the output of a Wu\n * quantizer, instead of random centroids. Improves on speed by several\n * optimizations, as implemented in Wsmeans, or Weighted Square Means, K-Means\n * with those optimizations.\n *\n * This algorithm was designed by M. Emre Celebi, and was found in their 2011\n * paper, Improving the Performance of K-Means for Color Quantization.\n * https://arxiv.org/abs/1101.0395\n */\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable-next-line:class-as-namespace\nclass QuantizerCelebi {\n    /**\n     * @param pixels Colors in ARGB format.\n     * @param maxColors The number of colors to divide the image into. A lower\n     *     number of colors may be returned.\n     * @return Map with keys of colors in ARGB format, and values of number of\n     *     pixels in the original image that correspond to the color in the\n     *     quantized image.\n     */\n    static quantize(pixels, maxColors) {\n        const wu = new _quantizer_wu_js__WEBPACK_IMPORTED_MODULE_1__.QuantizerWu();\n        const wuResult = wu.quantize(pixels, maxColors);\n        return _quantizer_wsmeans_js__WEBPACK_IMPORTED_MODULE_0__.QuantizerWsmeans.quantize(pixels, wuResult, maxColors);\n    }\n}\n//# sourceMappingURL=quantizer_celebi.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/quantize/quantizer_celebi.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/quantize/quantizer_map.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/quantize/quantizer_map.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QuantizerMap: () => (/* binding */ QuantizerMap)\n/* harmony export */ });\n/* harmony import */ var _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Quantizes an image into a map, with keys of ARGB colors, and values of the\n * number of times that color appears in the image.\n */\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable-next-line:class-as-namespace\nclass QuantizerMap {\n    /**\n     * @param pixels Colors in ARGB format.\n     * @return A Map with keys of ARGB colors, and values of the number of times\n     *     the color appears in the image.\n     */\n    static quantize(pixels) {\n        const countByColor = new Map();\n        for (let i = 0; i < pixels.length; i++) {\n            const pixel = pixels[i];\n            const alpha = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.alphaFromArgb(pixel);\n            if (alpha < 255) {\n                continue;\n            }\n            countByColor.set(pixel, (countByColor.get(pixel) ?? 0) + 1);\n        }\n        return countByColor;\n    }\n}\n//# sourceMappingURL=quantizer_map.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/quantize/quantizer_map.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/quantize/quantizer_wsmeans.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/quantize/quantizer_wsmeans.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QuantizerWsmeans: () => (/* binding */ QuantizerWsmeans)\n/* harmony export */ });\n/* harmony import */ var _lab_point_provider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lab_point_provider.js */ \"./node_modules/@material/material-color-utilities/quantize/lab_point_provider.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst MAX_ITERATIONS = 10;\nconst MIN_MOVEMENT_DISTANCE = 3.0;\n/**\n * An image quantizer that improves on the speed of a standard K-Means algorithm\n * by implementing several optimizations, including deduping identical pixels\n * and a triangle inequality rule that reduces the number of comparisons needed\n * to identify which cluster a point should be moved to.\n *\n * Wsmeans stands for Weighted Square Means.\n *\n * This algorithm was designed by M. Emre Celebi, and was found in their 2011\n * paper, Improving the Performance of K-Means for Color Quantization.\n * https://arxiv.org/abs/1101.0395\n */\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable-next-line:class-as-namespace\nclass QuantizerWsmeans {\n    /**\n     * @param inputPixels Colors in ARGB format.\n     * @param startingClusters Defines the initial state of the quantizer. Passing\n     *     an empty array is fine, the implementation will create its own initial\n     *     state that leads to reproducible results for the same inputs.\n     *     Passing an array that is the result of Wu quantization leads to higher\n     *     quality results.\n     * @param maxColors The number of colors to divide the image into. A lower\n     *     number of colors may be returned.\n     * @return Colors in ARGB format.\n     */\n    static quantize(inputPixels, startingClusters, maxColors) {\n        const pixelToCount = new Map();\n        const points = new Array();\n        const pixels = new Array();\n        const pointProvider = new _lab_point_provider_js__WEBPACK_IMPORTED_MODULE_0__.LabPointProvider();\n        let pointCount = 0;\n        for (let i = 0; i < inputPixels.length; i++) {\n            const inputPixel = inputPixels[i];\n            const pixelCount = pixelToCount.get(inputPixel);\n            if (pixelCount === undefined) {\n                pointCount++;\n                points.push(pointProvider.fromInt(inputPixel));\n                pixels.push(inputPixel);\n                pixelToCount.set(inputPixel, 1);\n            }\n            else {\n                pixelToCount.set(inputPixel, pixelCount + 1);\n            }\n        }\n        const counts = new Array();\n        for (let i = 0; i < pointCount; i++) {\n            const pixel = pixels[i];\n            const count = pixelToCount.get(pixel);\n            if (count !== undefined) {\n                counts[i] = count;\n            }\n        }\n        let clusterCount = Math.min(maxColors, pointCount);\n        if (startingClusters.length > 0) {\n            clusterCount = Math.min(clusterCount, startingClusters.length);\n        }\n        const clusters = new Array();\n        for (let i = 0; i < startingClusters.length; i++) {\n            clusters.push(pointProvider.fromInt(startingClusters[i]));\n        }\n        const additionalClustersNeeded = clusterCount - clusters.length;\n        if (startingClusters.length === 0 && additionalClustersNeeded > 0) {\n            for (let i = 0; i < additionalClustersNeeded; i++) {\n                const l = Math.random() * 100.0;\n                const a = Math.random() * (100.0 - (-100.0) + 1) + -100;\n                const b = Math.random() * (100.0 - (-100.0) + 1) + -100;\n                clusters.push(new Array(l, a, b));\n            }\n        }\n        const clusterIndices = new Array();\n        for (let i = 0; i < pointCount; i++) {\n            clusterIndices.push(Math.floor(Math.random() * clusterCount));\n        }\n        const indexMatrix = new Array();\n        for (let i = 0; i < clusterCount; i++) {\n            indexMatrix.push(new Array());\n            for (let j = 0; j < clusterCount; j++) {\n                indexMatrix[i].push(0);\n            }\n        }\n        const distanceToIndexMatrix = new Array();\n        for (let i = 0; i < clusterCount; i++) {\n            distanceToIndexMatrix.push(new Array());\n            for (let j = 0; j < clusterCount; j++) {\n                distanceToIndexMatrix[i].push(new DistanceAndIndex());\n            }\n        }\n        const pixelCountSums = new Array();\n        for (let i = 0; i < clusterCount; i++) {\n            pixelCountSums.push(0);\n        }\n        for (let iteration = 0; iteration < MAX_ITERATIONS; iteration++) {\n            for (let i = 0; i < clusterCount; i++) {\n                for (let j = i + 1; j < clusterCount; j++) {\n                    const distance = pointProvider.distance(clusters[i], clusters[j]);\n                    distanceToIndexMatrix[j][i].distance = distance;\n                    distanceToIndexMatrix[j][i].index = i;\n                    distanceToIndexMatrix[i][j].distance = distance;\n                    distanceToIndexMatrix[i][j].index = j;\n                }\n                distanceToIndexMatrix[i].sort();\n                for (let j = 0; j < clusterCount; j++) {\n                    indexMatrix[i][j] = distanceToIndexMatrix[i][j].index;\n                }\n            }\n            let pointsMoved = 0;\n            for (let i = 0; i < pointCount; i++) {\n                const point = points[i];\n                const previousClusterIndex = clusterIndices[i];\n                const previousCluster = clusters[previousClusterIndex];\n                const previousDistance = pointProvider.distance(point, previousCluster);\n                let minimumDistance = previousDistance;\n                let newClusterIndex = -1;\n                for (let j = 0; j < clusterCount; j++) {\n                    if (distanceToIndexMatrix[previousClusterIndex][j].distance >=\n                        4 * previousDistance) {\n                        continue;\n                    }\n                    const distance = pointProvider.distance(point, clusters[j]);\n                    if (distance < minimumDistance) {\n                        minimumDistance = distance;\n                        newClusterIndex = j;\n                    }\n                }\n                if (newClusterIndex !== -1) {\n                    const distanceChange = Math.abs((Math.sqrt(minimumDistance) - Math.sqrt(previousDistance)));\n                    if (distanceChange > MIN_MOVEMENT_DISTANCE) {\n                        pointsMoved++;\n                        clusterIndices[i] = newClusterIndex;\n                    }\n                }\n            }\n            if (pointsMoved === 0 && iteration !== 0) {\n                break;\n            }\n            const componentASums = new Array(clusterCount).fill(0);\n            const componentBSums = new Array(clusterCount).fill(0);\n            const componentCSums = new Array(clusterCount).fill(0);\n            for (let i = 0; i < clusterCount; i++) {\n                pixelCountSums[i] = 0;\n            }\n            for (let i = 0; i < pointCount; i++) {\n                const clusterIndex = clusterIndices[i];\n                const point = points[i];\n                const count = counts[i];\n                pixelCountSums[clusterIndex] += count;\n                componentASums[clusterIndex] += (point[0] * count);\n                componentBSums[clusterIndex] += (point[1] * count);\n                componentCSums[clusterIndex] += (point[2] * count);\n            }\n            for (let i = 0; i < clusterCount; i++) {\n                const count = pixelCountSums[i];\n                if (count === 0) {\n                    clusters[i] = [0.0, 0.0, 0.0];\n                    continue;\n                }\n                const a = componentASums[i] / count;\n                const b = componentBSums[i] / count;\n                const c = componentCSums[i] / count;\n                clusters[i] = [a, b, c];\n            }\n        }\n        const argbToPopulation = new Map();\n        for (let i = 0; i < clusterCount; i++) {\n            const count = pixelCountSums[i];\n            if (count === 0) {\n                continue;\n            }\n            const possibleNewCluster = pointProvider.toInt(clusters[i]);\n            if (argbToPopulation.has(possibleNewCluster)) {\n                continue;\n            }\n            argbToPopulation.set(possibleNewCluster, count);\n        }\n        return argbToPopulation;\n    }\n}\n/**\n *  A wrapper for maintaining a table of distances between K-Means clusters.\n */\nclass DistanceAndIndex {\n    constructor() {\n        this.distance = -1;\n        this.index = -1;\n    }\n}\n//# sourceMappingURL=quantizer_wsmeans.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/quantize/quantizer_wsmeans.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/quantize/quantizer_wu.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/quantize/quantizer_wu.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QuantizerWu: () => (/* binding */ QuantizerWu)\n/* harmony export */ });\n/* harmony import */ var _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/* harmony import */ var _quantizer_map_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quantizer_map.js */ \"./node_modules/@material/material-color-utilities/quantize/quantizer_map.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst INDEX_BITS = 5;\nconst SIDE_LENGTH = 33; // ((1 << INDEX_INDEX_BITS) + 1)\nconst TOTAL_SIZE = 35937; // SIDE_LENGTH * SIDE_LENGTH * SIDE_LENGTH\nconst directions = {\n    RED: 'red',\n    GREEN: 'green',\n    BLUE: 'blue',\n};\n/**\n * An image quantizer that divides the image's pixels into clusters by\n * recursively cutting an RGB cube, based on the weight of pixels in each area\n * of the cube.\n *\n * The algorithm was described by Xiaolin Wu in Graphic Gems II, published in\n * 1991.\n */\nclass QuantizerWu {\n    constructor(weights = [], momentsR = [], momentsG = [], momentsB = [], moments = [], cubes = []) {\n        this.weights = weights;\n        this.momentsR = momentsR;\n        this.momentsG = momentsG;\n        this.momentsB = momentsB;\n        this.moments = moments;\n        this.cubes = cubes;\n    }\n    /**\n     * @param pixels Colors in ARGB format.\n     * @param maxColors The number of colors to divide the image into. A lower\n     *     number of colors may be returned.\n     * @return Colors in ARGB format.\n     */\n    quantize(pixels, maxColors) {\n        this.constructHistogram(pixels);\n        this.computeMoments();\n        const createBoxesResult = this.createBoxes(maxColors);\n        const results = this.createResult(createBoxesResult.resultCount);\n        return results;\n    }\n    constructHistogram(pixels) {\n        this.weights = Array.from({ length: TOTAL_SIZE }).fill(0);\n        this.momentsR = Array.from({ length: TOTAL_SIZE }).fill(0);\n        this.momentsG = Array.from({ length: TOTAL_SIZE }).fill(0);\n        this.momentsB = Array.from({ length: TOTAL_SIZE }).fill(0);\n        this.moments = Array.from({ length: TOTAL_SIZE }).fill(0);\n        const countByColor = _quantizer_map_js__WEBPACK_IMPORTED_MODULE_1__.QuantizerMap.quantize(pixels);\n        for (const [pixel, count] of countByColor.entries()) {\n            const red = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.redFromArgb(pixel);\n            const green = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.greenFromArgb(pixel);\n            const blue = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_0__.blueFromArgb(pixel);\n            const bitsToRemove = 8 - INDEX_BITS;\n            const iR = (red >> bitsToRemove) + 1;\n            const iG = (green >> bitsToRemove) + 1;\n            const iB = (blue >> bitsToRemove) + 1;\n            const index = this.getIndex(iR, iG, iB);\n            this.weights[index] = (this.weights[index] ?? 0) + count;\n            this.momentsR[index] += count * red;\n            this.momentsG[index] += count * green;\n            this.momentsB[index] += count * blue;\n            this.moments[index] += count * (red * red + green * green + blue * blue);\n        }\n    }\n    computeMoments() {\n        for (let r = 1; r < SIDE_LENGTH; r++) {\n            const area = Array.from({ length: SIDE_LENGTH }).fill(0);\n            const areaR = Array.from({ length: SIDE_LENGTH }).fill(0);\n            const areaG = Array.from({ length: SIDE_LENGTH }).fill(0);\n            const areaB = Array.from({ length: SIDE_LENGTH }).fill(0);\n            const area2 = Array.from({ length: SIDE_LENGTH }).fill(0.0);\n            for (let g = 1; g < SIDE_LENGTH; g++) {\n                let line = 0;\n                let lineR = 0;\n                let lineG = 0;\n                let lineB = 0;\n                let line2 = 0.0;\n                for (let b = 1; b < SIDE_LENGTH; b++) {\n                    const index = this.getIndex(r, g, b);\n                    line += this.weights[index];\n                    lineR += this.momentsR[index];\n                    lineG += this.momentsG[index];\n                    lineB += this.momentsB[index];\n                    line2 += this.moments[index];\n                    area[b] += line;\n                    areaR[b] += lineR;\n                    areaG[b] += lineG;\n                    areaB[b] += lineB;\n                    area2[b] += line2;\n                    const previousIndex = this.getIndex(r - 1, g, b);\n                    this.weights[index] = this.weights[previousIndex] + area[b];\n                    this.momentsR[index] = this.momentsR[previousIndex] + areaR[b];\n                    this.momentsG[index] = this.momentsG[previousIndex] + areaG[b];\n                    this.momentsB[index] = this.momentsB[previousIndex] + areaB[b];\n                    this.moments[index] = this.moments[previousIndex] + area2[b];\n                }\n            }\n        }\n    }\n    createBoxes(maxColors) {\n        this.cubes =\n            Array.from({ length: maxColors }).fill(0).map(() => new Box());\n        const volumeVariance = Array.from({ length: maxColors }).fill(0.0);\n        this.cubes[0].r0 = 0;\n        this.cubes[0].g0 = 0;\n        this.cubes[0].b0 = 0;\n        this.cubes[0].r1 = SIDE_LENGTH - 1;\n        this.cubes[0].g1 = SIDE_LENGTH - 1;\n        this.cubes[0].b1 = SIDE_LENGTH - 1;\n        let generatedColorCount = maxColors;\n        let next = 0;\n        for (let i = 1; i < maxColors; i++) {\n            if (this.cut(this.cubes[next], this.cubes[i])) {\n                volumeVariance[next] =\n                    this.cubes[next].vol > 1 ? this.variance(this.cubes[next]) : 0.0;\n                volumeVariance[i] =\n                    this.cubes[i].vol > 1 ? this.variance(this.cubes[i]) : 0.0;\n            }\n            else {\n                volumeVariance[next] = 0.0;\n                i--;\n            }\n            next = 0;\n            let temp = volumeVariance[0];\n            for (let j = 1; j <= i; j++) {\n                if (volumeVariance[j] > temp) {\n                    temp = volumeVariance[j];\n                    next = j;\n                }\n            }\n            if (temp <= 0.0) {\n                generatedColorCount = i + 1;\n                break;\n            }\n        }\n        return new CreateBoxesResult(maxColors, generatedColorCount);\n    }\n    createResult(colorCount) {\n        const colors = [];\n        for (let i = 0; i < colorCount; ++i) {\n            const cube = this.cubes[i];\n            const weight = this.volume(cube, this.weights);\n            if (weight > 0) {\n                const r = Math.round(this.volume(cube, this.momentsR) / weight);\n                const g = Math.round(this.volume(cube, this.momentsG) / weight);\n                const b = Math.round(this.volume(cube, this.momentsB) / weight);\n                const color = (255 << 24) | ((r & 0x0ff) << 16) | ((g & 0x0ff) << 8) |\n                    (b & 0x0ff);\n                colors.push(color);\n            }\n        }\n        return colors;\n    }\n    variance(cube) {\n        const dr = this.volume(cube, this.momentsR);\n        const dg = this.volume(cube, this.momentsG);\n        const db = this.volume(cube, this.momentsB);\n        const xx = this.moments[this.getIndex(cube.r1, cube.g1, cube.b1)] -\n            this.moments[this.getIndex(cube.r1, cube.g1, cube.b0)] -\n            this.moments[this.getIndex(cube.r1, cube.g0, cube.b1)] +\n            this.moments[this.getIndex(cube.r1, cube.g0, cube.b0)] -\n            this.moments[this.getIndex(cube.r0, cube.g1, cube.b1)] +\n            this.moments[this.getIndex(cube.r0, cube.g1, cube.b0)] +\n            this.moments[this.getIndex(cube.r0, cube.g0, cube.b1)] -\n            this.moments[this.getIndex(cube.r0, cube.g0, cube.b0)];\n        const hypotenuse = dr * dr + dg * dg + db * db;\n        const volume = this.volume(cube, this.weights);\n        return xx - hypotenuse / volume;\n    }\n    cut(one, two) {\n        const wholeR = this.volume(one, this.momentsR);\n        const wholeG = this.volume(one, this.momentsG);\n        const wholeB = this.volume(one, this.momentsB);\n        const wholeW = this.volume(one, this.weights);\n        const maxRResult = this.maximize(one, directions.RED, one.r0 + 1, one.r1, wholeR, wholeG, wholeB, wholeW);\n        const maxGResult = this.maximize(one, directions.GREEN, one.g0 + 1, one.g1, wholeR, wholeG, wholeB, wholeW);\n        const maxBResult = this.maximize(one, directions.BLUE, one.b0 + 1, one.b1, wholeR, wholeG, wholeB, wholeW);\n        let direction;\n        const maxR = maxRResult.maximum;\n        const maxG = maxGResult.maximum;\n        const maxB = maxBResult.maximum;\n        if (maxR >= maxG && maxR >= maxB) {\n            if (maxRResult.cutLocation < 0) {\n                return false;\n            }\n            direction = directions.RED;\n        }\n        else if (maxG >= maxR && maxG >= maxB) {\n            direction = directions.GREEN;\n        }\n        else {\n            direction = directions.BLUE;\n        }\n        two.r1 = one.r1;\n        two.g1 = one.g1;\n        two.b1 = one.b1;\n        switch (direction) {\n            case directions.RED:\n                one.r1 = maxRResult.cutLocation;\n                two.r0 = one.r1;\n                two.g0 = one.g0;\n                two.b0 = one.b0;\n                break;\n            case directions.GREEN:\n                one.g1 = maxGResult.cutLocation;\n                two.r0 = one.r0;\n                two.g0 = one.g1;\n                two.b0 = one.b0;\n                break;\n            case directions.BLUE:\n                one.b1 = maxBResult.cutLocation;\n                two.r0 = one.r0;\n                two.g0 = one.g0;\n                two.b0 = one.b1;\n                break;\n            default:\n                throw new Error('unexpected direction ' + direction);\n        }\n        one.vol = (one.r1 - one.r0) * (one.g1 - one.g0) * (one.b1 - one.b0);\n        two.vol = (two.r1 - two.r0) * (two.g1 - two.g0) * (two.b1 - two.b0);\n        return true;\n    }\n    maximize(cube, direction, first, last, wholeR, wholeG, wholeB, wholeW) {\n        const bottomR = this.bottom(cube, direction, this.momentsR);\n        const bottomG = this.bottom(cube, direction, this.momentsG);\n        const bottomB = this.bottom(cube, direction, this.momentsB);\n        const bottomW = this.bottom(cube, direction, this.weights);\n        let max = 0.0;\n        let cut = -1;\n        let halfR = 0;\n        let halfG = 0;\n        let halfB = 0;\n        let halfW = 0;\n        for (let i = first; i < last; i++) {\n            halfR = bottomR + this.top(cube, direction, i, this.momentsR);\n            halfG = bottomG + this.top(cube, direction, i, this.momentsG);\n            halfB = bottomB + this.top(cube, direction, i, this.momentsB);\n            halfW = bottomW + this.top(cube, direction, i, this.weights);\n            if (halfW === 0) {\n                continue;\n            }\n            let tempNumerator = (halfR * halfR + halfG * halfG + halfB * halfB) * 1.0;\n            let tempDenominator = halfW * 1.0;\n            let temp = tempNumerator / tempDenominator;\n            halfR = wholeR - halfR;\n            halfG = wholeG - halfG;\n            halfB = wholeB - halfB;\n            halfW = wholeW - halfW;\n            if (halfW === 0) {\n                continue;\n            }\n            tempNumerator = (halfR * halfR + halfG * halfG + halfB * halfB) * 1.0;\n            tempDenominator = halfW * 1.0;\n            temp += tempNumerator / tempDenominator;\n            if (temp > max) {\n                max = temp;\n                cut = i;\n            }\n        }\n        return new MaximizeResult(cut, max);\n    }\n    volume(cube, moment) {\n        return (moment[this.getIndex(cube.r1, cube.g1, cube.b1)] -\n            moment[this.getIndex(cube.r1, cube.g1, cube.b0)] -\n            moment[this.getIndex(cube.r1, cube.g0, cube.b1)] +\n            moment[this.getIndex(cube.r1, cube.g0, cube.b0)] -\n            moment[this.getIndex(cube.r0, cube.g1, cube.b1)] +\n            moment[this.getIndex(cube.r0, cube.g1, cube.b0)] +\n            moment[this.getIndex(cube.r0, cube.g0, cube.b1)] -\n            moment[this.getIndex(cube.r0, cube.g0, cube.b0)]);\n    }\n    bottom(cube, direction, moment) {\n        switch (direction) {\n            case directions.RED:\n                return (-moment[this.getIndex(cube.r0, cube.g1, cube.b1)] +\n                    moment[this.getIndex(cube.r0, cube.g1, cube.b0)] +\n                    moment[this.getIndex(cube.r0, cube.g0, cube.b1)] -\n                    moment[this.getIndex(cube.r0, cube.g0, cube.b0)]);\n            case directions.GREEN:\n                return (-moment[this.getIndex(cube.r1, cube.g0, cube.b1)] +\n                    moment[this.getIndex(cube.r1, cube.g0, cube.b0)] +\n                    moment[this.getIndex(cube.r0, cube.g0, cube.b1)] -\n                    moment[this.getIndex(cube.r0, cube.g0, cube.b0)]);\n            case directions.BLUE:\n                return (-moment[this.getIndex(cube.r1, cube.g1, cube.b0)] +\n                    moment[this.getIndex(cube.r1, cube.g0, cube.b0)] +\n                    moment[this.getIndex(cube.r0, cube.g1, cube.b0)] -\n                    moment[this.getIndex(cube.r0, cube.g0, cube.b0)]);\n            default:\n                throw new Error('unexpected direction $direction');\n        }\n    }\n    top(cube, direction, position, moment) {\n        switch (direction) {\n            case directions.RED:\n                return (moment[this.getIndex(position, cube.g1, cube.b1)] -\n                    moment[this.getIndex(position, cube.g1, cube.b0)] -\n                    moment[this.getIndex(position, cube.g0, cube.b1)] +\n                    moment[this.getIndex(position, cube.g0, cube.b0)]);\n            case directions.GREEN:\n                return (moment[this.getIndex(cube.r1, position, cube.b1)] -\n                    moment[this.getIndex(cube.r1, position, cube.b0)] -\n                    moment[this.getIndex(cube.r0, position, cube.b1)] +\n                    moment[this.getIndex(cube.r0, position, cube.b0)]);\n            case directions.BLUE:\n                return (moment[this.getIndex(cube.r1, cube.g1, position)] -\n                    moment[this.getIndex(cube.r1, cube.g0, position)] -\n                    moment[this.getIndex(cube.r0, cube.g1, position)] +\n                    moment[this.getIndex(cube.r0, cube.g0, position)]);\n            default:\n                throw new Error('unexpected direction $direction');\n        }\n    }\n    getIndex(r, g, b) {\n        return (r << (INDEX_BITS * 2)) + (r << (INDEX_BITS + 1)) + r +\n            (g << INDEX_BITS) + g + b;\n    }\n}\n/**\n * Keeps track of the state of each box created as the Wu  quantization\n * algorithm progresses through dividing the image's pixels as plotted in RGB.\n */\nclass Box {\n    constructor(r0 = 0, r1 = 0, g0 = 0, g1 = 0, b0 = 0, b1 = 0, vol = 0) {\n        this.r0 = r0;\n        this.r1 = r1;\n        this.g0 = g0;\n        this.g1 = g1;\n        this.b0 = b0;\n        this.b1 = b1;\n        this.vol = vol;\n    }\n}\n/**\n * Represents final result of Wu algorithm.\n */\nclass CreateBoxesResult {\n    /**\n     * @param requestedCount how many colors the caller asked to be returned from\n     *     quantization.\n     * @param resultCount the actual number of colors achieved from quantization.\n     *     May be lower than the requested count.\n     */\n    constructor(requestedCount, resultCount) {\n        this.requestedCount = requestedCount;\n        this.resultCount = resultCount;\n    }\n}\n/**\n * Represents the result of calculating where to cut an existing box in such\n * a way to maximize variance between the two new boxes created by a cut.\n */\nclass MaximizeResult {\n    constructor(cutLocation, maximum) {\n        this.cutLocation = cutLocation;\n        this.maximum = maximum;\n    }\n}\n//# sourceMappingURL=quantizer_wu.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/quantize/quantizer_wu.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DynamicScheme: () => (/* binding */ DynamicScheme)\n/* harmony export */ });\n/* harmony import */ var _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hct/hct.js */ \"./node_modules/@material/material-color-utilities/hct/hct.js\");\n/* harmony import */ var _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../palettes/tonal_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/tonal_palette.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * Constructed by a set of values representing the current UI state (such as\n * whether or not its dark theme, what the theme style is, etc.), and\n * provides a set of TonalPalettes that can create colors that fit in\n * with the theme style. Used by DynamicColor to resolve into a color.\n */\nclass DynamicScheme {\n    constructor(args) {\n        this.sourceColorArgb = args.sourceColorArgb;\n        this.variant = args.variant;\n        this.contrastLevel = args.contrastLevel;\n        this.isDark = args.isDark;\n        this.sourceColorHct = _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__.Hct.fromInt(args.sourceColorArgb);\n        this.primaryPalette = args.primaryPalette;\n        this.secondaryPalette = args.secondaryPalette;\n        this.tertiaryPalette = args.tertiaryPalette;\n        this.neutralPalette = args.neutralPalette;\n        this.neutralVariantPalette = args.neutralVariantPalette;\n        this.errorPalette = _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(25.0, 84.0);\n    }\n    /**\n     * Support design spec'ing Dynamic Color by schemes that specify hue\n     * rotations that should be applied at certain breakpoints.\n     * @param sourceColor the source color of the theme, in HCT.\n     * @param hues The \"breakpoints\", i.e. the hues at which a rotation should\n     * be apply.\n     * @param rotations The rotation that should be applied when source color's\n     * hue is >= the same index in hues array, and <= the hue at the next index\n     * in hues array.\n     */\n    static getRotatedHue(sourceColor, hues, rotations) {\n        const sourceHue = sourceColor.hue;\n        if (hues.length !== rotations.length) {\n            throw new Error(`mismatch between hue length ${hues.length} & rotations ${rotations.length}`);\n        }\n        if (rotations.length === 1) {\n            return _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeDegreesDouble(sourceColor.hue + rotations[0]);\n        }\n        const size = hues.length;\n        for (let i = 0; i <= size - 2; i++) {\n            const thisHue = hues[i];\n            const nextHue = hues[i + 1];\n            if (thisHue < sourceHue && sourceHue < nextHue) {\n                return _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeDegreesDouble(sourceHue + rotations[i]);\n            }\n        }\n        // If this statement executes, something is wrong, there should have been a\n        // rotation found using the arrays.\n        return sourceHue;\n    }\n}\n//# sourceMappingURL=dynamic_scheme.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/scheme.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/scheme.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scheme: () => (/* binding */ Scheme)\n/* harmony export */ });\n/* harmony import */ var _palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../palettes/core_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/core_palette.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\n\n/**\n * Represents a Material color scheme, a mapping of color roles to colors.\n */\nclass Scheme {\n    get primary() {\n        return this.props.primary;\n    }\n    get onPrimary() {\n        return this.props.onPrimary;\n    }\n    get primaryContainer() {\n        return this.props.primaryContainer;\n    }\n    get onPrimaryContainer() {\n        return this.props.onPrimaryContainer;\n    }\n    get secondary() {\n        return this.props.secondary;\n    }\n    get onSecondary() {\n        return this.props.onSecondary;\n    }\n    get secondaryContainer() {\n        return this.props.secondaryContainer;\n    }\n    get onSecondaryContainer() {\n        return this.props.onSecondaryContainer;\n    }\n    get tertiary() {\n        return this.props.tertiary;\n    }\n    get onTertiary() {\n        return this.props.onTertiary;\n    }\n    get tertiaryContainer() {\n        return this.props.tertiaryContainer;\n    }\n    get onTertiaryContainer() {\n        return this.props.onTertiaryContainer;\n    }\n    get error() {\n        return this.props.error;\n    }\n    get onError() {\n        return this.props.onError;\n    }\n    get errorContainer() {\n        return this.props.errorContainer;\n    }\n    get onErrorContainer() {\n        return this.props.onErrorContainer;\n    }\n    get background() {\n        return this.props.background;\n    }\n    get onBackground() {\n        return this.props.onBackground;\n    }\n    get surface() {\n        return this.props.surface;\n    }\n    get onSurface() {\n        return this.props.onSurface;\n    }\n    get surfaceVariant() {\n        return this.props.surfaceVariant;\n    }\n    get onSurfaceVariant() {\n        return this.props.onSurfaceVariant;\n    }\n    get outline() {\n        return this.props.outline;\n    }\n    get outlineVariant() {\n        return this.props.outlineVariant;\n    }\n    get shadow() {\n        return this.props.shadow;\n    }\n    get scrim() {\n        return this.props.scrim;\n    }\n    get inverseSurface() {\n        return this.props.inverseSurface;\n    }\n    get inverseOnSurface() {\n        return this.props.inverseOnSurface;\n    }\n    get inversePrimary() {\n        return this.props.inversePrimary;\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Light Material color scheme, based on the color's hue.\n     */\n    static light(argb) {\n        return Scheme.lightFromCorePalette(_palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_0__.CorePalette.of(argb));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Dark Material color scheme, based on the color's hue.\n     */\n    static dark(argb) {\n        return Scheme.darkFromCorePalette(_palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_0__.CorePalette.of(argb));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Light Material content color scheme, based on the color's hue.\n     */\n    static lightContent(argb) {\n        return Scheme.lightFromCorePalette(_palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_0__.CorePalette.contentOf(argb));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Dark Material content color scheme, based on the color's hue.\n     */\n    static darkContent(argb) {\n        return Scheme.darkFromCorePalette(_palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_0__.CorePalette.contentOf(argb));\n    }\n    /**\n     * Light scheme from core palette\n     */\n    static lightFromCorePalette(core) {\n        return new Scheme({\n            primary: core.a1.tone(40),\n            onPrimary: core.a1.tone(100),\n            primaryContainer: core.a1.tone(90),\n            onPrimaryContainer: core.a1.tone(10),\n            secondary: core.a2.tone(40),\n            onSecondary: core.a2.tone(100),\n            secondaryContainer: core.a2.tone(90),\n            onSecondaryContainer: core.a2.tone(10),\n            tertiary: core.a3.tone(40),\n            onTertiary: core.a3.tone(100),\n            tertiaryContainer: core.a3.tone(90),\n            onTertiaryContainer: core.a3.tone(10),\n            error: core.error.tone(40),\n            onError: core.error.tone(100),\n            errorContainer: core.error.tone(90),\n            onErrorContainer: core.error.tone(10),\n            background: core.n1.tone(99),\n            onBackground: core.n1.tone(10),\n            surface: core.n1.tone(99),\n            onSurface: core.n1.tone(10),\n            surfaceVariant: core.n2.tone(90),\n            onSurfaceVariant: core.n2.tone(30),\n            outline: core.n2.tone(50),\n            outlineVariant: core.n2.tone(80),\n            shadow: core.n1.tone(0),\n            scrim: core.n1.tone(0),\n            inverseSurface: core.n1.tone(20),\n            inverseOnSurface: core.n1.tone(95),\n            inversePrimary: core.a1.tone(80)\n        });\n    }\n    /**\n     * Dark scheme from core palette\n     */\n    static darkFromCorePalette(core) {\n        return new Scheme({\n            primary: core.a1.tone(80),\n            onPrimary: core.a1.tone(20),\n            primaryContainer: core.a1.tone(30),\n            onPrimaryContainer: core.a1.tone(90),\n            secondary: core.a2.tone(80),\n            onSecondary: core.a2.tone(20),\n            secondaryContainer: core.a2.tone(30),\n            onSecondaryContainer: core.a2.tone(90),\n            tertiary: core.a3.tone(80),\n            onTertiary: core.a3.tone(20),\n            tertiaryContainer: core.a3.tone(30),\n            onTertiaryContainer: core.a3.tone(90),\n            error: core.error.tone(80),\n            onError: core.error.tone(20),\n            errorContainer: core.error.tone(30),\n            onErrorContainer: core.error.tone(80),\n            background: core.n1.tone(10),\n            onBackground: core.n1.tone(90),\n            surface: core.n1.tone(10),\n            onSurface: core.n1.tone(90),\n            surfaceVariant: core.n2.tone(30),\n            onSurfaceVariant: core.n2.tone(80),\n            outline: core.n2.tone(60),\n            outlineVariant: core.n2.tone(30),\n            shadow: core.n1.tone(0),\n            scrim: core.n1.tone(0),\n            inverseSurface: core.n1.tone(90),\n            inverseOnSurface: core.n1.tone(20),\n            inversePrimary: core.a1.tone(40)\n        });\n    }\n    constructor(props) {\n        this.props = props;\n    }\n    toJSON() {\n        return {\n            ...this.props\n        };\n    }\n}\n//# sourceMappingURL=scheme.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/scheme.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/scheme_android.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/scheme_android.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemeAndroid: () => (/* binding */ SchemeAndroid)\n/* harmony export */ });\n/* harmony import */ var _palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../palettes/core_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/core_palette.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an Android 12 color scheme, a mapping of color roles to colors.\n */\nclass SchemeAndroid {\n    get colorAccentPrimary() {\n        return this.props.colorAccentPrimary;\n    }\n    get colorAccentPrimaryVariant() {\n        return this.props.colorAccentPrimaryVariant;\n    }\n    get colorAccentSecondary() {\n        return this.props.colorAccentSecondary;\n    }\n    get colorAccentSecondaryVariant() {\n        return this.props.colorAccentSecondaryVariant;\n    }\n    get colorAccentTertiary() {\n        return this.props.colorAccentTertiary;\n    }\n    get colorAccentTertiaryVariant() {\n        return this.props.colorAccentTertiaryVariant;\n    }\n    get textColorPrimary() {\n        return this.props.textColorPrimary;\n    }\n    get textColorSecondary() {\n        return this.props.textColorSecondary;\n    }\n    get textColorTertiary() {\n        return this.props.textColorTertiary;\n    }\n    get textColorPrimaryInverse() {\n        return this.props.textColorPrimaryInverse;\n    }\n    get textColorSecondaryInverse() {\n        return this.props.textColorSecondaryInverse;\n    }\n    get textColorTertiaryInverse() {\n        return this.props.textColorTertiaryInverse;\n    }\n    get colorBackground() {\n        return this.props.colorBackground;\n    }\n    get colorBackgroundFloating() {\n        return this.props.colorBackgroundFloating;\n    }\n    get colorSurface() {\n        return this.props.colorSurface;\n    }\n    get colorSurfaceVariant() {\n        return this.props.colorSurfaceVariant;\n    }\n    get colorSurfaceHighlight() {\n        return this.props.colorSurfaceHighlight;\n    }\n    get surfaceHeader() {\n        return this.props.surfaceHeader;\n    }\n    get underSurface() {\n        return this.props.underSurface;\n    }\n    get offState() {\n        return this.props.offState;\n    }\n    get accentSurface() {\n        return this.props.accentSurface;\n    }\n    get textPrimaryOnAccent() {\n        return this.props.textPrimaryOnAccent;\n    }\n    get textSecondaryOnAccent() {\n        return this.props.textSecondaryOnAccent;\n    }\n    get volumeBackground() {\n        return this.props.volumeBackground;\n    }\n    get scrim() {\n        return this.props.scrim;\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Light Material color scheme, based on the color's hue.\n     */\n    static light(argb) {\n        const core = _palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_0__.CorePalette.of(argb);\n        return SchemeAndroid.lightFromCorePalette(core);\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Dark Material color scheme, based on the color's hue.\n     */\n    static dark(argb) {\n        const core = _palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_0__.CorePalette.of(argb);\n        return SchemeAndroid.darkFromCorePalette(core);\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Light Android color scheme, based on the color's hue.\n     */\n    static lightContent(argb) {\n        const core = _palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_0__.CorePalette.contentOf(argb);\n        return SchemeAndroid.lightFromCorePalette(core);\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Dark Android color scheme, based on the color's hue.\n     */\n    static darkContent(argb) {\n        const core = _palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_0__.CorePalette.contentOf(argb);\n        return SchemeAndroid.darkFromCorePalette(core);\n    }\n    /**\n     * Light scheme from core palette\n     */\n    static lightFromCorePalette(core) {\n        return new SchemeAndroid({\n            colorAccentPrimary: core.a1.tone(90),\n            colorAccentPrimaryVariant: core.a1.tone(40),\n            colorAccentSecondary: core.a2.tone(90),\n            colorAccentSecondaryVariant: core.a2.tone(40),\n            colorAccentTertiary: core.a3.tone(90),\n            colorAccentTertiaryVariant: core.a3.tone(40),\n            textColorPrimary: core.n1.tone(10),\n            textColorSecondary: core.n2.tone(30),\n            textColorTertiary: core.n2.tone(50),\n            textColorPrimaryInverse: core.n1.tone(95),\n            textColorSecondaryInverse: core.n1.tone(80),\n            textColorTertiaryInverse: core.n1.tone(60),\n            colorBackground: core.n1.tone(95),\n            colorBackgroundFloating: core.n1.tone(98),\n            colorSurface: core.n1.tone(98),\n            colorSurfaceVariant: core.n1.tone(90),\n            colorSurfaceHighlight: core.n1.tone(100),\n            surfaceHeader: core.n1.tone(90),\n            underSurface: core.n1.tone(0),\n            offState: core.n1.tone(20),\n            accentSurface: core.a2.tone(95),\n            textPrimaryOnAccent: core.n1.tone(10),\n            textSecondaryOnAccent: core.n2.tone(30),\n            volumeBackground: core.n1.tone(25),\n            scrim: core.n1.tone(80),\n        });\n    }\n    /**\n     * Dark scheme from core palette\n     */\n    static darkFromCorePalette(core) {\n        return new SchemeAndroid({\n            colorAccentPrimary: core.a1.tone(90),\n            colorAccentPrimaryVariant: core.a1.tone(70),\n            colorAccentSecondary: core.a2.tone(90),\n            colorAccentSecondaryVariant: core.a2.tone(70),\n            colorAccentTertiary: core.a3.tone(90),\n            colorAccentTertiaryVariant: core.a3.tone(70),\n            textColorPrimary: core.n1.tone(95),\n            textColorSecondary: core.n2.tone(80),\n            textColorTertiary: core.n2.tone(60),\n            textColorPrimaryInverse: core.n1.tone(10),\n            textColorSecondaryInverse: core.n1.tone(30),\n            textColorTertiaryInverse: core.n1.tone(50),\n            colorBackground: core.n1.tone(10),\n            colorBackgroundFloating: core.n1.tone(10),\n            colorSurface: core.n1.tone(20),\n            colorSurfaceVariant: core.n1.tone(30),\n            colorSurfaceHighlight: core.n1.tone(35),\n            surfaceHeader: core.n1.tone(30),\n            underSurface: core.n1.tone(0),\n            offState: core.n1.tone(20),\n            accentSurface: core.a2.tone(95),\n            textPrimaryOnAccent: core.n1.tone(10),\n            textSecondaryOnAccent: core.n2.tone(30),\n            volumeBackground: core.n1.tone(25),\n            scrim: core.n1.tone(80),\n        });\n    }\n    constructor(props) {\n        this.props = props;\n    }\n    toJSON() {\n        return { ...this.props };\n    }\n}\n//# sourceMappingURL=scheme_android.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/scheme_android.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/scheme_content.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/scheme_content.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemeContent: () => (/* binding */ SchemeContent)\n/* harmony export */ });\n/* harmony import */ var _dislike_dislike_analyzer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dislike/dislike_analyzer.js */ \"./node_modules/@material/material-color-utilities/dislike/dislike_analyzer.js\");\n/* harmony import */ var _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../palettes/tonal_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/tonal_palette.js\");\n/* harmony import */ var _temperature_temperature_cache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../temperature/temperature_cache.js */ \"./node_modules/@material/material-color-utilities/temperature/temperature_cache.js\");\n/* harmony import */ var _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dynamic_scheme.js */ \"./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js\");\n/* harmony import */ var _variant_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./variant.js */ \"./node_modules/@material/material-color-utilities/scheme/variant.js\");\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/**\n * A scheme that places the source color in `Scheme.primaryContainer`.\n *\n * Primary Container is the source color, adjusted for color relativity.\n * It maintains constant appearance in light mode and dark mode.\n * This adds ~5 tone in light mode, and subtracts ~5 tone in dark mode.\n * Tertiary Container is the complement to the source color, using\n * `TemperatureCache`. It also maintains constant appearance.\n */\nclass SchemeContent extends _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_3__.DynamicScheme {\n    constructor(sourceColorHct, isDark, contrastLevel) {\n        super({\n            sourceColorArgb: sourceColorHct.toInt(),\n            variant: _variant_js__WEBPACK_IMPORTED_MODULE_4__.Variant.CONTENT,\n            contrastLevel,\n            isDark,\n            primaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, sourceColorHct.chroma),\n            secondaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, Math.max(sourceColorHct.chroma - 32.0, sourceColorHct.chroma * 0.5)),\n            tertiaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromInt(_dislike_dislike_analyzer_js__WEBPACK_IMPORTED_MODULE_0__.DislikeAnalyzer\n                .fixIfDisliked(new _temperature_temperature_cache_js__WEBPACK_IMPORTED_MODULE_2__.TemperatureCache(sourceColorHct).analogous(3, 6)[2])\n                .toInt()),\n            neutralPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, sourceColorHct.chroma / 8.0),\n            neutralVariantPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, sourceColorHct.chroma / 8.0 + 4.0),\n        });\n    }\n}\n//# sourceMappingURL=scheme_content.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/scheme_content.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/scheme_expressive.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/scheme_expressive.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemeExpressive: () => (/* binding */ SchemeExpressive)\n/* harmony export */ });\n/* harmony import */ var _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../palettes/tonal_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/tonal_palette.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/* harmony import */ var _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dynamic_scheme.js */ \"./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js\");\n/* harmony import */ var _variant_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./variant.js */ \"./node_modules/@material/material-color-utilities/scheme/variant.js\");\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n/**\n * A Dynamic Color theme that is intentionally detached from the source color.\n */\nclass SchemeExpressive extends _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_2__.DynamicScheme {\n    constructor(sourceColorHct, isDark, contrastLevel) {\n        super({\n            sourceColorArgb: sourceColorHct.toInt(),\n            variant: _variant_js__WEBPACK_IMPORTED_MODULE_3__.Variant.EXPRESSIVE,\n            contrastLevel,\n            isDark,\n            primaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeDegreesDouble(sourceColorHct.hue + 240.0), 40.0),\n            secondaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(_dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_2__.DynamicScheme.getRotatedHue(sourceColorHct, SchemeExpressive.hues, SchemeExpressive.secondaryRotations), 24.0),\n            tertiaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(_dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_2__.DynamicScheme.getRotatedHue(sourceColorHct, SchemeExpressive.hues, SchemeExpressive.tertiaryRotations), 32.0),\n            neutralPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue + 15, 8.0),\n            neutralVariantPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue + 15, 12.0),\n        });\n    }\n}\n/**\n * Hues (in degrees) used at breakpoints such that designers can specify a\n * hue rotation that occurs at a given break point.\n */\nSchemeExpressive.hues = [\n    0.0,\n    21.0,\n    51.0,\n    121.0,\n    151.0,\n    191.0,\n    271.0,\n    321.0,\n    360.0,\n];\n/**\n * Hue rotations (in degrees) of the Secondary [TonalPalette],\n * corresponding to the breakpoints in [hues].\n */\nSchemeExpressive.secondaryRotations = [\n    45.0,\n    95.0,\n    45.0,\n    20.0,\n    45.0,\n    90.0,\n    45.0,\n    45.0,\n    45.0,\n];\n/**\n * Hue rotations (in degrees) of the Tertiary [TonalPalette],\n * corresponding to the breakpoints in [hues].\n */\nSchemeExpressive.tertiaryRotations = [\n    120.0,\n    120.0,\n    20.0,\n    45.0,\n    20.0,\n    15.0,\n    20.0,\n    120.0,\n    120.0,\n];\n//# sourceMappingURL=scheme_expressive.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/scheme_expressive.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/scheme_fidelity.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/scheme_fidelity.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemeFidelity: () => (/* binding */ SchemeFidelity)\n/* harmony export */ });\n/* harmony import */ var _dislike_dislike_analyzer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dislike/dislike_analyzer.js */ \"./node_modules/@material/material-color-utilities/dislike/dislike_analyzer.js\");\n/* harmony import */ var _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../palettes/tonal_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/tonal_palette.js\");\n/* harmony import */ var _temperature_temperature_cache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../temperature/temperature_cache.js */ \"./node_modules/@material/material-color-utilities/temperature/temperature_cache.js\");\n/* harmony import */ var _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dynamic_scheme.js */ \"./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js\");\n/* harmony import */ var _variant_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./variant.js */ \"./node_modules/@material/material-color-utilities/scheme/variant.js\");\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/**\n * A scheme that places the source color in `Scheme.primaryContainer`.\n *\n * Primary Container is the source color, adjusted for color relativity.\n * It maintains constant appearance in light mode and dark mode.\n * This adds ~5 tone in light mode, and subtracts ~5 tone in dark mode.\n * Tertiary Container is the complement to the source color, using\n * `TemperatureCache`. It also maintains constant appearance.\n */\nclass SchemeFidelity extends _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_3__.DynamicScheme {\n    constructor(sourceColorHct, isDark, contrastLevel) {\n        super({\n            sourceColorArgb: sourceColorHct.toInt(),\n            variant: _variant_js__WEBPACK_IMPORTED_MODULE_4__.Variant.FIDELITY,\n            contrastLevel,\n            isDark,\n            primaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, sourceColorHct.chroma),\n            secondaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, Math.max(sourceColorHct.chroma - 32.0, sourceColorHct.chroma * 0.5)),\n            tertiaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromInt(_dislike_dislike_analyzer_js__WEBPACK_IMPORTED_MODULE_0__.DislikeAnalyzer\n                .fixIfDisliked(new _temperature_temperature_cache_js__WEBPACK_IMPORTED_MODULE_2__.TemperatureCache(sourceColorHct).complement)\n                .toInt()),\n            neutralPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, sourceColorHct.chroma / 8.0),\n            neutralVariantPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_1__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, sourceColorHct.chroma / 8.0 + 4.0),\n        });\n    }\n}\n//# sourceMappingURL=scheme_fidelity.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/scheme_fidelity.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/scheme_fruit_salad.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/scheme_fruit_salad.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemeFruitSalad: () => (/* binding */ SchemeFruitSalad)\n/* harmony export */ });\n/* harmony import */ var _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../palettes/tonal_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/tonal_palette.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/* harmony import */ var _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dynamic_scheme.js */ \"./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js\");\n/* harmony import */ var _variant_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./variant.js */ \"./node_modules/@material/material-color-utilities/scheme/variant.js\");\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n/**\n * A playful theme - the source color's hue does not appear in the theme.\n */\nclass SchemeFruitSalad extends _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_2__.DynamicScheme {\n    constructor(sourceColorHct, isDark, contrastLevel) {\n        super({\n            sourceColorArgb: sourceColorHct.toInt(),\n            variant: _variant_js__WEBPACK_IMPORTED_MODULE_3__.Variant.FRUIT_SALAD,\n            contrastLevel,\n            isDark,\n            primaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeDegreesDouble(sourceColorHct.hue - 50.0), 48.0),\n            secondaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeDegreesDouble(sourceColorHct.hue - 50.0), 36.0),\n            tertiaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 36.0),\n            neutralPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 10.0),\n            neutralVariantPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 16.0),\n        });\n    }\n}\n//# sourceMappingURL=scheme_fruit_salad.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/scheme_fruit_salad.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/scheme_monochrome.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/scheme_monochrome.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemeMonochrome: () => (/* binding */ SchemeMonochrome)\n/* harmony export */ });\n/* harmony import */ var _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../palettes/tonal_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/tonal_palette.js\");\n/* harmony import */ var _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dynamic_scheme.js */ \"./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js\");\n/* harmony import */ var _variant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./variant.js */ \"./node_modules/@material/material-color-utilities/scheme/variant.js\");\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/** A Dynamic Color theme that is grayscale. */\nclass SchemeMonochrome extends _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_1__.DynamicScheme {\n    constructor(sourceColorHct, isDark, contrastLevel) {\n        super({\n            sourceColorArgb: sourceColorHct.toInt(),\n            variant: _variant_js__WEBPACK_IMPORTED_MODULE_2__.Variant.MONOCHROME,\n            contrastLevel,\n            isDark,\n            primaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 0.0),\n            secondaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 0.0),\n            tertiaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 0.0),\n            neutralPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 0.0),\n            neutralVariantPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 0.0),\n        });\n    }\n}\n//# sourceMappingURL=scheme_monochrome.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/scheme_monochrome.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/scheme_neutral.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/scheme_neutral.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemeNeutral: () => (/* binding */ SchemeNeutral)\n/* harmony export */ });\n/* harmony import */ var _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../palettes/tonal_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/tonal_palette.js\");\n/* harmony import */ var _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dynamic_scheme.js */ \"./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js\");\n/* harmony import */ var _variant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./variant.js */ \"./node_modules/@material/material-color-utilities/scheme/variant.js\");\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/** A Dynamic Color theme that is near grayscale. */\nclass SchemeNeutral extends _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_1__.DynamicScheme {\n    constructor(sourceColorHct, isDark, contrastLevel) {\n        super({\n            sourceColorArgb: sourceColorHct.toInt(),\n            variant: _variant_js__WEBPACK_IMPORTED_MODULE_2__.Variant.NEUTRAL,\n            contrastLevel,\n            isDark,\n            primaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 12.0),\n            secondaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 8.0),\n            tertiaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 16.0),\n            neutralPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 2.0),\n            neutralVariantPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 2.0),\n        });\n    }\n}\n//# sourceMappingURL=scheme_neutral.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/scheme_neutral.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/scheme_rainbow.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/scheme_rainbow.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemeRainbow: () => (/* binding */ SchemeRainbow)\n/* harmony export */ });\n/* harmony import */ var _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../palettes/tonal_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/tonal_palette.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/* harmony import */ var _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dynamic_scheme.js */ \"./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js\");\n/* harmony import */ var _variant_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./variant.js */ \"./node_modules/@material/material-color-utilities/scheme/variant.js\");\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n/**\n * A playful theme - the source color's hue does not appear in the theme.\n */\nclass SchemeRainbow extends _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_2__.DynamicScheme {\n    constructor(sourceColorHct, isDark, contrastLevel) {\n        super({\n            sourceColorArgb: sourceColorHct.toInt(),\n            variant: _variant_js__WEBPACK_IMPORTED_MODULE_3__.Variant.RAINBOW,\n            contrastLevel,\n            isDark,\n            primaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 48.0),\n            secondaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 16.0),\n            tertiaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeDegreesDouble(sourceColorHct.hue + 60.0), 24.0),\n            neutralPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 0.0),\n            neutralVariantPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 0.0),\n        });\n    }\n}\n//# sourceMappingURL=scheme_rainbow.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/scheme_rainbow.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/scheme_tonal_spot.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/scheme_tonal_spot.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemeTonalSpot: () => (/* binding */ SchemeTonalSpot)\n/* harmony export */ });\n/* harmony import */ var _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../palettes/tonal_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/tonal_palette.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/* harmony import */ var _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dynamic_scheme.js */ \"./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js\");\n/* harmony import */ var _variant_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./variant.js */ \"./node_modules/@material/material-color-utilities/scheme/variant.js\");\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n/**\n * A Dynamic Color theme with low to medium colorfulness and a Tertiary\n * TonalPalette with a hue related to the source color.\n *\n * The default Material You theme on Android 12 and 13.\n */\nclass SchemeTonalSpot extends _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_2__.DynamicScheme {\n    constructor(sourceColorHct, isDark, contrastLevel) {\n        super({\n            sourceColorArgb: sourceColorHct.toInt(),\n            variant: _variant_js__WEBPACK_IMPORTED_MODULE_3__.Variant.TONAL_SPOT,\n            contrastLevel,\n            isDark,\n            primaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 36.0),\n            secondaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 16.0),\n            tertiaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeDegreesDouble(sourceColorHct.hue + 60.0), 24.0),\n            neutralPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 6.0),\n            neutralVariantPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 8.0),\n        });\n    }\n}\n//# sourceMappingURL=scheme_tonal_spot.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/scheme_tonal_spot.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/scheme_vibrant.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/scheme_vibrant.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SchemeVibrant: () => (/* binding */ SchemeVibrant)\n/* harmony export */ });\n/* harmony import */ var _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../palettes/tonal_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/tonal_palette.js\");\n/* harmony import */ var _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dynamic_scheme.js */ \"./node_modules/@material/material-color-utilities/scheme/dynamic_scheme.js\");\n/* harmony import */ var _variant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./variant.js */ \"./node_modules/@material/material-color-utilities/scheme/variant.js\");\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * A Dynamic Color theme that maxes out colorfulness at each position in the\n * Primary Tonal Palette.\n */\nclass SchemeVibrant extends _dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_1__.DynamicScheme {\n    constructor(sourceColorHct, isDark, contrastLevel) {\n        super({\n            sourceColorArgb: sourceColorHct.toInt(),\n            variant: _variant_js__WEBPACK_IMPORTED_MODULE_2__.Variant.VIBRANT,\n            contrastLevel,\n            isDark,\n            primaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 200.0),\n            secondaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(_dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_1__.DynamicScheme.getRotatedHue(sourceColorHct, SchemeVibrant.hues, SchemeVibrant.secondaryRotations), 24.0),\n            tertiaryPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(_dynamic_scheme_js__WEBPACK_IMPORTED_MODULE_1__.DynamicScheme.getRotatedHue(sourceColorHct, SchemeVibrant.hues, SchemeVibrant.tertiaryRotations), 32.0),\n            neutralPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 10.0),\n            neutralVariantPalette: _palettes_tonal_palette_js__WEBPACK_IMPORTED_MODULE_0__.TonalPalette.fromHueAndChroma(sourceColorHct.hue, 12.0),\n        });\n    }\n}\n/**\n * Hues (in degrees) used at breakpoints such that designers can specify a\n * hue rotation that occurs at a given break point.\n */\nSchemeVibrant.hues = [\n    0.0,\n    41.0,\n    61.0,\n    101.0,\n    131.0,\n    181.0,\n    251.0,\n    301.0,\n    360.0,\n];\n/**\n * Hue rotations (in degrees) of the Secondary [TonalPalette],\n * corresponding to the breakpoints in [hues].\n */\nSchemeVibrant.secondaryRotations = [\n    18.0,\n    15.0,\n    10.0,\n    12.0,\n    15.0,\n    18.0,\n    15.0,\n    12.0,\n    12.0,\n];\n/**\n * Hue rotations (in degrees) of the Tertiary [TonalPalette],\n * corresponding to the breakpoints in [hues].\n */\nSchemeVibrant.tertiaryRotations = [\n    35.0,\n    30.0,\n    20.0,\n    25.0,\n    30.0,\n    35.0,\n    30.0,\n    25.0,\n    25.0,\n];\n//# sourceMappingURL=scheme_vibrant.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/scheme_vibrant.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/scheme/variant.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/scheme/variant.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Variant: () => (/* binding */ Variant)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Set of themes supported by Dynamic Color.\n * Instantiate the corresponding subclass, ex. SchemeTonalSpot, to create\n * colors corresponding to the theme.\n */\nvar Variant;\n(function (Variant) {\n    Variant[Variant[\"MONOCHROME\"] = 0] = \"MONOCHROME\";\n    Variant[Variant[\"NEUTRAL\"] = 1] = \"NEUTRAL\";\n    Variant[Variant[\"TONAL_SPOT\"] = 2] = \"TONAL_SPOT\";\n    Variant[Variant[\"VIBRANT\"] = 3] = \"VIBRANT\";\n    Variant[Variant[\"EXPRESSIVE\"] = 4] = \"EXPRESSIVE\";\n    Variant[Variant[\"FIDELITY\"] = 5] = \"FIDELITY\";\n    Variant[Variant[\"CONTENT\"] = 6] = \"CONTENT\";\n    Variant[Variant[\"RAINBOW\"] = 7] = \"RAINBOW\";\n    Variant[Variant[\"FRUIT_SALAD\"] = 8] = \"FRUIT_SALAD\";\n})(Variant || (Variant = {}));\n//# sourceMappingURL=variant.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/scheme/variant.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/score/score.js":
/*!************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/score/score.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Score: () => (/* binding */ Score)\n/* harmony export */ });\n/* harmony import */ var _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hct/hct.js */ \"./node_modules/@material/material-color-utilities/hct/hct.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst SCORE_OPTION_DEFAULTS = {\n    desired: 4,\n    fallbackColorARGB: 0xff4285f4,\n    filter: true, // Avoid unsuitable colors.\n};\nfunction compare(a, b) {\n    if (a.score > b.score) {\n        return -1;\n    }\n    else if (a.score < b.score) {\n        return 1;\n    }\n    return 0;\n}\n/**\n *  Given a large set of colors, remove colors that are unsuitable for a UI\n *  theme, and rank the rest based on suitability.\n *\n *  Enables use of a high cluster count for image quantization, thus ensuring\n *  colors aren't muddied, while curating the high cluster count to a much\n *  smaller number of appropriate choices.\n */\nclass Score {\n    constructor() { }\n    /**\n     * Given a map with keys of colors and values of how often the color appears,\n     * rank the colors based on suitability for being used for a UI theme.\n     *\n     * @param colorsToPopulation map with keys of colors and values of how often\n     *     the color appears, usually from a source image.\n     * @param {ScoreOptions} options optional parameters.\n     * @return Colors sorted by suitability for a UI theme. The most suitable\n     *     color is the first item, the least suitable is the last. There will\n     *     always be at least one color returned. If all the input colors\n     *     were not suitable for a theme, a default fallback color will be\n     *     provided, Google Blue.\n     */\n    static score(colorsToPopulation, options) {\n        const { desired, fallbackColorARGB, filter } = { ...SCORE_OPTION_DEFAULTS, ...options };\n        // Get the HCT color for each Argb value, while finding the per hue count and\n        // total count.\n        const colorsHct = [];\n        const huePopulation = new Array(360).fill(0);\n        let populationSum = 0;\n        for (const [argb, population] of colorsToPopulation.entries()) {\n            const hct = _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__.Hct.fromInt(argb);\n            colorsHct.push(hct);\n            const hue = Math.floor(hct.hue);\n            huePopulation[hue] += population;\n            populationSum += population;\n        }\n        // Hues with more usage in neighboring 30 degree slice get a larger number.\n        const hueExcitedProportions = new Array(360).fill(0.0);\n        for (let hue = 0; hue < 360; hue++) {\n            const proportion = huePopulation[hue] / populationSum;\n            for (let i = hue - 14; i < hue + 16; i++) {\n                const neighborHue = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeDegreesInt(i);\n                hueExcitedProportions[neighborHue] += proportion;\n            }\n        }\n        // Scores each HCT color based on usage and chroma, while optionally\n        // filtering out values that do not have enough chroma or usage.\n        const scoredHct = new Array();\n        for (const hct of colorsHct) {\n            const hue = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeDegreesInt(Math.round(hct.hue));\n            const proportion = hueExcitedProportions[hue];\n            if (filter && (hct.chroma < Score.CUTOFF_CHROMA || proportion <= Score.CUTOFF_EXCITED_PROPORTION)) {\n                continue;\n            }\n            const proportionScore = proportion * 100.0 * Score.WEIGHT_PROPORTION;\n            const chromaWeight = hct.chroma < Score.TARGET_CHROMA ? Score.WEIGHT_CHROMA_BELOW : Score.WEIGHT_CHROMA_ABOVE;\n            const chromaScore = (hct.chroma - Score.TARGET_CHROMA) * chromaWeight;\n            const score = proportionScore + chromaScore;\n            scoredHct.push({ hct, score });\n        }\n        // Sorted so that colors with higher scores come first.\n        scoredHct.sort(compare);\n        // Iterates through potential hue differences in degrees in order to select\n        // the colors with the largest distribution of hues possible. Starting at\n        // 90 degrees(maximum difference for 4 colors) then decreasing down to a\n        // 15 degree minimum.\n        const chosenColors = [];\n        for (let differenceDegrees = 90; differenceDegrees >= 15; differenceDegrees--) {\n            chosenColors.length = 0;\n            for (const { hct } of scoredHct) {\n                const duplicateHue = chosenColors.find(chosenHct => {\n                    return _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_1__.differenceDegrees(hct.hue, chosenHct.hue) < differenceDegrees;\n                });\n                if (!duplicateHue) {\n                    chosenColors.push(hct);\n                }\n                if (chosenColors.length >= desired)\n                    break;\n            }\n            if (chosenColors.length >= desired)\n                break;\n        }\n        const colors = [];\n        if (chosenColors.length === 0) {\n            colors.push(fallbackColorARGB);\n        }\n        for (const chosenHct of chosenColors) {\n            colors.push(chosenHct.toInt());\n        }\n        return colors;\n    }\n}\nScore.TARGET_CHROMA = 48.0; // A1 Chroma\nScore.WEIGHT_PROPORTION = 0.7;\nScore.WEIGHT_CHROMA_ABOVE = 0.3;\nScore.WEIGHT_CHROMA_BELOW = 0.1;\nScore.CUTOFF_CHROMA = 5.0;\nScore.CUTOFF_EXCITED_PROPORTION = 0.01;\n//# sourceMappingURL=score.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/score/score.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/temperature/temperature_cache.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/temperature/temperature_cache.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TemperatureCache: () => (/* binding */ TemperatureCache)\n/* harmony export */ });\n/* harmony import */ var _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hct/hct.js */ \"./node_modules/@material/material-color-utilities/hct/hct.js\");\n/* harmony import */ var _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/* harmony import */ var _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\n\n\n\n/**\n * Design utilities using color temperature theory.\n *\n * Analogous colors, complementary color, and cache to efficiently, lazily,\n * generate data for calculations when needed.\n */\nclass TemperatureCache {\n    constructor(input) {\n        this.input = input;\n        this.hctsByTempCache = [];\n        this.hctsByHueCache = [];\n        this.tempsByHctCache = new Map();\n        this.inputRelativeTemperatureCache = -1.0;\n        this.complementCache = null;\n    }\n    get hctsByTemp() {\n        if (this.hctsByTempCache.length > 0) {\n            return this.hctsByTempCache;\n        }\n        const hcts = this.hctsByHue.concat([this.input]);\n        const temperaturesByHct = this.tempsByHct;\n        hcts.sort((a, b) => temperaturesByHct.get(a) - temperaturesByHct.get(b));\n        this.hctsByTempCache = hcts;\n        return hcts;\n    }\n    get warmest() {\n        return this.hctsByTemp[this.hctsByTemp.length - 1];\n    }\n    get coldest() {\n        return this.hctsByTemp[0];\n    }\n    /**\n     * A set of colors with differing hues, equidistant in temperature.\n     *\n     * In art, this is usually described as a set of 5 colors on a color wheel\n     * divided into 12 sections. This method allows provision of either of those\n     * values.\n     *\n     * Behavior is undefined when [count] or [divisions] is 0.\n     * When divisions < count, colors repeat.\n     *\n     * [count] The number of colors to return, includes the input color.\n     * [divisions] The number of divisions on the color wheel.\n     */\n    analogous(count = 5, divisions = 12) {\n        const startHue = Math.round(this.input.hue);\n        const startHct = this.hctsByHue[startHue];\n        let lastTemp = this.relativeTemperature(startHct);\n        const allColors = [startHct];\n        let absoluteTotalTempDelta = 0.0;\n        for (let i = 0; i < 360; i++) {\n            const hue = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeDegreesInt(startHue + i);\n            const hct = this.hctsByHue[hue];\n            const temp = this.relativeTemperature(hct);\n            const tempDelta = Math.abs(temp - lastTemp);\n            lastTemp = temp;\n            absoluteTotalTempDelta += tempDelta;\n        }\n        let hueAddend = 1;\n        const tempStep = absoluteTotalTempDelta / divisions;\n        let totalTempDelta = 0.0;\n        lastTemp = this.relativeTemperature(startHct);\n        while (allColors.length < divisions) {\n            const hue = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeDegreesInt(startHue + hueAddend);\n            const hct = this.hctsByHue[hue];\n            const temp = this.relativeTemperature(hct);\n            const tempDelta = Math.abs(temp - lastTemp);\n            totalTempDelta += tempDelta;\n            const desiredTotalTempDeltaForIndex = allColors.length * tempStep;\n            let indexSatisfied = totalTempDelta >= desiredTotalTempDeltaForIndex;\n            let indexAddend = 1;\n            // Keep adding this hue to the answers until its temperature is\n            // insufficient. This ensures consistent behavior when there aren't\n            // [divisions] discrete steps between 0 and 360 in hue with [tempStep]\n            // delta in temperature between them.\n            //\n            // For example, white and black have no analogues: there are no other\n            // colors at T100/T0. Therefore, they should just be added to the array\n            // as answers.\n            while (indexSatisfied && allColors.length < divisions) {\n                allColors.push(hct);\n                const desiredTotalTempDeltaForIndex = ((allColors.length + indexAddend) * tempStep);\n                indexSatisfied = totalTempDelta >= desiredTotalTempDeltaForIndex;\n                indexAddend++;\n            }\n            lastTemp = temp;\n            hueAddend++;\n            if (hueAddend > 360) {\n                while (allColors.length < divisions) {\n                    allColors.push(hct);\n                }\n                break;\n            }\n        }\n        const answers = [this.input];\n        // First, generate analogues from rotating counter-clockwise.\n        const increaseHueCount = Math.floor((count - 1) / 2.0);\n        for (let i = 1; i < (increaseHueCount + 1); i++) {\n            let index = 0 - i;\n            while (index < 0) {\n                index = allColors.length + index;\n            }\n            if (index >= allColors.length) {\n                index = index % allColors.length;\n            }\n            answers.splice(0, 0, allColors[index]);\n        }\n        // Second, generate analogues from rotating clockwise.\n        const decreaseHueCount = count - increaseHueCount - 1;\n        for (let i = 1; i < (decreaseHueCount + 1); i++) {\n            let index = i;\n            while (index < 0) {\n                index = allColors.length + index;\n            }\n            if (index >= allColors.length) {\n                index = index % allColors.length;\n            }\n            answers.push(allColors[index]);\n        }\n        return answers;\n    }\n    /**\n     * A color that complements the input color aesthetically.\n     *\n     * In art, this is usually described as being across the color wheel.\n     * History of this shows intent as a color that is just as cool-warm as the\n     * input color is warm-cool.\n     */\n    get complement() {\n        if (this.complementCache != null) {\n            return this.complementCache;\n        }\n        const coldestHue = this.coldest.hue;\n        const coldestTemp = this.tempsByHct.get(this.coldest);\n        const warmestHue = this.warmest.hue;\n        const warmestTemp = this.tempsByHct.get(this.warmest);\n        const range = warmestTemp - coldestTemp;\n        const startHueIsColdestToWarmest = TemperatureCache.isBetween(this.input.hue, coldestHue, warmestHue);\n        const startHue = startHueIsColdestToWarmest ? warmestHue : coldestHue;\n        const endHue = startHueIsColdestToWarmest ? coldestHue : warmestHue;\n        const directionOfRotation = 1.0;\n        let smallestError = 1000.0;\n        let answer = this.hctsByHue[Math.round(this.input.hue)];\n        const complementRelativeTemp = 1.0 - this.inputRelativeTemperature;\n        // Find the color in the other section, closest to the inverse percentile\n        // of the input color. This is the complement.\n        for (let hueAddend = 0.0; hueAddend <= 360.0; hueAddend += 1.0) {\n            const hue = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeDegreesDouble(startHue + directionOfRotation * hueAddend);\n            if (!TemperatureCache.isBetween(hue, startHue, endHue)) {\n                continue;\n            }\n            const possibleAnswer = this.hctsByHue[Math.round(hue)];\n            const relativeTemp = (this.tempsByHct.get(possibleAnswer) - coldestTemp) / range;\n            const error = Math.abs(complementRelativeTemp - relativeTemp);\n            if (error < smallestError) {\n                smallestError = error;\n                answer = possibleAnswer;\n            }\n        }\n        this.complementCache = answer;\n        return this.complementCache;\n    }\n    /**\n     * Temperature relative to all colors with the same chroma and tone.\n     * Value on a scale from 0 to 1.\n     */\n    relativeTemperature(hct) {\n        const range = this.tempsByHct.get(this.warmest) - this.tempsByHct.get(this.coldest);\n        const differenceFromColdest = this.tempsByHct.get(hct) - this.tempsByHct.get(this.coldest);\n        // Handle when there's no difference in temperature between warmest and\n        // coldest: for example, at T100, only one color is available, white.\n        if (range === 0.0) {\n            return 0.5;\n        }\n        return differenceFromColdest / range;\n    }\n    /** Relative temperature of the input color. See [relativeTemperature]. */\n    get inputRelativeTemperature() {\n        if (this.inputRelativeTemperatureCache >= 0.0) {\n            return this.inputRelativeTemperatureCache;\n        }\n        this.inputRelativeTemperatureCache = this.relativeTemperature(this.input);\n        return this.inputRelativeTemperatureCache;\n    }\n    /** A Map with keys of HCTs in [hctsByTemp], values of raw temperature. */\n    get tempsByHct() {\n        if (this.tempsByHctCache.size > 0) {\n            return this.tempsByHctCache;\n        }\n        const allHcts = this.hctsByHue.concat([this.input]);\n        const temperaturesByHct = new Map();\n        for (const e of allHcts) {\n            temperaturesByHct.set(e, TemperatureCache.rawTemperature(e));\n        }\n        this.tempsByHctCache = temperaturesByHct;\n        return temperaturesByHct;\n    }\n    /**\n     * HCTs for all hues, with the same chroma/tone as the input.\n     * Sorted ascending, hue 0 to 360.\n     */\n    get hctsByHue() {\n        if (this.hctsByHueCache.length > 0) {\n            return this.hctsByHueCache;\n        }\n        const hcts = [];\n        for (let hue = 0.0; hue <= 360.0; hue += 1.0) {\n            const colorAtHue = _hct_hct_js__WEBPACK_IMPORTED_MODULE_0__.Hct.from(hue, this.input.chroma, this.input.tone);\n            hcts.push(colorAtHue);\n        }\n        this.hctsByHueCache = hcts;\n        return this.hctsByHueCache;\n    }\n    /** Determines if an angle is between two other angles, rotating clockwise. */\n    static isBetween(angle, a, b) {\n        if (a < b) {\n            return a <= angle && angle <= b;\n        }\n        return a <= angle || angle <= b;\n    }\n    /**\n     * Value representing cool-warm factor of a color.\n     * Values below 0 are considered cool, above, warm.\n     *\n     * Color science has researched emotion and harmony, which art uses to select\n     * colors. Warm-cool is the foundation of analogous and complementary colors.\n     * See:\n     * - Li-Chen Ou's Chapter 19 in Handbook of Color Psychology (2015).\n     * - Josef Albers' Interaction of Color chapters 19 and 21.\n     *\n     * Implementation of Ou, Woodcock and Wright's algorithm, which uses\n     * L*a*b* / LCH color space.\n     * Return value has these properties:\n     * - Values below 0 are cool, above 0 are warm.\n     * - Lower bound: -0.52 - (chroma ^ 1.07 / 20). L*a*b* chroma is infinite.\n     *   Assuming max of 130 chroma, -9.66.\n     * - Upper bound: -0.52 + (chroma ^ 1.07 / 20). L*a*b* chroma is infinite.\n     *   Assuming max of 130 chroma, 8.61.\n     */\n    static rawTemperature(color) {\n        const lab = _utils_color_utils_js__WEBPACK_IMPORTED_MODULE_1__.labFromArgb(color.toInt());\n        const hue = _utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeDegreesDouble(Math.atan2(lab[2], lab[1]) * 180.0 / Math.PI);\n        const chroma = Math.sqrt((lab[1] * lab[1]) + (lab[2] * lab[2]));\n        const temperature = -0.5 +\n            0.02 * Math.pow(chroma, 1.07) *\n                Math.cos(_utils_math_utils_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeDegreesDouble(hue - 50.0) * Math.PI / 180.0);\n        return temperature;\n    }\n}\n//# sourceMappingURL=temperature_cache.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/temperature/temperature_cache.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/utils/color_utils.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/utils/color_utils.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alphaFromArgb: () => (/* binding */ alphaFromArgb),\n/* harmony export */   argbFromLab: () => (/* binding */ argbFromLab),\n/* harmony export */   argbFromLinrgb: () => (/* binding */ argbFromLinrgb),\n/* harmony export */   argbFromLstar: () => (/* binding */ argbFromLstar),\n/* harmony export */   argbFromRgb: () => (/* binding */ argbFromRgb),\n/* harmony export */   argbFromRgba: () => (/* binding */ argbFromRgba),\n/* harmony export */   argbFromXyz: () => (/* binding */ argbFromXyz),\n/* harmony export */   blueFromArgb: () => (/* binding */ blueFromArgb),\n/* harmony export */   delinearized: () => (/* binding */ delinearized),\n/* harmony export */   greenFromArgb: () => (/* binding */ greenFromArgb),\n/* harmony export */   isOpaque: () => (/* binding */ isOpaque),\n/* harmony export */   labFromArgb: () => (/* binding */ labFromArgb),\n/* harmony export */   linearized: () => (/* binding */ linearized),\n/* harmony export */   lstarFromArgb: () => (/* binding */ lstarFromArgb),\n/* harmony export */   lstarFromY: () => (/* binding */ lstarFromY),\n/* harmony export */   redFromArgb: () => (/* binding */ redFromArgb),\n/* harmony export */   rgbaFromArgb: () => (/* binding */ rgbaFromArgb),\n/* harmony export */   whitePointD65: () => (/* binding */ whitePointD65),\n/* harmony export */   xyzFromArgb: () => (/* binding */ xyzFromArgb),\n/* harmony export */   yFromLstar: () => (/* binding */ yFromLstar)\n/* harmony export */ });\n/* harmony import */ var _math_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math_utils.js */ \"./node_modules/@material/material-color-utilities/utils/math_utils.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\n\n/**\n * Color science utilities.\n *\n * Utility methods for color science constants and color space\n * conversions that aren't HCT or CAM16.\n */\nconst SRGB_TO_XYZ = [\n    [0.41233895, 0.35762064, 0.18051042],\n    [0.2126, 0.7152, 0.0722],\n    [0.01932141, 0.11916382, 0.95034478],\n];\nconst XYZ_TO_SRGB = [\n    [\n        3.2413774792388685,\n        -1.5376652402851851,\n        -0.49885366846268053,\n    ],\n    [\n        -0.9691452513005321,\n        1.8758853451067872,\n        0.04156585616912061,\n    ],\n    [\n        0.05562093689691305,\n        -0.20395524564742123,\n        1.0571799111220335,\n    ],\n];\nconst WHITE_POINT_D65 = [95.047, 100.0, 108.883];\n/**\n * Converts a color from RGB components to ARGB format.\n */\nfunction argbFromRgb(red, green, blue) {\n    return (255 << 24 | (red & 255) << 16 | (green & 255) << 8 | blue & 255) >>>\n        0;\n}\n/**\n * Converts a color from linear RGB components to ARGB format.\n */\nfunction argbFromLinrgb(linrgb) {\n    const r = delinearized(linrgb[0]);\n    const g = delinearized(linrgb[1]);\n    const b = delinearized(linrgb[2]);\n    return argbFromRgb(r, g, b);\n}\n/**\n * Returns the alpha component of a color in ARGB format.\n */\nfunction alphaFromArgb(argb) {\n    return argb >> 24 & 255;\n}\n/**\n * Returns the red component of a color in ARGB format.\n */\nfunction redFromArgb(argb) {\n    return argb >> 16 & 255;\n}\n/**\n * Returns the green component of a color in ARGB format.\n */\nfunction greenFromArgb(argb) {\n    return argb >> 8 & 255;\n}\n/**\n * Returns the blue component of a color in ARGB format.\n */\nfunction blueFromArgb(argb) {\n    return argb & 255;\n}\n/**\n * Returns whether a color in ARGB format is opaque.\n */\nfunction isOpaque(argb) {\n    return alphaFromArgb(argb) >= 255;\n}\n/**\n * Converts a color from ARGB to XYZ.\n */\nfunction argbFromXyz(x, y, z) {\n    const matrix = XYZ_TO_SRGB;\n    const linearR = matrix[0][0] * x + matrix[0][1] * y + matrix[0][2] * z;\n    const linearG = matrix[1][0] * x + matrix[1][1] * y + matrix[1][2] * z;\n    const linearB = matrix[2][0] * x + matrix[2][1] * y + matrix[2][2] * z;\n    const r = delinearized(linearR);\n    const g = delinearized(linearG);\n    const b = delinearized(linearB);\n    return argbFromRgb(r, g, b);\n}\n/**\n * Converts a color from XYZ to ARGB.\n */\nfunction xyzFromArgb(argb) {\n    const r = linearized(redFromArgb(argb));\n    const g = linearized(greenFromArgb(argb));\n    const b = linearized(blueFromArgb(argb));\n    return _math_utils_js__WEBPACK_IMPORTED_MODULE_0__.matrixMultiply([r, g, b], SRGB_TO_XYZ);\n}\n/**\n * Converts a color represented in Lab color space into an ARGB\n * integer.\n */\nfunction argbFromLab(l, a, b) {\n    const whitePoint = WHITE_POINT_D65;\n    const fy = (l + 16.0) / 116.0;\n    const fx = a / 500.0 + fy;\n    const fz = fy - b / 200.0;\n    const xNormalized = labInvf(fx);\n    const yNormalized = labInvf(fy);\n    const zNormalized = labInvf(fz);\n    const x = xNormalized * whitePoint[0];\n    const y = yNormalized * whitePoint[1];\n    const z = zNormalized * whitePoint[2];\n    return argbFromXyz(x, y, z);\n}\n/**\n * Converts a color from ARGB representation to L*a*b*\n * representation.\n *\n * @param argb the ARGB representation of a color\n * @return a Lab object representing the color\n */\nfunction labFromArgb(argb) {\n    const linearR = linearized(redFromArgb(argb));\n    const linearG = linearized(greenFromArgb(argb));\n    const linearB = linearized(blueFromArgb(argb));\n    const matrix = SRGB_TO_XYZ;\n    const x = matrix[0][0] * linearR + matrix[0][1] * linearG + matrix[0][2] * linearB;\n    const y = matrix[1][0] * linearR + matrix[1][1] * linearG + matrix[1][2] * linearB;\n    const z = matrix[2][0] * linearR + matrix[2][1] * linearG + matrix[2][2] * linearB;\n    const whitePoint = WHITE_POINT_D65;\n    const xNormalized = x / whitePoint[0];\n    const yNormalized = y / whitePoint[1];\n    const zNormalized = z / whitePoint[2];\n    const fx = labF(xNormalized);\n    const fy = labF(yNormalized);\n    const fz = labF(zNormalized);\n    const l = 116.0 * fy - 16;\n    const a = 500.0 * (fx - fy);\n    const b = 200.0 * (fy - fz);\n    return [l, a, b];\n}\n/**\n * Converts an L* value to an ARGB representation.\n *\n * @param lstar L* in L*a*b*\n * @return ARGB representation of grayscale color with lightness\n * matching L*\n */\nfunction argbFromLstar(lstar) {\n    const y = yFromLstar(lstar);\n    const component = delinearized(y);\n    return argbFromRgb(component, component, component);\n}\n/**\n * Computes the L* value of a color in ARGB representation.\n *\n * @param argb ARGB representation of a color\n * @return L*, from L*a*b*, coordinate of the color\n */\nfunction lstarFromArgb(argb) {\n    const y = xyzFromArgb(argb)[1];\n    return 116.0 * labF(y / 100.0) - 16.0;\n}\n/**\n * Converts an L* value to a Y value.\n *\n * L* in L*a*b* and Y in XYZ measure the same quantity, luminance.\n *\n * L* measures perceptual luminance, a linear scale. Y in XYZ\n * measures relative luminance, a logarithmic scale.\n *\n * @param lstar L* in L*a*b*\n * @return Y in XYZ\n */\nfunction yFromLstar(lstar) {\n    return 100.0 * labInvf((lstar + 16.0) / 116.0);\n}\n/**\n * Converts a Y value to an L* value.\n *\n * L* in L*a*b* and Y in XYZ measure the same quantity, luminance.\n *\n * L* measures perceptual luminance, a linear scale. Y in XYZ\n * measures relative luminance, a logarithmic scale.\n *\n * @param y Y in XYZ\n * @return L* in L*a*b*\n */\nfunction lstarFromY(y) {\n    return labF(y / 100.0) * 116.0 - 16.0;\n}\n/**\n * Linearizes an RGB component.\n *\n * @param rgbComponent 0 <= rgb_component <= 255, represents R/G/B\n * channel\n * @return 0.0 <= output <= 100.0, color channel converted to\n * linear RGB space\n */\nfunction linearized(rgbComponent) {\n    const normalized = rgbComponent / 255.0;\n    if (normalized <= 0.040449936) {\n        return normalized / 12.92 * 100.0;\n    }\n    else {\n        return Math.pow((normalized + 0.055) / 1.055, 2.4) * 100.0;\n    }\n}\n/**\n * Delinearizes an RGB component.\n *\n * @param rgbComponent 0.0 <= rgb_component <= 100.0, represents\n * linear R/G/B channel\n * @return 0 <= output <= 255, color channel converted to regular\n * RGB space\n */\nfunction delinearized(rgbComponent) {\n    const normalized = rgbComponent / 100.0;\n    let delinearized = 0.0;\n    if (normalized <= 0.0031308) {\n        delinearized = normalized * 12.92;\n    }\n    else {\n        delinearized = 1.055 * Math.pow(normalized, 1.0 / 2.4) - 0.055;\n    }\n    return _math_utils_js__WEBPACK_IMPORTED_MODULE_0__.clampInt(0, 255, Math.round(delinearized * 255.0));\n}\n/**\n * Returns the standard white point; white on a sunny day.\n *\n * @return The white point\n */\nfunction whitePointD65() {\n    return WHITE_POINT_D65;\n}\n/**\n * Return RGBA from a given int32 color\n *\n * @param argb ARGB representation of a int32 color.\n * @return RGBA representation of a int32 color.\n */\nfunction rgbaFromArgb(argb) {\n    const r = redFromArgb(argb);\n    const g = greenFromArgb(argb);\n    const b = blueFromArgb(argb);\n    const a = alphaFromArgb(argb);\n    return { r, g, b, a };\n}\n/**\n * Return int32 color from a given RGBA component\n *\n * @param rgba RGBA representation of a int32 color.\n * @returns ARGB representation of a int32 color.\n */\nfunction argbFromRgba({ r, g, b, a }) {\n    const rValue = clampComponent(r);\n    const gValue = clampComponent(g);\n    const bValue = clampComponent(b);\n    const aValue = clampComponent(a);\n    return (aValue << 24) | (rValue << 16) | (gValue << 8) | bValue;\n}\nfunction clampComponent(value) {\n    if (value < 0)\n        return 0;\n    if (value > 255)\n        return 255;\n    return value;\n}\nfunction labF(t) {\n    const e = 216.0 / 24389.0;\n    const kappa = 24389.0 / 27.0;\n    if (t > e) {\n        return Math.pow(t, 1.0 / 3.0);\n    }\n    else {\n        return (kappa * t + 16) / 116;\n    }\n}\nfunction labInvf(ft) {\n    const e = 216.0 / 24389.0;\n    const kappa = 24389.0 / 27.0;\n    const ft3 = ft * ft * ft;\n    if (ft3 > e) {\n        return ft3;\n    }\n    else {\n        return (116 * ft - 16) / kappa;\n    }\n}\n//# sourceMappingURL=color_utils.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/utils/color_utils.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/utils/image_utils.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/utils/image_utils.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sourceColorFromImage: () => (/* binding */ sourceColorFromImage)\n/* harmony export */ });\n/* harmony import */ var _quantize_quantizer_celebi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../quantize/quantizer_celebi.js */ \"./node_modules/@material/material-color-utilities/quantize/quantizer_celebi.js\");\n/* harmony import */ var _score_score_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../score/score.js */ \"./node_modules/@material/material-color-utilities/score/score.js\");\n/* harmony import */ var _color_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * Get the source color from an image.\n *\n * @param image The image element\n * @return Source color - the color most suitable for creating a UI theme\n */\nasync function sourceColorFromImage(image) {\n    // Convert Image data to Pixel Array\n    const imageBytes = await new Promise((resolve, reject) => {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        if (!context) {\n            reject(new Error('Could not get canvas context'));\n            return;\n        }\n        const callback = () => {\n            canvas.width = image.width;\n            canvas.height = image.height;\n            context.drawImage(image, 0, 0);\n            let rect = [0, 0, image.width, image.height];\n            const area = image.dataset['area'];\n            if (area && /^\\d+(\\s*,\\s*\\d+){3}$/.test(area)) {\n                rect = area.split(/\\s*,\\s*/).map(s => {\n                    // tslint:disable-next-line:ban\n                    return parseInt(s, 10);\n                });\n            }\n            const [sx, sy, sw, sh] = rect;\n            resolve(context.getImageData(sx, sy, sw, sh).data);\n        };\n        if (image.complete) {\n            callback();\n        }\n        else {\n            image.onload = callback;\n        }\n    });\n    // Convert Image data to Pixel Array\n    const pixels = [];\n    for (let i = 0; i < imageBytes.length; i += 4) {\n        const r = imageBytes[i];\n        const g = imageBytes[i + 1];\n        const b = imageBytes[i + 2];\n        const a = imageBytes[i + 3];\n        if (a < 255) {\n            continue;\n        }\n        const argb = (0,_color_utils_js__WEBPACK_IMPORTED_MODULE_2__.argbFromRgb)(r, g, b);\n        pixels.push(argb);\n    }\n    // Convert Pixels to Material Colors\n    const result = _quantize_quantizer_celebi_js__WEBPACK_IMPORTED_MODULE_0__.QuantizerCelebi.quantize(pixels, 128);\n    const ranked = _score_score_js__WEBPACK_IMPORTED_MODULE_1__.Score.score(result);\n    const top = ranked[0];\n    return top;\n}\n//# sourceMappingURL=image_utils.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/utils/image_utils.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/utils/math_utils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/utils/math_utils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clampDouble: () => (/* binding */ clampDouble),\n/* harmony export */   clampInt: () => (/* binding */ clampInt),\n/* harmony export */   differenceDegrees: () => (/* binding */ differenceDegrees),\n/* harmony export */   lerp: () => (/* binding */ lerp),\n/* harmony export */   matrixMultiply: () => (/* binding */ matrixMultiply),\n/* harmony export */   rotationDirection: () => (/* binding */ rotationDirection),\n/* harmony export */   sanitizeDegreesDouble: () => (/* binding */ sanitizeDegreesDouble),\n/* harmony export */   sanitizeDegreesInt: () => (/* binding */ sanitizeDegreesInt),\n/* harmony export */   signum: () => (/* binding */ signum)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\n/**\n * Utility methods for mathematical operations.\n */\n/**\n * The signum function.\n *\n * @return 1 if num > 0, -1 if num < 0, and 0 if num = 0\n */\nfunction signum(num) {\n    if (num < 0) {\n        return -1;\n    }\n    else if (num === 0) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n/**\n * The linear interpolation function.\n *\n * @return start if amount = 0 and stop if amount = 1\n */\nfunction lerp(start, stop, amount) {\n    return (1.0 - amount) * start + amount * stop;\n}\n/**\n * Clamps an integer between two integers.\n *\n * @return input when min <= input <= max, and either min or max\n * otherwise.\n */\nfunction clampInt(min, max, input) {\n    if (input < min) {\n        return min;\n    }\n    else if (input > max) {\n        return max;\n    }\n    return input;\n}\n/**\n * Clamps an integer between two floating-point numbers.\n *\n * @return input when min <= input <= max, and either min or max\n * otherwise.\n */\nfunction clampDouble(min, max, input) {\n    if (input < min) {\n        return min;\n    }\n    else if (input > max) {\n        return max;\n    }\n    return input;\n}\n/**\n * Sanitizes a degree measure as an integer.\n *\n * @return a degree measure between 0 (inclusive) and 360\n * (exclusive).\n */\nfunction sanitizeDegreesInt(degrees) {\n    degrees = degrees % 360;\n    if (degrees < 0) {\n        degrees = degrees + 360;\n    }\n    return degrees;\n}\n/**\n * Sanitizes a degree measure as a floating-point number.\n *\n * @return a degree measure between 0.0 (inclusive) and 360.0\n * (exclusive).\n */\nfunction sanitizeDegreesDouble(degrees) {\n    degrees = degrees % 360.0;\n    if (degrees < 0) {\n        degrees = degrees + 360.0;\n    }\n    return degrees;\n}\n/**\n * Sign of direction change needed to travel from one angle to\n * another.\n *\n * For angles that are 180 degrees apart from each other, both\n * directions have the same travel distance, so either direction is\n * shortest. The value 1.0 is returned in this case.\n *\n * @param from The angle travel starts from, in degrees.\n * @param to The angle travel ends at, in degrees.\n * @return -1 if decreasing from leads to the shortest travel\n * distance, 1 if increasing from leads to the shortest travel\n * distance.\n */\nfunction rotationDirection(from, to) {\n    const increasingDifference = sanitizeDegreesDouble(to - from);\n    return increasingDifference <= 180.0 ? 1.0 : -1.0;\n}\n/**\n * Distance of two points on a circle, represented using degrees.\n */\nfunction differenceDegrees(a, b) {\n    return 180.0 - Math.abs(Math.abs(a - b) - 180.0);\n}\n/**\n * Multiplies a 1x3 row vector with a 3x3 matrix.\n */\nfunction matrixMultiply(row, matrix) {\n    const a = row[0] * matrix[0][0] + row[1] * matrix[0][1] + row[2] * matrix[0][2];\n    const b = row[0] * matrix[1][0] + row[1] * matrix[1][1] + row[2] * matrix[1][2];\n    const c = row[0] * matrix[2][0] + row[1] * matrix[2][1] + row[2] * matrix[2][2];\n    return [a, b, c];\n}\n//# sourceMappingURL=math_utils.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/utils/math_utils.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/utils/string_utils.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/utils/string_utils.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   argbFromHex: () => (/* binding */ argbFromHex),\n/* harmony export */   hexFromArgb: () => (/* binding */ hexFromArgb)\n/* harmony export */ });\n/* harmony import */ var _color_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color_utils.js */ \"./node_modules/@material/material-color-utilities/utils/color_utils.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Utility methods for hexadecimal representations of colors.\n */\n/**\n * @param argb ARGB representation of a color.\n * @return Hex string representing color, ex. #ff0000 for red.\n */\nfunction hexFromArgb(argb) {\n    const r = _color_utils_js__WEBPACK_IMPORTED_MODULE_0__.redFromArgb(argb);\n    const g = _color_utils_js__WEBPACK_IMPORTED_MODULE_0__.greenFromArgb(argb);\n    const b = _color_utils_js__WEBPACK_IMPORTED_MODULE_0__.blueFromArgb(argb);\n    const outParts = [r.toString(16), g.toString(16), b.toString(16)];\n    // Pad single-digit output values\n    for (const [i, part] of outParts.entries()) {\n        if (part.length === 1) {\n            outParts[i] = '0' + part;\n        }\n    }\n    return '#' + outParts.join('');\n}\n/**\n * @param hex String representing color as hex code. Accepts strings with or\n *     without leading #, and string representing the color using 3, 6, or 8\n *     hex characters.\n * @return ARGB representation of color.\n */\nfunction argbFromHex(hex) {\n    hex = hex.replace('#', '');\n    const isThree = hex.length === 3;\n    const isSix = hex.length === 6;\n    const isEight = hex.length === 8;\n    if (!isThree && !isSix && !isEight) {\n        throw new Error('unexpected hex ' + hex);\n    }\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    if (isThree) {\n        r = parseIntHex(hex.slice(0, 1).repeat(2));\n        g = parseIntHex(hex.slice(1, 2).repeat(2));\n        b = parseIntHex(hex.slice(2, 3).repeat(2));\n    }\n    else if (isSix) {\n        r = parseIntHex(hex.slice(0, 2));\n        g = parseIntHex(hex.slice(2, 4));\n        b = parseIntHex(hex.slice(4, 6));\n    }\n    else if (isEight) {\n        r = parseIntHex(hex.slice(2, 4));\n        g = parseIntHex(hex.slice(4, 6));\n        b = parseIntHex(hex.slice(6, 8));\n    }\n    return (((255 << 24) | ((r & 0x0ff) << 16) | ((g & 0x0ff) << 8) | (b & 0x0ff)) >>>\n        0);\n}\nfunction parseIntHex(value) {\n    // tslint:disable-next-line:ban\n    return parseInt(value, 16);\n}\n//# sourceMappingURL=string_utils.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/utils/string_utils.js?");

/***/ }),

/***/ "./node_modules/@material/material-color-utilities/utils/theme_utils.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@material/material-color-utilities/utils/theme_utils.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyTheme: () => (/* binding */ applyTheme),\n/* harmony export */   customColor: () => (/* binding */ customColor),\n/* harmony export */   themeFromImage: () => (/* binding */ themeFromImage),\n/* harmony export */   themeFromSourceColor: () => (/* binding */ themeFromSourceColor)\n/* harmony export */ });\n/* harmony import */ var _blend_blend_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../blend/blend.js */ \"./node_modules/@material/material-color-utilities/blend/blend.js\");\n/* harmony import */ var _palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../palettes/core_palette.js */ \"./node_modules/@material/material-color-utilities/palettes/core_palette.js\");\n/* harmony import */ var _scheme_scheme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scheme/scheme.js */ \"./node_modules/@material/material-color-utilities/scheme/scheme.js\");\n/* harmony import */ var _image_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./image_utils.js */ \"./node_modules/@material/material-color-utilities/utils/image_utils.js\");\n/* harmony import */ var _string_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./string_utils.js */ \"./node_modules/@material/material-color-utilities/utils/string_utils.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/**\n * Generate a theme from a source color\n *\n * @param source Source color\n * @param customColors Array of custom colors\n * @return Theme object\n */\nfunction themeFromSourceColor(source, customColors = []) {\n    const palette = _palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_1__.CorePalette.of(source);\n    return {\n        source,\n        schemes: {\n            light: _scheme_scheme_js__WEBPACK_IMPORTED_MODULE_2__.Scheme.light(source),\n            dark: _scheme_scheme_js__WEBPACK_IMPORTED_MODULE_2__.Scheme.dark(source),\n        },\n        palettes: {\n            primary: palette.a1,\n            secondary: palette.a2,\n            tertiary: palette.a3,\n            neutral: palette.n1,\n            neutralVariant: palette.n2,\n            error: palette.error,\n        },\n        customColors: customColors.map((c) => customColor(source, c)),\n    };\n}\n/**\n * Generate a theme from an image source\n *\n * @param image Image element\n * @param customColors Array of custom colors\n * @return Theme object\n */\nasync function themeFromImage(image, customColors = []) {\n    const source = await (0,_image_utils_js__WEBPACK_IMPORTED_MODULE_3__.sourceColorFromImage)(image);\n    return themeFromSourceColor(source, customColors);\n}\n/**\n * Generate custom color group from source and target color\n *\n * @param source Source color\n * @param color Custom color\n * @return Custom color group\n *\n * @link https://m3.material.io/styles/color/the-color-system/color-roles\n */\nfunction customColor(source, color) {\n    let value = color.value;\n    const from = value;\n    const to = source;\n    if (color.blend) {\n        value = _blend_blend_js__WEBPACK_IMPORTED_MODULE_0__.Blend.harmonize(from, to);\n    }\n    const palette = _palettes_core_palette_js__WEBPACK_IMPORTED_MODULE_1__.CorePalette.of(value);\n    const tones = palette.a1;\n    return {\n        color,\n        value,\n        light: {\n            color: tones.tone(40),\n            onColor: tones.tone(100),\n            colorContainer: tones.tone(90),\n            onColorContainer: tones.tone(10),\n        },\n        dark: {\n            color: tones.tone(80),\n            onColor: tones.tone(20),\n            colorContainer: tones.tone(30),\n            onColorContainer: tones.tone(90),\n        },\n    };\n}\n/**\n * Apply a theme to an element\n *\n * @param theme Theme object\n * @param options Options\n */\nfunction applyTheme(theme, options) {\n    const target = options?.target || document.body;\n    const isDark = options?.dark ?? false;\n    const scheme = isDark ? theme.schemes.dark : theme.schemes.light;\n    setSchemeProperties(target, scheme);\n    if (options?.brightnessSuffix) {\n        setSchemeProperties(target, theme.schemes.dark, '-dark');\n        setSchemeProperties(target, theme.schemes.light, '-light');\n    }\n    if (options?.paletteTones) {\n        const tones = options?.paletteTones ?? [];\n        for (const [key, palette] of Object.entries(theme.palettes)) {\n            const paletteKey = key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n            for (const tone of tones) {\n                const token = `--md-ref-palette-${paletteKey}-${paletteKey}${tone}`;\n                const color = (0,_string_utils_js__WEBPACK_IMPORTED_MODULE_4__.hexFromArgb)(palette.tone(tone));\n                target.style.setProperty(token, color);\n            }\n        }\n    }\n}\nfunction setSchemeProperties(target, scheme, suffix = '') {\n    for (const [key, value] of Object.entries(scheme.toJSON())) {\n        const token = key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n        const color = (0,_string_utils_js__WEBPACK_IMPORTED_MODULE_4__.hexFromArgb)(value);\n        target.style.setProperty(`--md-sys-color-${token}${suffix}`, color);\n    }\n}\n//# sourceMappingURL=theme_utils.js.map\n\n//# sourceURL=webpack://material-color-css/./node_modules/@material/material-color-utilities/utils/theme_utils.js?");

/***/ }),

/***/ "./node_modules/material-color-css/index.js":
/*!**************************************************!*\
  !*** ./node_modules/material-color-css/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   colorFromImage: () => (/* reexport safe */ _src_material_colors_js__WEBPACK_IMPORTED_MODULE_0__.colorFromImage),\n/* harmony export */   updateColors: () => (/* reexport safe */ _src_material_colors_js__WEBPACK_IMPORTED_MODULE_0__.updateColors)\n/* harmony export */ });\n/* harmony import */ var _src_material_colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/material-colors.js */ \"./node_modules/material-color-css/src/material-colors.js\");\n\r\n\n\n//# sourceURL=webpack://material-color-css/./node_modules/material-color-css/index.js?");

/***/ }),

/***/ "./node_modules/material-color-css/src/material-colors.js":
/*!****************************************************************!*\
  !*** ./node_modules/material-color-css/src/material-colors.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   colorFromImage: () => (/* binding */ colorFromImage),\n/* harmony export */   updateColors: () => (/* binding */ updateColors)\n/* harmony export */ });\n/* harmony import */ var _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../@material/material-color-utilities/index.js */ \"./node_modules/@material/material-color-utilities/index.js\");\n\r\n\r\nfunction setColorFromScheme([mode, contrast, scheme], colorName) {\r\n  const palette = _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.MaterialDynamicColors[colorName];\r\n  if (palette) {\r\n    const color = (0,_material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.hexFromArgb)(palette.getArgb(scheme));\r\n    const originalName = palette.name;\r\n    const propertyName = originalName.replace(/_/g, \"-\");\r\n    const styleProperty = `--${mode}-${contrast}-${propertyName}`;\r\n    document.documentElement.style.setProperty(styleProperty, color);\r\n  } else console.error(`${paletteName} doesn't exist!`);\r\n}\r\n\r\nfunction colorScheme(sourceColor, type, mode, contrast) {\r\n  const hct = _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.Hct.fromInt((0,_material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.argbFromHex)(sourceColor));\r\n\r\n  let isDark;\r\n  if (mode === \"light\") isDark = false;\r\n  else if (mode === \"dark\") isDark = true;\r\n  else console.error(\"mode must be light or dark!\");\r\n\r\n  let contrastLevel;\r\n  if (contrast === \"default\") contrastLevel = 0.0;\r\n  else if (contrast === \"medium\") contrastLevel = 0.5;\r\n  else if (contrast === \"high\") contrastLevel = 1.0;\r\n  else if (contrast === \"reduced\") contrastLevel = -1.0;\r\n  else console.error(\"contrast type error!\");\r\n\r\n  if (typeof type === \"string\") {\r\n    type = type.toLowerCase();\r\n  } else {\r\n    console.error(\"type is not a string\");\r\n  }\r\n  let scheme;\r\n  if (type === \"content\") {\r\n    scheme = new _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.SchemeContent(hct, isDark, contrastLevel);\r\n  } else if (type === \"expressive\") {\r\n    scheme = new _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.SchemeExpressive(hct, isDark, contrastLevel);\r\n  } else if (type === \"fidelity\") {\r\n    scheme = new _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.SchemeFidelity(hct, isDark, contrastLevel);\r\n  } else if (type === \"fruitsalad\") {\r\n    scheme = new _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.SchemeFruitSalad(hct, isDark, contrastLevel);\r\n  } else if (type === \"monochrome\") {\r\n    scheme = new _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.SchemeMonochrome(hct, isDark, contrastLevel);\r\n  } else if (type === \"rainbow\") {\r\n    scheme = new _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.SchemeRainbow(hct, isDark, contrastLevel);\r\n  } else if (type === \"tonalspot\") {\r\n    scheme = new _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.SchemeTonalSpot(hct, isDark, contrastLevel);\r\n  } else if (type === \"vibrant\") {\r\n    scheme = new _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.SchemeVibrant(hct, isDark, contrastLevel);\r\n  } else if (type === \"neutral\") {\r\n    scheme = new _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.SchemeNeutral(hct, isDark, contrastLevel);\r\n  } else console.error(\"scheme type error\");\r\n\r\n  return [mode, contrast, scheme];\r\n}\r\n\r\nfunction updateColors(sourceColor, schemeType = \"tonalspot\") {\r\n  const mode = [\"light\", \"dark\"];\r\n  const contrast = [\"default\", \"medium\", \"high\"];\r\n  const colorName = [\r\n    \"background\",\r\n    \"onBackground\",\r\n    \"surface\",\r\n    \"surfaceDim\",\r\n    \"surfaceBright\",\r\n    \"surfaceContainerLowest\",\r\n    \"surfaceContainerLow\",\r\n    \"surfaceContainer\",\r\n    \"surfaceContainerHigh\",\r\n    \"surfaceContainerHighest\",\r\n    \"onSurface\",\r\n    \"surfaceVariant\",\r\n    \"onSurfaceVariant\",\r\n    \"inverseSurface\",\r\n    \"inverseOnSurface\",\r\n    \"outline\",\r\n    \"outlineVariant\",\r\n    \"shadow\",\r\n    \"scrim\",\r\n    \"surfaceTint\",\r\n    \"primary\",\r\n    \"onPrimary\",\r\n    \"primaryContainer\",\r\n    \"onPrimaryContainer\",\r\n    \"inversePrimary\",\r\n    \"secondary\",\r\n    \"onSecondary\",\r\n    \"secondaryContainer\",\r\n    \"onSecondaryContainer\",\r\n    \"tertiary\",\r\n    \"onTertiary\",\r\n    \"tertiaryContainer\",\r\n    \"onTertiaryContainer\",\r\n    \"error\",\r\n    \"onError\",\r\n    \"errorContainer\",\r\n    \"onErrorContainer\",\r\n    \"primaryFixed\",\r\n    \"primaryFixedDim\",\r\n    \"onPrimaryFixed\",\r\n    \"onPrimaryFixedVariant\",\r\n    \"secondaryFixed\",\r\n    \"secondaryFixedDim\",\r\n    \"onSecondaryFixed\",\r\n    \"onSecondaryFixedVariant\",\r\n    \"tertiaryFixed\",\r\n    \"tertiaryFixedDim\",\r\n    \"onTertiaryFixed\",\r\n    \"onTertiaryFixedVariant\",\r\n  ];\r\n\r\n  mode.forEach((mo) => {\r\n    contrast.forEach((co) => {\r\n      const param = colorScheme(sourceColor, schemeType, mo, co);\r\n      colorName.forEach((cn) => {\r\n        setColorFromScheme(param, cn);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\n// color from image\r\nfunction convertImageToARGB(file) {\r\n  return new Promise((resolve, reject) => {\r\n    if (!file || !file.type.startsWith(\"image/\")) {\r\n      reject(\"Invalid file type\");\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      const img = new Image();\r\n      img.onload = function () {\r\n        const maxDimension = 128;\r\n        let width = img.width;\r\n        let height = img.height;\r\n\r\n        if (width > maxDimension || height > maxDimension) {\r\n          if (width > height) {\r\n            height = Math.round((height * maxDimension) / width);\r\n            width = maxDimension;\r\n          } else {\r\n            width = Math.round((width * maxDimension) / height);\r\n            height = maxDimension;\r\n          }\r\n        }\r\n\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0, width, height);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const pixels = imageDataToARGB(imageData);\r\n        resolve(pixels);\r\n      };\r\n      img.src = e.target.result;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  });\r\n}\r\n\r\nfunction imageDataToARGB(imageData) {\r\n  const width = imageData.width;\r\n  const height = imageData.height;\r\n  const data = imageData.data;\r\n  const pixels = new Array(width * height);\r\n\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    const r = data[i];\r\n    const g = data[i + 1];\r\n    const b = data[i + 2];\r\n    const a = data[i + 3];\r\n    const argb = (a << 24) | (r << 16) | (g << 8) | b;\r\n    pixels[i / 4] = argb;\r\n  }\r\n  return pixels;\r\n}\r\n\r\nfunction colorFromImage(file) {\r\n  convertImageToARGB(file).then((pixels) => {\r\n    const quantizerResult = _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.QuantizerCelebi.quantize(pixels, 128);\r\n    const colors = _material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.Score.score(quantizerResult);\r\n    return (0,_material_material_color_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.hexFromArgb)(colors[0])\r\n    // updateColors(hexFromArgb(colors[0]));\r\n  });\r\n}\r\n\n\n//# sourceURL=webpack://material-color-css/./node_modules/material-color-css/src/material-colors.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/example.js");
/******/ 	
/******/ })()
;